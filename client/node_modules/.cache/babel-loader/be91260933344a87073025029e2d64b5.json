{"ast":null,"code":"\"use strict\";\n/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useKeyDownHandler = exports.useClickHandler = void 0;\n\nvar react_1 = require(\"react\");\n\nvar recoil_1 = require(\"recoil\");\n\nvar file_actions_recoil_1 = require(\"../../recoil/file-actions.recoil\");\n\nexports.useClickHandler = function (onSingleClick, onDoubleClick) {\n  var doubleClickDelay = recoil_1.useRecoilValue(file_actions_recoil_1.doubleClickDelayState);\n  var counter = react_1.useRef({\n    clickCount: 0,\n    clickTimeout: null\n  });\n  return react_1.useCallback(function (event) {\n    var mouseClickEvent = {\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey\n    };\n    counter.current.clickCount++;\n\n    if (counter.current.clickCount === 1) {\n      if (onSingleClick) {\n        event.preventDefault();\n        onSingleClick(mouseClickEvent);\n      }\n\n      counter.current.clickCount = 1; // @ts-ignore\n\n      counter.current.clickTimeout = setTimeout(function () {\n        return counter.current.clickCount = 0;\n      }, doubleClickDelay);\n    } else if (counter.current.clickCount === 2) {\n      if (onDoubleClick) {\n        event.preventDefault();\n        onDoubleClick(mouseClickEvent);\n      }\n\n      if (typeof counter.current.clickTimeout === 'number') {\n        clearTimeout(counter.current.clickTimeout);\n        counter.current.clickTimeout = null;\n        counter.current.clickCount = 0;\n      }\n    }\n  }, [doubleClickDelay, onSingleClick, onDoubleClick, counter]);\n};\n\nexports.useKeyDownHandler = function (onKeyboardClick) {\n  return react_1.useCallback(function (event) {\n    if (!onKeyboardClick) return;\n    var keyboardClickEvent = {\n      enterKey: event.nativeEvent.code === 'Enter',\n      spaceKey: event.nativeEvent.code === 'Space',\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey\n    };\n\n    if (keyboardClickEvent.spaceKey || keyboardClickEvent.enterKey) {\n      event.preventDefault();\n      event.stopPropagation();\n      onKeyboardClick(keyboardClickEvent);\n    }\n  }, [onKeyboardClick]);\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useRefCallbackWithErrorHandling = exports.useClickListener = exports.useInstanceVariable = exports.useStaticValue = exports.useDebounce = void 0;\n\nvar react_1 = require(\"react\");\n\nvar logger_1 = require(\"./logger\");\n\nexports.useDebounce = function (value, delay) {\n  var _a = react_1.useState(value),\n      debouncedValue = _a[0],\n      setDebouncedValue = _a[1];\n\n  react_1.useEffect(function () {\n    var handler = setTimeout(function () {\n      setDebouncedValue(value);\n    }, delay);\n    return function () {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return [debouncedValue, setDebouncedValue];\n};\n\nvar UNINITIALIZED_SENTINEL = {};\n\nexports.useStaticValue = function (factory) {\n  var valueRef = react_1.useRef(UNINITIALIZED_SENTINEL);\n  if (valueRef.current === UNINITIALIZED_SENTINEL) valueRef.current = factory();\n  return valueRef.current;\n};\n\nexports.useInstanceVariable = function (value) {\n  var ref = react_1.useRef(value);\n  react_1.useEffect(function () {\n    ref.current = value;\n  }, [ref, value]);\n  return ref;\n};\n\nexports.useClickListener = function (params) {\n  var onClick = params.onClick,\n      onInsideClick = params.onInsideClick,\n      onOutsideClick = params.onOutsideClick;\n  var triggerComponentRef = react_1.useRef(null);\n  var clickListener = react_1.useCallback(function (event) {\n    var anyTarget = event.target;\n\n    if (!triggerComponentRef.current || triggerComponentRef.current.contains(anyTarget)) {\n      // Click originated from inside.\n      if (onInsideClick) onInsideClick(event);\n    } else {\n      // Click originated from outside inside.\n      var targetIsAButton = anyTarget && typeof anyTarget.tagName === 'string' && anyTarget.tagName.toLowerCase() === 'button';\n      if (onOutsideClick) onOutsideClick(event, targetIsAButton);\n    }\n\n    if (onClick) onClick(event);\n  }, [onClick, onInsideClick, onOutsideClick, triggerComponentRef]);\n  react_1.useEffect(function () {\n    document.addEventListener('mousedown', clickListener, false);\n    return function () {\n      document.removeEventListener('mousedown', clickListener, false);\n    };\n  }, [clickListener]);\n  return triggerComponentRef;\n};\n\nexports.useRefCallbackWithErrorHandling = function (callbackFunc, displayName) {\n  var callbackFuncRef = exports.useInstanceVariable(callbackFunc);\n  return react_1.useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    try {\n      callbackFuncRef.current.apply(callbackFuncRef, args);\n    } catch (error) {\n      logger_1.Logger.error(\"An error occurred inside \" + displayName + \":\", error);\n    }\n  }, [callbackFuncRef, displayName]);\n};","map":null,"metadata":{},"sourceType":"script"}
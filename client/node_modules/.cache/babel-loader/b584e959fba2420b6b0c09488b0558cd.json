{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\n\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _filter_builder = require(\"./../filter_builder\");\n\nvar _filter_builder2 = _interopRequireDefault(_filter_builder);\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _scroll_view = require(\"./../scroll_view\");\n\nvar _scroll_view2 = _interopRequireDefault(_scroll_view);\n\nvar _popup = require(\"./../popup\");\n\nvar _popup2 = _interopRequireDefault(_popup);\n\nvar _accessibility = require(\"../shared/accessibility\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar FilterBuilderView = _uiGrid_core2.default.View.inherit({\n  _renderCore: function () {\n    this._updatePopupOptions();\n  },\n  _updatePopupOptions: function () {\n    if (this.option(\"filterBuilderPopup.visible\")) {\n      this._initPopup();\n    } else {\n      if (this._filterBuilderPopup) {\n        this._filterBuilderPopup.hide();\n      }\n    }\n  },\n  _disposePopup: function () {\n    if (this._filterBuilderPopup) {\n      this._filterBuilderPopup.dispose();\n\n      this._filterBuilderPopup = void 0;\n    }\n\n    if (this._filterBuilder) {\n      this._filterBuilder.dispose();\n\n      this._filterBuilder = void 0;\n    }\n  },\n  _initPopup: function () {\n    var that = this;\n\n    that._disposePopup();\n\n    that._filterBuilderPopup = that._createComponent(that.element(), _popup2.default, (0, _extend.extend)({\n      title: _message2.default.format(\"dxDataGrid-filterBuilderPopupTitle\"),\n      contentTemplate: function ($contentElement) {\n        return that._getPopupContentTemplate($contentElement);\n      },\n      onOptionChanged: function (args) {\n        if (\"visible\" === args.name) {\n          that.option(\"filterBuilderPopup.visible\", args.value);\n        }\n      },\n      toolbarItems: that._getPopupToolbarItems()\n    }, that.option(\"filterBuilderPopup\"), {\n      onHidden: function (e) {\n        (0, _accessibility.restoreFocus)(that);\n\n        that._disposePopup();\n      }\n    }));\n  },\n  _getPopupContentTemplate: function (contentElement) {\n    var $contentElement = (0, _renderer2.default)(contentElement);\n    var $filterBuilderContainer = (0, _renderer2.default)(\"<div>\").appendTo((0, _renderer2.default)(contentElement));\n    this._filterBuilder = this._createComponent($filterBuilderContainer, _filter_builder2.default, (0, _extend.extend)({\n      value: this.option(\"filterValue\"),\n      fields: this.getController(\"columns\").getFilteringColumns()\n    }, this.option(\"filterBuilder\"), {\n      customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\n    }));\n\n    this._createComponent($contentElement, _scroll_view2.default, {\n      direction: \"both\"\n    });\n  },\n  _getPopupToolbarItems: function () {\n    var that = this;\n    return [{\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: _message2.default.format(\"OK\"),\n        onClick: function (e) {\n          var filter = that._filterBuilder.option(\"value\");\n\n          that.option(\"filterValue\", filter);\n\n          that._filterBuilderPopup.hide();\n        }\n      }\n    }, {\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: _message2.default.format(\"Cancel\"),\n        onClick: function (e) {\n          that._filterBuilderPopup.hide();\n        }\n      }\n    }];\n  },\n  optionChanged: function (args) {\n    switch (args.name) {\n      case \"filterBuilder\":\n      case \"filterBuilderPopup\":\n        this._invalidate();\n\n        args.handled = true;\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\nmodule.exports = {\n  defaultOptions: function () {\n    return {\n      filterBuilder: {\n        groupOperationDescriptions: {\n          and: _message2.default.format(\"dxFilterBuilder-and\"),\n          or: _message2.default.format(\"dxFilterBuilder-or\"),\n          notAnd: _message2.default.format(\"dxFilterBuilder-notAnd\"),\n          notOr: _message2.default.format(\"dxFilterBuilder-notOr\")\n        },\n        filterOperationDescriptions: {\n          between: _message2.default.format(\"dxFilterBuilder-filterOperationBetween\"),\n          equal: _message2.default.format(\"dxFilterBuilder-filterOperationEquals\"),\n          notEqual: _message2.default.format(\"dxFilterBuilder-filterOperationNotEquals\"),\n          lessThan: _message2.default.format(\"dxFilterBuilder-filterOperationLess\"),\n          lessThanOrEqual: _message2.default.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\n          greaterThan: _message2.default.format(\"dxFilterBuilder-filterOperationGreater\"),\n          greaterThanOrEqual: _message2.default.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\n          startsWith: _message2.default.format(\"dxFilterBuilder-filterOperationStartsWith\"),\n          contains: _message2.default.format(\"dxFilterBuilder-filterOperationContains\"),\n          notContains: _message2.default.format(\"dxFilterBuilder-filterOperationNotContains\"),\n          endsWith: _message2.default.format(\"dxFilterBuilder-filterOperationEndsWith\"),\n          isBlank: _message2.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\n          isNotBlank: _message2.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\n        }\n      },\n      filterBuilderPopup: {}\n    };\n  },\n  views: {\n    filterBuilderView: FilterBuilderView\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
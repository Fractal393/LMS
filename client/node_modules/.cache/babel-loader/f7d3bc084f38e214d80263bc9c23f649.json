{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _fecha = require('fecha');\n\nvar _fecha2 = _interopRequireDefault(_fecha);\n\nvar _filesize = require('filesize');\n\nvar _filesize2 = _interopRequireDefault(_filesize);\n\nvar _translations = require('./translations');\n\nvar _translations2 = _interopRequireDefault(_translations);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar TABLET_WIDTH = 1024;\nvar MOBILE_WIDTH = 640;\n\nfunction formatSize(viewLayoutOptions, _ref) {\n  var cellData = _ref.cellData,\n      columnData = _ref.columnData,\n      columnIndex = _ref.columnIndex,\n      dataKey = _ref.dataKey,\n      isScrolling = _ref.isScrolling,\n      rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex;\n\n  if (typeof cellData !== 'undefined' && viewLayoutOptions.humanReadableSize) {\n    return (0, _filesize2.default)(cellData);\n  }\n\n  return cellData || 'â€”';\n}\n\nfunction formatDate(viewLayoutOptions, _ref2) {\n  var cellData = _ref2.cellData,\n      columnData = _ref2.columnData,\n      columnIndex = _ref2.columnIndex,\n      dataKey = _ref2.dataKey,\n      isScrolling = _ref2.isScrolling,\n      rowData = _ref2.rowData,\n      rowIndex = _ref2.rowIndex;\n\n  if (cellData) {\n    var dateTimePattern = viewLayoutOptions.dateTimePattern;\n    return _fecha2.default.format(new Date().setTime(cellData), dateTimePattern);\n  }\n\n  return '';\n}\n\nvar listViewLayout = function listViewLayout(viewLayoutOptions) {\n  var getMessage = _translations2.default.bind(null, viewLayoutOptions.locale);\n\n  return [{\n    elementType: 'Column',\n    elementProps: {\n      key: \"name\",\n      dataKey: \"name\",\n      width: 48,\n      label: getMessage('title'),\n      flexGrow: 1,\n      cellRenderer: {\n        elementType: 'NameCell',\n        callArguments: [viewLayoutOptions]\n      },\n      headerRenderer: {\n        elementType: 'HeaderCell',\n        callArguments: [viewLayoutOptions]\n      },\n      disableSort: false\n    }\n  }, {\n    elementType: 'Column',\n    elementProps: {\n      key: \"size\",\n      width: 100,\n      dataKey: \"size\",\n      label: getMessage('fileSize'),\n      flexGrow: viewLayoutOptions.width > TABLET_WIDTH ? 1 : 0,\n      cellRenderer: {\n        elementType: 'Cell',\n        callArguments: [(0, _extends3.default)({}, viewLayoutOptions, {\n          getData: formatSize\n        })]\n      },\n      headerRenderer: {\n        elementType: 'HeaderCell',\n        callArguments: [viewLayoutOptions]\n      },\n      disableSort: true\n    }\n  }, viewLayoutOptions.width > MOBILE_WIDTH && {\n    elementType: 'Column',\n    elementProps: {\n      key: \"modifiedTime\",\n      width: 100,\n      dataKey: \"modifiedTime\",\n      label: getMessage('lastModified'),\n      flexGrow: 1,\n      cellRenderer: {\n        elementType: 'Cell',\n        callArguments: [(0, _extends3.default)({}, viewLayoutOptions, {\n          getData: formatDate\n        })]\n      },\n      headerRenderer: {\n        elementType: 'HeaderCell',\n        callArguments: [viewLayoutOptions]\n      },\n      disableSort: false\n    }\n  }];\n};\n\nexports.default = listViewLayout;","map":null,"metadata":{},"sourceType":"script"}
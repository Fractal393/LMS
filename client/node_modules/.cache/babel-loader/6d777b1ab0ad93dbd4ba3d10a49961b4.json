{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readLocalFile = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar readLocalFile = function () {\n  var _ref = (0, _asyncToGenerator3.default)(\n  /*#__PURE__*/\n  _regenerator2.default.mark(function _callee() {\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt('return', new Promise(function (resolve, reject) {\n              var uploadInput = document.createElement(\"input\");\n              uploadInput.addEventListener('change', function (_) {\n                var file = uploadInput.files[0];\n                resolve({\n                  type: file.type,\n                  name: file.name,\n                  file: file\n                });\n              }); // This input element in IE11 becomes visible after it is added on the page\n              // Hide an input element\n\n              uploadInput.style.visibility = 'hidden';\n              uploadInput.type = \"file\";\n              document.body.appendChild(uploadInput);\n              uploadInput.click();\n              document.body.removeChild(uploadInput);\n            }));\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function readLocalFile() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.readLocalFile = readLocalFile;","map":null,"metadata":{},"sourceType":"script"}
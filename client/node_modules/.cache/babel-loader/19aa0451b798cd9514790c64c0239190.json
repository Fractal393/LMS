{"ast":null,"code":"import { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Query, DataManager } from '@syncfusion/ej2-data';\n/**\n * `filter operators` render boolean column.\n * @hidden\n */\n\nvar FlMenuOptrUI =\n/** @class */\nfunction () {\n  function FlMenuOptrUI(parent, customFltrOperators, serviceLocator, filterSettings) {\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.filterSettings = filterSettings;\n    this.customFilterOperators = customFltrOperators;\n  }\n  /**\n   * @hidden\n   */\n\n\n  FlMenuOptrUI.prototype.renderOperatorUI = function (dlgConetntEle, target, column, dlgObj) {\n    this.dialogObj = dlgObj;\n    var optr = column.type + 'Operator';\n    this.optrData = this.customOptr = !isNullOrUndefined(this.parent.filterSettings.operators) && !isNullOrUndefined(this.parent.filterSettings.operators[optr]) ? this.parent.filterSettings.operators[optr] : this.customFilterOperators[optr];\n    var dropDatasource = this.customOptr;\n    var selectedValue = this.dropSelectedVal(column, optr);\n    var optrDiv = this.parent.createElement('div', {\n      className: 'e-flm_optrdiv'\n    });\n    dlgConetntEle.appendChild(optrDiv);\n    var optrInput = this.parent.createElement('input', {\n      id: column.uid + '-floptr'\n    });\n    optrDiv.appendChild(optrInput);\n    this.dropOptr = new DropDownList({\n      dataSource: dropDatasource,\n      fields: {\n        text: 'text',\n        value: 'value'\n      },\n      open: this.dropDownOpen.bind(this),\n      cssClass: 'e-popup-flmenu',\n      text: selectedValue\n    });\n    this.dropOptr.appendTo('#' + column.uid + '-floptr');\n  };\n\n  FlMenuOptrUI.prototype.dropDownOpen = function (args) {\n    args.popup.element.style.zIndex = (this.dialogObj.zIndex + 1).toString();\n  };\n\n  FlMenuOptrUI.prototype.dropSelectedVal = function (col, optr) {\n    var selValue = '';\n    var columns = this.parent.filterSettings.columns;\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (col.field === column.field || col.isForeignColumn() && col.foreignKeyValue === column.field) {\n        var selectedField = new DataManager(this.optrData).executeLocal(new Query().where('value', 'equal', column.operator));\n        selValue = !isNullOrUndefined(selectedField[0]) ? selectedField[0].text : '';\n      }\n    }\n\n    if (selValue === '') {\n      // rewuired or not\n      if (col.filter.operator) {\n        var optrLen = Object.keys(this.optrData).length;\n\n        for (var i = 0; i < optrLen; i++) {\n          if (this.optrData[i].value === col.filter.operator) {\n            selValue = this.optrData[i].text;\n          }\n        }\n      } else {\n        selValue = this.optrData[0].text;\n      }\n    }\n\n    return selValue;\n  };\n  /**\n   * @hidden\n   */\n\n\n  FlMenuOptrUI.prototype.getFlOperator = function () {\n    return this.dropOptr.value;\n  };\n\n  return FlMenuOptrUI;\n}();\n\nexport { FlMenuOptrUI };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (file_management/object_provider.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _array = require(\"../core/utils/array\");\n\nvar _common = require(\"../core/utils/common\");\n\nvar _data = require(\"../core/utils/data\");\n\nvar _guid = require(\"../core/guid\");\n\nvar _guid2 = _interopRequireDefault(_guid);\n\nvar _type = require(\"../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _errors = require(\"../data/errors\");\n\nvar _deferred = require(\"../core/utils/deferred\");\n\nvar _window = require(\"../core/utils/window\");\n\nvar _file_saver = require(\"../exporter/file_saver\");\n\nvar _ui = require(\"../ui/widget/ui.errors\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _jszip = require(\"jszip\");\n\nvar _jszip2 = _interopRequireDefault(_jszip);\n\nvar _provider_base = require(\"./provider_base\");\n\nvar _provider_base2 = _interopRequireDefault(_provider_base);\n\nvar _errors2 = require(\"./errors\");\n\nvar _errors3 = _interopRequireDefault(_errors2);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar window = (0, _window.getWindow)();\n\nvar ObjectFileSystemProvider = function (_FileSystemProviderBa) {\n  _inherits(ObjectFileSystemProvider, _FileSystemProviderBa);\n\n  var _super = _createSuper(ObjectFileSystemProvider);\n\n  function ObjectFileSystemProvider(options) {\n    var _this;\n\n    _classCallCheck(this, ObjectFileSystemProvider);\n\n    options = (0, _common.ensureDefined)(options, {});\n    _this = _super.call(this, options);\n    var initialArray = options.data;\n\n    if (initialArray && !Array.isArray(initialArray)) {\n      throw _errors.errors.Error(\"E4006\");\n    }\n\n    var itemsExpr = options.itemsExpr || \"items\";\n    _this._subFileItemsGetter = (0, _data.compileGetter)(itemsExpr);\n    _this._subFileItemsSetter = _this._getSetter(itemsExpr);\n    var contentExpr = options.contentExpr || \"content\";\n    _this._contentGetter = (0, _data.compileGetter)(contentExpr);\n    _this._contentSetter = _this._getSetter(contentExpr);\n\n    var nameExpr = _this._getNameExpr(options);\n\n    _this._nameSetter = _this._getSetter(nameExpr);\n\n    var isDirExpr = _this._getIsDirExpr(options);\n\n    _this._getIsDirSetter = _this._getSetter(isDirExpr);\n\n    var keyExpr = _this._getKeyExpr(options);\n\n    _this._keySetter = _this._getSetter(keyExpr);\n\n    var sizeExpr = _this._getSizeExpr(options);\n\n    _this._sizeSetter = _this._getSetter(sizeExpr);\n\n    var dateModifiedExpr = _this._getDateModifiedExpr(options);\n\n    _this._dateModifiedSetter = _this._getSetter(dateModifiedExpr);\n    _this._data = initialArray || [];\n    return _this;\n  }\n\n  _createClass(ObjectFileSystemProvider, [{\n    key: \"getItems\",\n    value: function (parentDir) {\n      var _this2 = this;\n\n      return this._executeActionAsDeferred(function () {\n        return _this2._getItems(parentDir);\n      }, true);\n    }\n  }, {\n    key: \"renameItem\",\n    value: function (item, name) {\n      var _this3 = this;\n\n      return this._executeActionAsDeferred(function () {\n        return _this3._renameItemCore(item, name);\n      });\n    }\n  }, {\n    key: \"_renameItemCore\",\n    value: function (item, name) {\n      if (!item) {\n        return;\n      }\n\n      var dataItem = this._findDataObject(item);\n\n      this._nameSetter(dataItem, name);\n\n      item.name = name;\n      item.key = this._ensureDataObjectKey(dataItem);\n    }\n  }, {\n    key: \"createDirectory\",\n    value: function (parentDir, name) {\n      var _this4 = this;\n\n      return this._executeActionAsDeferred(function () {\n        _this4._validateDirectoryExists(parentDir);\n\n        _this4._createDataObject(parentDir, name, true);\n      });\n    }\n  }, {\n    key: \"deleteItems\",\n    value: function (items) {\n      var _this5 = this;\n\n      return items.map(function (item) {\n        return _this5._executeActionAsDeferred(function () {\n          return _this5._deleteItem(item);\n        });\n      });\n    }\n  }, {\n    key: \"moveItems\",\n    value: function (items, destinationDir) {\n      var _this6 = this;\n\n      var destinationDataItem = this._findDataObject(destinationDir);\n\n      var array = this._getDirectoryDataItems(destinationDataItem);\n\n      var deferreds = items.map(function (item) {\n        return _this6._executeActionAsDeferred(function () {\n          _this6._checkAbilityToMoveOrCopyItem(item, destinationDir);\n\n          var dataItem = _this6._findDataObject(item);\n\n          _this6._deleteItem(item);\n\n          array.push(dataItem);\n        });\n      });\n\n      this._updateHasSubDirs(destinationDir);\n\n      return deferreds;\n    }\n  }, {\n    key: \"copyItems\",\n    value: function (items, destinationDir) {\n      var _this7 = this;\n\n      var destinationDataItem = this._findDataObject(destinationDir);\n\n      var array = this._getDirectoryDataItems(destinationDataItem);\n\n      var deferreds = items.map(function (item) {\n        return _this7._executeActionAsDeferred(function () {\n          _this7._checkAbilityToMoveOrCopyItem(item, destinationDir);\n\n          var dataItem = _this7._findDataObject(item);\n\n          var copiedItem = _this7._createCopy(dataItem);\n\n          array.push(copiedItem);\n        });\n      });\n\n      this._updateHasSubDirs(destinationDir);\n\n      return deferreds;\n    }\n  }, {\n    key: \"uploadFileChunk\",\n    value: function (fileData, chunksInfo, destinationDirectory) {\n      var _this8 = this;\n\n      if (chunksInfo.chunkIndex > 0) {\n        return chunksInfo.customData.deferred;\n      }\n\n      this._validateDirectoryExists(destinationDirectory);\n\n      var deferred = chunksInfo.customData.deferred = new _deferred.Deferred();\n\n      var reader = this._createFileReader();\n\n      reader.readAsDataURL(fileData);\n\n      reader.onload = function () {\n        var content = reader.result.split(\",\")[1];\n\n        var dataObj = _this8._createDataObject(destinationDirectory, fileData.name, false);\n\n        _this8._sizeSetter(dataObj, fileData.size);\n\n        _this8._dateModifiedSetter(dataObj, fileData.lastModifiedDate);\n\n        _this8._contentSetter(dataObj, content);\n\n        deferred.resolve();\n      };\n\n      reader.onerror = function (error) {\n        return deferred.reject(error);\n      };\n\n      return deferred;\n    }\n  }, {\n    key: \"downloadItems\",\n    value: function (items) {\n      if (1 === items.length) {\n        this._downloadSingleFile(items[0]);\n      } else {\n        this._downloadMultipleFiles(items);\n      }\n    }\n  }, {\n    key: \"_downloadSingleFile\",\n    value: function (file) {\n      var content = this._getFileContent(file);\n\n      var byteString = window.atob(content);\n      var arrayBuffer = new ArrayBuffer(byteString.length);\n      var array = new Uint8Array(arrayBuffer);\n\n      for (var i = 0; i < byteString.length; i++) {\n        array[i] = byteString.charCodeAt(i);\n      }\n\n      var blob = new window.Blob([arrayBuffer], {\n        type: \"application/octet-stream\"\n      });\n\n      _file_saver.fileSaver.saveAs(file.name, null, blob);\n    }\n  }, {\n    key: \"_downloadMultipleFiles\",\n    value: function (files) {\n      var _this9 = this;\n\n      var jsZip = getJSZip();\n      var zip = new jsZip();\n      files.forEach(function (file) {\n        return zip.file(file.name, _this9._getFileContent(file), {\n          base64: true\n        });\n      });\n      var options = {\n        type: \"blob\",\n        compression: \"DEFLATE\",\n        mimeType: \"application/zip\"\n      };\n      var deferred = new _deferred.Deferred();\n\n      if (zip.generateAsync) {\n        zip.generateAsync(options).then(deferred.resolve);\n      } else {\n        deferred.resolve(zip.generate(options));\n      }\n\n      deferred.done(function (blob) {\n        return _file_saver.fileSaver.saveAs(\"files.zip\", null, blob);\n      });\n    }\n  }, {\n    key: \"_getFileContent\",\n    value: function (file) {\n      var dataItem = this._findDataObject(file);\n\n      return this._contentGetter(dataItem) || \"\";\n    }\n  }, {\n    key: \"_validateDirectoryExists\",\n    value: function (directoryInfo) {\n      if (!this._isFileItemExists(directoryInfo) || this._isDirGetter(directoryInfo.fileItem)) {\n        throw {\n          errorId: _errors3.default.DirectoryNotFound,\n          fileItem: directoryInfo\n        };\n      }\n    }\n  }, {\n    key: \"_checkAbilityToMoveOrCopyItem\",\n    value: function (item, destinationDir) {\n      var _this10 = this;\n\n      var dataItem = this._findDataObject(item);\n\n      var itemKey = this._getKeyFromDataObject(dataItem, item.parentPath);\n\n      var pathInfo = destinationDir.getFullPathInfo();\n      var currentPath = \"\";\n      pathInfo.forEach(function (info) {\n        currentPath = (0, _utils.pathCombine)(currentPath, info.name);\n\n        var pathKey = _this10._getDataObjectKey(info.key, currentPath);\n\n        if (pathKey === itemKey) {\n          throw {\n            errorId: _errors3.default.Other,\n            fileItem: item\n          };\n        }\n      });\n    }\n  }, {\n    key: \"_createDataObject\",\n    value: function (parentDir, name, isDirectory) {\n      var dataObj = {};\n\n      this._nameSetter(dataObj, name);\n\n      this._getIsDirSetter(dataObj, isDirectory);\n\n      this._keySetter(dataObj, String(new _guid2.default()));\n\n      var parentDataItem = this._findDataObject(parentDir);\n\n      var array = this._getDirectoryDataItems(parentDataItem);\n\n      array.push(dataObj);\n\n      if (isDirectory) {\n        this._updateHasSubDirs(parentDir);\n      }\n\n      return dataObj;\n    }\n  }, {\n    key: \"_createCopy\",\n    value: function (dataObj) {\n      var _this11 = this;\n\n      var copyObj = {};\n\n      this._nameSetter(copyObj, this._nameGetter(dataObj));\n\n      this._getIsDirSetter(copyObj, this._isDirGetter(dataObj));\n\n      var items = this._subFileItemsGetter(dataObj);\n\n      if (Array.isArray(items)) {\n        var itemsCopy = [];\n        items.forEach(function (childItem) {\n          var childCopy = _this11._createCopy(childItem);\n\n          itemsCopy.push(childCopy);\n        });\n\n        this._subFileItemsSetter(copyObj, itemsCopy);\n      }\n\n      return copyObj;\n    }\n  }, {\n    key: \"_deleteItem\",\n    value: function (fileItem) {\n      var dataItem = this._findDataObject(fileItem);\n\n      var parentDirDataObj = this._findFileItemObj(fileItem.pathInfo);\n\n      var array = this._getDirectoryDataItems(parentDirDataObj);\n\n      var index = array.indexOf(dataItem);\n      array.splice(index, 1);\n    }\n  }, {\n    key: \"_getDirectoryDataItems\",\n    value: function (directoryDataObj) {\n      if (!directoryDataObj) {\n        return this._data;\n      }\n\n      var dataItems = this._subFileItemsGetter(directoryDataObj);\n\n      if (!Array.isArray(dataItems)) {\n        dataItems = [];\n\n        this._subFileItemsSetter(directoryDataObj, dataItems);\n      }\n\n      return dataItems;\n    }\n  }, {\n    key: \"_getItems\",\n    value: function (parentDir) {\n      this._validateDirectoryExists(parentDir);\n\n      var pathInfo = parentDir.getFullPathInfo();\n      var parentDirKey = pathInfo && pathInfo.length > 0 ? pathInfo[pathInfo.length - 1].key : null;\n      var dirFileObjects = this._data;\n\n      if (parentDirKey) {\n        var directoryEntry = this._findFileItemObj(pathInfo);\n\n        dirFileObjects = directoryEntry && this._subFileItemsGetter(directoryEntry) || [];\n      }\n\n      this._ensureKeysForDuplicateNameItems(dirFileObjects);\n\n      return this._convertDataObjectsToFileItems(dirFileObjects, pathInfo);\n    }\n  }, {\n    key: \"_ensureKeysForDuplicateNameItems\",\n    value: function (dataObjects) {\n      var _this12 = this;\n\n      var names = {};\n      dataObjects.forEach(function (obj) {\n        var name = _this12._nameGetter(obj);\n\n        if (names[name]) {\n          _this12._ensureDataObjectKey(obj);\n        } else {\n          names[name] = true;\n        }\n      });\n    }\n  }, {\n    key: \"_findDataObject\",\n    value: function (item) {\n      if (item.isRoot()) {\n        return null;\n      }\n\n      var result = this._findFileItemObj(item.getFullPathInfo());\n\n      if (!result) {\n        throw {\n          errorId: item.isDirectory ? _errors3.default.DirectoryNotFound : _errors3.default.FileNotFound,\n          fileItem: item\n        };\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_findFileItemObj\",\n    value: function (pathInfo) {\n      var _this13 = this;\n\n      if (!Array.isArray(pathInfo)) {\n        pathInfo = [];\n      }\n\n      var currentPath = \"\";\n      var fileItemObj = null;\n      var fileItemObjects = this._data;\n\n      var _loop = function (i) {\n        fileItemObj = (0, _array.find)(fileItemObjects, function (item) {\n          var hasCorrectFileItemType = _this13._isDirGetter(item) || i === pathInfo.length - 1;\n          return _this13._getKeyFromDataObject(item, currentPath) === pathInfo[i].key && _this13._nameGetter(item) === pathInfo[i].name && hasCorrectFileItemType;\n        });\n\n        if (fileItemObj) {\n          currentPath = (0, _utils.pathCombine)(currentPath, _this13._nameGetter(fileItemObj));\n          fileItemObjects = _this13._subFileItemsGetter(fileItemObj);\n        }\n      };\n\n      for (var i = 0; i < pathInfo.length && (0 === i || fileItemObj); i++) {\n        _loop(i);\n      }\n\n      return fileItemObj;\n    }\n  }, {\n    key: \"_getKeyFromDataObject\",\n    value: function (dataObj, defaultKeyPrefix) {\n      var key = this._keyGetter(dataObj);\n\n      var relativeName = (0, _utils.pathCombine)(defaultKeyPrefix, this._nameGetter(dataObj));\n      return this._getDataObjectKey(key, relativeName);\n    }\n  }, {\n    key: \"_getDataObjectKey\",\n    value: function (key, relativeName) {\n      return key ? key : relativeName;\n    }\n  }, {\n    key: \"_ensureDataObjectKey\",\n    value: function (dataObj) {\n      var key = this._keyGetter(dataObj);\n\n      if (!key) {\n        key = String(new _guid2.default());\n\n        this._keySetter(dataObj, key);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"_updateHasSubDirs\",\n    value: function (dir) {\n      if (dir && !dir.isRoot()) {\n        var dataItem = this._findDataObject(dir);\n\n        dir.hasSubDirectories = this._hasSubDirs(dataItem);\n      }\n    }\n  }, {\n    key: \"_hasSubDirs\",\n    value: function (dataObj) {\n      var subItems = (0, _common.ensureDefined)(this._subFileItemsGetter(dataObj), []);\n\n      if (!Array.isArray(subItems)) {\n        return true;\n      }\n\n      for (var i = 0; i < subItems.length; i++) {\n        if (true === this._isDirGetter(subItems[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_getSetter\",\n    value: function (expr) {\n      return _type2.default.isFunction(expr) ? expr : (0, _data.compileSetter)(expr);\n    }\n  }, {\n    key: \"_isFileItemExists\",\n    value: function (fileItem) {\n      return fileItem.isDirectory && fileItem.isRoot() || !!this._findFileItemObj(fileItem.getFullPathInfo());\n    }\n  }, {\n    key: \"_createFileReader\",\n    value: function () {\n      return new window.FileReader();\n    }\n  }]);\n\n  return ObjectFileSystemProvider;\n}(_provider_base2.default);\n\nfunction getJSZip() {\n  if (!_jszip2.default) {\n    throw _ui2.default.Error(\"E1041\", \"JSZip\");\n  }\n\n  return _jszip2.default;\n}\n\nmodule.exports = ObjectFileSystemProvider;\nmodule.exports.default = module.exports;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fileActionSelectedFilesCountState = exports.fileActionSelectedFilesState = exports.fileActionDataState = exports.doubleClickDelayState = exports.requestFileActionState = exports.dispatchFileActionState = exports.fileActionMapState = exports.fileActionsState = void 0;\n\nvar recoil_1 = require(\"recoil\");\n\nvar constants_1 = require(\"../util/constants\");\n\nvar selection_recoil_1 = require(\"./selection.recoil\"); //\n// ==== Atoms\n\n\nexports.fileActionsState = recoil_1.atom({\n  key: 'fileActionsState',\n  default: []\n});\nexports.fileActionMapState = recoil_1.atom({\n  key: 'fileActionMapState',\n  default: {}\n});\nexports.dispatchFileActionState = recoil_1.atom({\n  key: 'dispatchFileActionState',\n  default: constants_1.NOOP_FUNCTION\n});\nexports.requestFileActionState = recoil_1.atom({\n  key: 'requestFileActionState',\n  default: constants_1.NOOP_FUNCTION\n});\nexports.doubleClickDelayState = recoil_1.atom({\n  key: 'doubleClickDelayState',\n  default: 300\n}); //\n// ==== Selectors\n\nexports.fileActionDataState = recoil_1.selectorFamily({\n  key: 'fileActionDataState',\n  get: function (fileActionId) {\n    return function (_a) {\n      var get = _a.get;\n      if (!fileActionId) return null;\n      var fileActionMap = get(exports.fileActionMapState);\n      var fileAction = fileActionMap[fileActionId];\n      return fileAction !== null && fileAction !== void 0 ? fileAction : null;\n    };\n  }\n});\n/**\n * This Recoil selector family returns a subset of the global file selection that\n * satisfies filter of the provided file action.\n */\n\nexports.fileActionSelectedFilesState = recoil_1.selectorFamily({\n  key: 'fileActionSelectedFilesState',\n  get: function (fileActionId) {\n    return function (_a) {\n      var get = _a.get;\n      if (!fileActionId) return [];\n      var fileActionMap = get(exports.fileActionMapState);\n      var fileAction = fileActionMap[fileActionId];\n      if (!fileAction) return [];\n      var selectedFiles = get(selection_recoil_1.selectedFilesState);\n\n      if (fileAction.fileFilter) {\n        return selectedFiles.filter(fileAction.fileFilter);\n      } else {\n        return selectedFiles;\n      }\n    };\n  }\n});\nexports.fileActionSelectedFilesCountState = recoil_1.selectorFamily({\n  key: 'fileActionSelectedFilesCountState',\n  get: function (fileActionId) {\n    return function (_a) {\n      var get = _a.get;\n      var actionSelectedFiles = get(exports.fileActionSelectedFilesState(fileActionId));\n      return actionSelectedFiles.length;\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"script"}
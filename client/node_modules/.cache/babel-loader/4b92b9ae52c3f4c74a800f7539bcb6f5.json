{"ast":null,"code":"/**\r\n * DevExtreme (events/contextmenu.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar support = require(\"../core/utils/support\");\n\nvar devices = require(\"../core/devices\");\n\nvar Class = require(\"../core/class\");\n\nvar registerEvent = require(\"./core/event_registrator\");\n\nvar eventUtils = require(\"./utils\");\n\nvar holdEvent = require(\"./hold\");\n\nvar CONTEXTMENU_NAMESPACE = \"dxContexMenu\";\nvar CONTEXTMENU_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(\"contextmenu\", CONTEXTMENU_NAMESPACE);\nvar HOLD_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(holdEvent.name, CONTEXTMENU_NAMESPACE);\nvar CONTEXTMENU_EVENT_NAME = \"dxcontextmenu\";\nvar ContextMenu = Class.inherit({\n  setup: function (element) {\n    var $element = $(element);\n    eventsEngine.on($element, CONTEXTMENU_NAMESPACED_EVENT_NAME, this._contextMenuHandler.bind(this));\n\n    if (support.touch || devices.isSimulator()) {\n      eventsEngine.on($element, HOLD_NAMESPACED_EVENT_NAME, this._holdHandler.bind(this));\n    }\n  },\n  _holdHandler: function (e) {\n    if (eventUtils.isMouseEvent(e) && !devices.isSimulator()) {\n      return;\n    }\n\n    this._fireContextMenu(e);\n  },\n  _contextMenuHandler: function (e) {\n    this._fireContextMenu(e);\n  },\n  _fireContextMenu: function (e) {\n    return eventUtils.fireEvent({\n      type: CONTEXTMENU_EVENT_NAME,\n      originalEvent: e\n    });\n  },\n  teardown: function (element) {\n    eventsEngine.off(element, \".\" + CONTEXTMENU_NAMESPACE);\n  }\n});\nregisterEvent(CONTEXTMENU_EVENT_NAME, new ContextMenu());\nexports.name = CONTEXTMENU_EVENT_NAME;","map":null,"metadata":{},"sourceType":"script"}
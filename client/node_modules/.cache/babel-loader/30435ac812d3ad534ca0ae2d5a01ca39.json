{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\n\n\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\n\nvar PdfFillElement =\n/** @class */\nfunction (_super) {\n  __extends(PdfFillElement, _super);\n  /**\n   * Initializes a new instance of the `PdfFillElement` class.\n   * @protected\n   */\n\n\n  function PdfFillElement(arg1, arg2) {\n    var _this = _super.call(this) || this; // Fields\n\n    /**\n     * Internal variable to store pen.\n     * @private\n     */\n\n\n    _this.mbrush = null;\n\n    if (typeof arg1 === 'undefined') {//\n    } else if (arg1 instanceof PdfPen) {\n      _this = _super.call(this, arg1) || this;\n    } else {\n      _this.mbrush = arg2;\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n    // Properties\n\n    /**\n     * Gets or sets a brush of the element.\n     * @public\n     */\n    get: function () {\n      return this.mbrush;\n    },\n    set: function (value) {\n      this.mbrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n   * @protected\n   */\n\n  PdfFillElement.prototype.obtainPen = function () {\n    return this.mbrush == null && this.pen == null ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n  };\n\n  return PdfFillElement;\n}(PdfDrawElement);\n\nexport { PdfFillElement };","map":null,"metadata":{},"sourceType":"module"}
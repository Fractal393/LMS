{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DnDFileEntry = exports.DnDFileEntryType = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_dnd_1 = require(\"react-dnd\");\n\nvar react_dnd_html5_backend_1 = require(\"react-dnd-html5-backend\");\n\nvar recoil_1 = require(\"recoil\");\n\nvar special_actions_recoil_1 = require(\"../../recoil/special-actions.recoil\");\n\nvar special_actions_types_1 = require(\"../../types/special-actions.types\");\n\nvar file_helper_1 = require(\"../../util/file-helper\");\n\nvar ClickableFileEntry_1 = require(\"./ClickableFileEntry\");\n\nexports.DnDFileEntryType = 'chonky-file-entry';\nexports.DnDFileEntry = react_1.default.memo(function (props) {\n  var file = props.file;\n  var dispatchSpecialAction = recoil_1.useRecoilValue(special_actions_recoil_1.dispatchSpecialActionState); // For drag source\n\n  var canDrag = file_helper_1.FileHelper.isDraggable(file);\n  var onDragStart = react_1.useCallback(function () {\n    if (!file_helper_1.FileHelper.isDraggable(file)) return;\n    dispatchSpecialAction({\n      actionId: special_actions_types_1.SpecialAction.DragNDropStart,\n      dragSource: file\n    });\n  }, [dispatchSpecialAction, file]);\n  var onDragEnd = react_1.useCallback(function (item, monitor) {\n    var dropResult = monitor.getDropResult();\n\n    if (!file_helper_1.FileHelper.isDraggable(file) || !dropResult || !dropResult.dropTarget) {\n      return;\n    }\n\n    dispatchSpecialAction({\n      actionId: special_actions_types_1.SpecialAction.DragNDropEnd,\n      dragSource: file,\n      dropTarget: dropResult.dropTarget,\n      dropEffect: dropResult.dropEffect\n    });\n  }, [dispatchSpecialAction, file]); // For drop target\n\n  var onDrop = react_1.useCallback(function (item, monitor) {\n    if (!monitor.canDrop()) return;\n    var customDropResult = {\n      dropTarget: file\n    };\n    return customDropResult;\n  }, [file]);\n  var canDrop = react_1.useCallback(function (item) {\n    var isSameFile = file && item.file && file.id === item.file.id;\n    return file_helper_1.FileHelper.isDroppable(file) && !isSameFile;\n  }, [file]); // Create refs for react-dnd hooks\n\n  var _a = react_dnd_1.useDrag({\n    item: {\n      type: exports.DnDFileEntryType,\n      file: file\n    },\n    canDrag: canDrag,\n    begin: onDragStart,\n    end: onDragEnd,\n    collect: function (monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      dndIsDragging = _a[0].isDragging,\n      drag = _a[1],\n      preview = _a[2];\n\n  var _b = react_dnd_1.useDrop({\n    accept: exports.DnDFileEntryType,\n    drop: onDrop,\n    canDrop: canDrop,\n    collect: function (monitor) {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n      };\n    }\n  }),\n      _c = _b[0],\n      dndIsOver = _c.isOver,\n      dndCanDrop = _c.canDrop,\n      drop = _b[1];\n\n  react_1.useEffect(function () {\n    // Set drag preview to an empty image because `DnDFileListDragLayer` will\n    // provide its own preview.\n    preview(react_dnd_html5_backend_1.getEmptyImage(), {\n      captureDraggingState: true\n    });\n  }, [preview]);\n  return react_1.default.createElement(\"div\", {\n    ref: drop,\n    className: \"chonky-file-entry-droppable-wrapper chonky-fill-parent\"\n  }, react_1.default.createElement(\"div\", {\n    ref: file_helper_1.FileHelper.isDraggable(file) ? drag : null,\n    className: \"chonky-file-entry-draggable-wrapper chonky-fill-parent\"\n  }, react_1.default.createElement(ClickableFileEntry_1.ClickableFileEntry, __assign({}, props, {\n    dndIsDragging: dndIsDragging,\n    dndIsOver: dndIsOver,\n    dndCanDrop: dndCanDrop\n  }))));\n});","map":null,"metadata":{},"sourceType":"script"}
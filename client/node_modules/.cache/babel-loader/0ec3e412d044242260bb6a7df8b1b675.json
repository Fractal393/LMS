{"ast":null,"code":"/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.switchable.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar EditDecorator = require(\"./ui.list.edit.decorator\");\n\nvar abstract = EditDecorator.abstract;\n\nvar eventUtils = require(\"../../events/utils\");\n\nvar pointerEvents = require(\"../../events/pointer\");\n\nvar feedbackEvents = require(\"../../events/core/emitter.feedback\");\n\nvar LIST_EDIT_DECORATOR = \"dxListEditDecorator\";\nvar POINTER_DOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, LIST_EDIT_DECORATOR);\nvar ACTIVE_EVENT_NAME = eventUtils.addNamespace(feedbackEvents.active, LIST_EDIT_DECORATOR);\nvar LIST_ITEM_CONTENT_CLASS = \"dx-list-item-content\";\nvar SWITCHABLE_DELETE_READY_CLASS = \"dx-list-switchable-delete-ready\";\nvar SWITCHABLE_MENU_SHIELD_POSITIONING_CLASS = \"dx-list-switchable-menu-shield-positioning\";\nvar SWITCHABLE_DELETE_TOP_SHIELD_CLASS = \"dx-list-switchable-delete-top-shield\";\nvar SWITCHABLE_DELETE_BOTTOM_SHIELD_CLASS = \"dx-list-switchable-delete-bottom-shield\";\nvar SWITCHABLE_MENU_ITEM_SHIELD_POSITIONING_CLASS = \"dx-list-switchable-menu-item-shield-positioning\";\nvar SWITCHABLE_DELETE_ITEM_CONTENT_SHIELD_CLASS = \"dx-list-switchable-delete-item-content-shield\";\nvar SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS = \"dx-list-switchable-delete-button-container\";\nvar SwitchableEditDecorator = EditDecorator.inherit({\n  _init: function () {\n    this._$topShield = $(\"<div>\").addClass(SWITCHABLE_DELETE_TOP_SHIELD_CLASS);\n    this._$bottomShield = $(\"<div>\").addClass(SWITCHABLE_DELETE_BOTTOM_SHIELD_CLASS);\n    this._$itemContentShield = $(\"<div>\").addClass(SWITCHABLE_DELETE_ITEM_CONTENT_SHIELD_CLASS);\n    eventsEngine.on(this._$topShield, POINTER_DOWN_EVENT_NAME, this._cancelDeleteReadyItem.bind(this));\n    eventsEngine.on(this._$bottomShield, POINTER_DOWN_EVENT_NAME, this._cancelDeleteReadyItem.bind(this));\n\n    this._list.$element().append(this._$topShield.toggle(false)).append(this._$bottomShield.toggle(false));\n  },\n  handleClick: function () {\n    return this._cancelDeleteReadyItem();\n  },\n  _cancelDeleteReadyItem: function () {\n    if (!this._$readyToDeleteItem) {\n      return false;\n    }\n\n    this._cancelDelete(this._$readyToDeleteItem);\n\n    return true;\n  },\n  _cancelDelete: function ($itemElement) {\n    this._toggleDeleteReady($itemElement, false);\n  },\n  _toggleDeleteReady: function ($itemElement, readyToDelete) {\n    if (void 0 === readyToDelete) {\n      readyToDelete = !this._isReadyToDelete($itemElement);\n    }\n\n    this._toggleShields($itemElement, readyToDelete);\n\n    this._toggleScrolling(readyToDelete);\n\n    this._cacheReadyToDeleteItem($itemElement, readyToDelete);\n\n    this._animateToggleDelete($itemElement, readyToDelete);\n  },\n  _isReadyToDelete: function ($itemElement) {\n    return $itemElement.hasClass(SWITCHABLE_DELETE_READY_CLASS);\n  },\n  _toggleShields: function ($itemElement, enabled) {\n    this._list.$element().toggleClass(SWITCHABLE_MENU_SHIELD_POSITIONING_CLASS, enabled);\n\n    this._$topShield.toggle(enabled);\n\n    this._$bottomShield.toggle(enabled);\n\n    if (enabled) {\n      this._updateShieldsHeight($itemElement);\n    }\n\n    this._toggleContentShield($itemElement, enabled);\n  },\n  _updateShieldsHeight: function ($itemElement) {\n    var $list = this._list.$element();\n\n    var listTopOffset = $list.offset().top;\n    var listHeight = $list.outerHeight();\n    var itemTopOffset = $itemElement.offset().top;\n    var itemHeight = $itemElement.outerHeight();\n    var dirtyTopShieldHeight = itemTopOffset - listTopOffset;\n    var dirtyBottomShieldHeight = listHeight - itemHeight - dirtyTopShieldHeight;\n\n    this._$topShield.height(Math.max(dirtyTopShieldHeight, 0));\n\n    this._$bottomShield.height(Math.max(dirtyBottomShieldHeight, 0));\n  },\n  _toggleContentShield: function ($itemElement, enabled) {\n    if (enabled) {\n      $itemElement.find(\".\" + LIST_ITEM_CONTENT_CLASS).first().append(this._$itemContentShield);\n    } else {\n      this._$itemContentShield.detach();\n    }\n  },\n  _toggleScrolling: function (readyToDelete) {\n    var scrollView = this._list.$element().dxScrollView(\"instance\");\n\n    if (readyToDelete) {\n      scrollView.on(\"start\", this._cancelScrolling);\n    } else {\n      scrollView.off(\"start\", this._cancelScrolling);\n    }\n  },\n  _cancelScrolling: function (args) {\n    args.event.cancel = true;\n  },\n  _cacheReadyToDeleteItem: function ($itemElement, cache) {\n    if (cache) {\n      this._$readyToDeleteItem = $itemElement;\n    } else {\n      delete this._$readyToDeleteItem;\n    }\n  },\n  _animateToggleDelete: function ($itemElement, readyToDelete) {\n    if (readyToDelete) {\n      this._enablePositioning($itemElement);\n\n      this._prepareDeleteReady($itemElement);\n\n      this._animatePrepareDeleteReady($itemElement);\n\n      eventsEngine.off($itemElement, pointerEvents.up);\n    } else {\n      this._forgetDeleteReady($itemElement);\n\n      this._animateForgetDeleteReady($itemElement).done(this._disablePositioning.bind(this, $itemElement));\n    }\n  },\n  _enablePositioning: function ($itemElement) {\n    $itemElement.addClass(SWITCHABLE_MENU_ITEM_SHIELD_POSITIONING_CLASS);\n    eventsEngine.on($itemElement, ACTIVE_EVENT_NAME, noop);\n    eventsEngine.one($itemElement, pointerEvents.up, this._disablePositioning.bind(this, $itemElement));\n  },\n  _disablePositioning: function ($itemElement) {\n    $itemElement.removeClass(SWITCHABLE_MENU_ITEM_SHIELD_POSITIONING_CLASS);\n    eventsEngine.off($itemElement, ACTIVE_EVENT_NAME);\n  },\n  _prepareDeleteReady: function ($itemElement) {\n    $itemElement.addClass(SWITCHABLE_DELETE_READY_CLASS);\n  },\n  _forgetDeleteReady: function ($itemElement) {\n    $itemElement.removeClass(SWITCHABLE_DELETE_READY_CLASS);\n  },\n  _animatePrepareDeleteReady: abstract,\n  _animateForgetDeleteReady: abstract,\n  _getDeleteButtonContainer: function ($itemElement) {\n    $itemElement = $itemElement || this._$readyToDeleteItem;\n    return $itemElement.children(\".\" + SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS);\n  },\n  _deleteItem: function ($itemElement) {\n    $itemElement = $itemElement || this._$readyToDeleteItem;\n\n    this._getDeleteButtonContainer($itemElement).detach();\n\n    if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      return;\n    }\n\n    this._list.deleteItem($itemElement).always(this._cancelDelete.bind(this, $itemElement));\n  },\n  _isRtlEnabled: function () {\n    return this._list.option(\"rtlEnabled\");\n  },\n  dispose: function () {\n    if (this._$topShield) {\n      this._$topShield.remove();\n    }\n\n    if (this._$bottomShield) {\n      this._$bottomShield.remove();\n    }\n\n    this.callBase.apply(this, arguments);\n  }\n});\nmodule.exports = SwitchableEditDecorator;","map":null,"metadata":{},"sourceType":"script"}
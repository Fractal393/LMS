{"ast":null,"code":"/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\n\nvar PdfCacheCollection =\n/** @class */\nfunction () {\n  // Constructors\n\n  /**\n   * Initializes a new instance of the `PdfCacheCollection` class.\n   * @private\n   */\n  function PdfCacheCollection() {\n    this.referenceObjects = [];\n    this.pdfFontCollection = new Dictionary();\n  } // Public methods\n\n  /**\n   * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n   * @private\n   */\n\n\n  PdfCacheCollection.prototype.search = function (obj) {\n    var result = null;\n    var group = this.getGroup(obj);\n\n    if (group == null) {\n      group = this.createNewGroup();\n    } else if (group.length > 0) {\n      result = group[0];\n    }\n\n    group.push(obj);\n    return result;\n  }; // Implementation\n\n  /**\n   * `Creates` a new group.\n   * @private\n   */\n\n\n  PdfCacheCollection.prototype.createNewGroup = function () {\n    var group = [];\n    this.referenceObjects.push(group);\n    return group;\n  };\n  /**\n   * `Find and Return` a group.\n   * @private\n   */\n\n\n  PdfCacheCollection.prototype.getGroup = function (result) {\n    var group = null;\n\n    if (result !== null) {\n      var len = this.referenceObjects.length;\n\n      for (var i = 0; i < len; i++) {\n        if (this.referenceObjects.length > 0) {\n          var tGroup = this.referenceObjects[i];\n\n          if (tGroup.length > 0) {\n            var representative = tGroup[0];\n\n            if (result.equalsTo(representative)) {\n              group = tGroup;\n              break;\n            }\n          } else {\n            this.removeGroup(tGroup);\n          }\n        }\n\n        len = this.referenceObjects.length;\n      }\n    }\n\n    return group;\n  };\n  /**\n   * Remove a group from the storage.\n   */\n\n\n  PdfCacheCollection.prototype.removeGroup = function (group) {\n    if (group !== null) {\n      var index = this.referenceObjects.indexOf(group);\n      this.referenceObjects.slice(index, index + 1);\n    }\n  };\n\n  PdfCacheCollection.prototype.destroy = function () {\n    this.pdfFontCollection = undefined;\n    this.referenceObjects = undefined;\n  };\n\n  return PdfCacheCollection;\n}();\n\nexport { PdfCacheCollection };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar SORT_CLASS = \"dx-sort\";\nvar SORT_NONE_CLASS = \"dx-sort-none\";\nvar SORTUP_CLASS = \"dx-sort-up\";\nvar SORTDOWN_CLASS = \"dx-sort-down\";\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\nvar HEADERS_ACTION_CLASS = \"action\";\nmodule.exports = {\n  _applyColumnState: function (options) {\n    var that = this;\n    var ariaSortState;\n    var $sortIndicator;\n    var sortingMode = that.option(\"sorting.mode\");\n    var rootElement = options.rootElement;\n    var column = options.column;\n\n    var $indicatorsContainer = that._getIndicatorContainer(rootElement);\n\n    if (\"sort\" === options.name) {\n      rootElement.find(\".\" + SORT_CLASS).remove();\n      !$indicatorsContainer.children().length && $indicatorsContainer.remove();\n      var isSortingAllowed = (\"single\" === sortingMode || \"multiple\" === sortingMode) && column.allowSorting;\n\n      if (!(0, _type.isDefined)(column.groupIndex) && (isSortingAllowed || (0, _type.isDefined)(column.sortOrder))) {\n        ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\n        $sortIndicator = that.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\n        var hasSeveralSortIndexes = that.getController && !!that.getController(\"columns\").columnOption(\"sortIndex:1\");\n\n        if (hasSeveralSortIndexes && that.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\n          (0, _renderer2.default)(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\n          $sortIndicator.addClass(SORT_INDEX_CLASS);\n        }\n\n        options.rootElement.addClass(that.addWidgetPrefix(HEADERS_ACTION_CLASS));\n      }\n\n      if (!(0, _type.isDefined)(column.sortOrder)) {\n        that.setAria(\"sort\", \"none\", rootElement);\n      } else {\n        that.setAria(\"sort\", ariaSortState, rootElement);\n      }\n\n      return $sortIndicator;\n    } else {\n      return that.callBase(options);\n    }\n  },\n  _getIndicatorClassName: function (name) {\n    if (\"sort\" === name) {\n      return SORT_CLASS;\n    } else {\n      if (\"sortIndex\" === name) {\n        return SORT_INDEX_ICON_CLASS;\n      }\n    }\n\n    return this.callBase(name);\n  },\n  _renderIndicator: function (options) {\n    var column = options.column;\n    var $container = options.container;\n    var $indicator = options.indicator;\n\n    if (\"sort\" === options.name) {\n      var rtlEnabled = this.option(\"rtlEnabled\");\n\n      if (!(0, _type.isDefined)(column.sortOrder)) {\n        $indicator && $indicator.addClass(SORT_NONE_CLASS);\n      }\n\n      if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\n        $container.prepend($indicator);\n        return;\n      }\n    }\n\n    this.callBase(options);\n  },\n  _updateIndicator: function ($cell, column, indicatorName) {\n    if (\"sort\" === indicatorName && (0, _type.isDefined)(column.groupIndex)) {\n      return;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _getIndicatorElements: function ($cell, returnAll) {\n    var $indicatorElements = this.callBase($cell);\n    return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { compile } from '@syncfusion/ej2-base';\nimport { getEnumValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { Property, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Grid's aggregate column.\n */\n\nvar AggregateColumn =\n/** @class */\nfunction (_super) {\n  __extends(AggregateColumn, _super);\n\n  function AggregateColumn() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.templateFn = {};\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  AggregateColumn.prototype.setFormatter = function (value) {\n    this.formatFn = value;\n  };\n  /**\n   * @hidden\n   */\n\n\n  AggregateColumn.prototype.getFormatter = function () {\n    return this.formatFn;\n  };\n  /**\n   * @hidden\n   */\n\n\n  AggregateColumn.prototype.setTemplate = function (helper) {\n    if (helper === void 0) {\n      helper = {};\n    }\n\n    if (this.footerTemplate !== undefined) {\n      this.templateFn[getEnumValue(CellType, CellType.Summary)] = {\n        fn: compile(this.footerTemplate, helper),\n        property: 'footerTemplate'\n      };\n    }\n\n    if (this.groupFooterTemplate !== undefined) {\n      this.templateFn[getEnumValue(CellType, CellType.GroupSummary)] = {\n        fn: compile(this.groupFooterTemplate, helper),\n        property: 'groupFooterTemplate'\n      };\n    }\n\n    if (this.groupCaptionTemplate !== undefined) {\n      this.templateFn[getEnumValue(CellType, CellType.CaptionSummary)] = {\n        fn: compile(this.groupCaptionTemplate, helper),\n        property: 'groupCaptionTemplate'\n      };\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  AggregateColumn.prototype.getTemplate = function (type) {\n    return this.templateFn[getEnumValue(CellType, type)];\n  };\n  /**\n   * @hidden\n   */\n\n\n  AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n    this.setProperties(prop, true);\n  };\n\n  __decorate([Property()], AggregateColumn.prototype, \"type\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"field\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"columnName\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"format\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"footerTemplate\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"groupFooterTemplate\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"groupCaptionTemplate\", void 0);\n\n  __decorate([Property()], AggregateColumn.prototype, \"customAggregate\", void 0);\n\n  return AggregateColumn;\n}(ChildProperty);\n\nexport { AggregateColumn };\n/**\n * Configures the aggregate rows.\n */\n\nvar AggregateRow =\n/** @class */\nfunction (_super) {\n  __extends(AggregateRow, _super);\n\n  function AggregateRow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], AggregateColumn)], AggregateRow.prototype, \"columns\", void 0);\n\n  return AggregateRow;\n}(ChildProperty);\n\nexport { AggregateRow };","map":null,"metadata":{},"sourceType":"module"}
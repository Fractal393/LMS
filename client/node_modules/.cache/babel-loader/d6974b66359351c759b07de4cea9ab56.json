{"ast":null,"code":"/**\r\n * DevExtreme (ui/collection/ui.collection_widget.live_update.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _uiCollection_widget = require(\"./ui.collection_widget.edit\");\n\nvar _uiCollection_widget2 = _interopRequireDefault(_uiCollection_widget);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _array_utils = require(\"../../data/array_utils\");\n\nvar _array_utils2 = _interopRequireDefault(_array_utils);\n\nvar _utils = require(\"../../data/utils\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _array_compare = require(\"../../core/utils/array_compare\");\n\nvar _dom_adapter = require(\"../../core/dom_adapter\");\n\nvar _common = require(\"../../core/utils/common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PRIVATE_KEY_FIELD = \"__dx_key__\";\nexports.default = _uiCollection_widget2.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      repaintChangesOnly: false\n    });\n  },\n  ctor: function () {\n    var _this = this;\n\n    this.callBase.apply(this, arguments);\n    this._customizeStoreLoadOptions = function (e) {\n      var dataSource = _this._dataSource;\n\n      if (dataSource && !dataSource.isLoaded()) {\n        _this._correctionIndex = 0;\n      }\n\n      if (_this._correctionIndex && e.storeLoadOptions) {\n        e.storeLoadOptions.skip += _this._correctionIndex;\n      }\n    }, this._dataSource && this._dataSource.on(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptions);\n  },\n  reload: function () {\n    this._correctionIndex = 0;\n  },\n  _init: function () {\n    this.callBase();\n\n    this._refreshItemsCache();\n\n    this._correctionIndex = 0;\n  },\n  _findItemElementByKey: function (key) {\n    var _this2 = this;\n\n    var result = (0, _renderer2.default)();\n    var keyExpr = this.key();\n    this.itemElements().each(function (_, item) {\n      var $item = (0, _renderer2.default)(item);\n\n      var itemData = _this2._getItemData($item);\n\n      if (keyExpr ? (0, _utils.keysEqual)(keyExpr, _this2.keyOf(itemData), key) : _this2._isItemEquals(itemData, key)) {\n        result = $item;\n        return false;\n      }\n    });\n    return result;\n  },\n  _dataSourceChangedHandler: function (newItems, e) {\n    e && e.changes ? this._modifyByChanges(e.changes) : this.callBase(newItems, e);\n  },\n  _isItemEquals: function (item1, item2) {\n    if (item1 && item1[PRIVATE_KEY_FIELD]) {\n      item1 = item1.data;\n    }\n\n    try {\n      return JSON.stringify(item1) === JSON.stringify(item2);\n    } catch (e) {\n      return item1 === item2;\n    }\n  },\n  _partialRefresh: function () {\n    var _this3 = this;\n\n    if (this.option(\"repaintChangesOnly\")) {\n      var keyOf = function (data) {\n        if (data && void 0 !== data[PRIVATE_KEY_FIELD]) {\n          return data[PRIVATE_KEY_FIELD];\n        }\n\n        return _this3.keyOf(data);\n      };\n\n      var result = (0, _array_compare.findChanges)(this._itemsCache, this._editStrategy.itemsGetter(), keyOf, this._isItemEquals);\n\n      if (result && this._itemsCache.length) {\n        this._modifyByChanges(result, true);\n\n        this._renderEmptyMessage();\n\n        return true;\n      } else {\n        this._refreshItemsCache();\n      }\n    }\n\n    return false;\n  },\n  _refreshItemsCache: function () {\n    if (this.option(\"repaintChangesOnly\")) {\n      var items = this._editStrategy.itemsGetter();\n\n      try {\n        this._itemsCache = (0, _extend.extend)(true, [], items);\n\n        if (!this.key()) {\n          this._itemsCache = this._itemsCache.map(function (itemCache, index) {\n            var _ref;\n\n            return _ref = {}, _defineProperty(_ref, PRIVATE_KEY_FIELD, items[index]), _defineProperty(_ref, \"data\", itemCache), _ref;\n          });\n        }\n      } catch (e) {\n        this._itemsCache = (0, _extend.extend)([], items);\n      }\n    }\n  },\n  _dispose: function () {\n    this._dataSource && this._dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptions);\n    this.callBase();\n  },\n  _updateByChange: function (keyInfo, items, change, isPartialRefresh) {\n    var _this4 = this;\n\n    if (isPartialRefresh) {\n      this._renderItem(change.index, change.data, null, this._findItemElementByKey(change.key));\n    } else {\n      var changedItem = items[_array_utils2.default.indexByKey(keyInfo, items, change.key)];\n\n      if (changedItem) {\n        _array_utils2.default.update(keyInfo, items, change.key, change.data).done(function () {\n          _this4._renderItem(items.indexOf(changedItem), changedItem, null, _this4._findItemElementByKey(change.key));\n        });\n      }\n    }\n  },\n  _insertByChange: function (keyInfo, items, change, isPartialRefresh) {\n    var _this5 = this;\n\n    (0, _deferred.when)(isPartialRefresh || _array_utils2.default.insert(keyInfo, items, change.data, change.index)).done(function () {\n      _this5._beforeItemElementInserted(change);\n\n      _this5._renderItem((0, _type.isDefined)(change.index) ? change.index : items.length, change.data);\n\n      _this5._afterItemElementInserted();\n\n      _this5._correctionIndex++;\n    });\n  },\n  _updateSelectionAfterRemoveByChange: function (removeIndex) {\n    var selectedIndex = this.option(\"selectedIndex\");\n\n    if (selectedIndex > removeIndex) {\n      this.option(\"selectedIndex\", selectedIndex - 1);\n    } else {\n      if (selectedIndex === removeIndex && 1 === this.option(\"selectedItems\").length) {\n        this.option(\"selectedItems\", []);\n      } else {\n        this._normalizeSelectedItems();\n      }\n    }\n  },\n  _beforeItemElementInserted: function (change) {\n    var selectedIndex = this.option(\"selectedIndex\");\n\n    if (change.index <= selectedIndex) {\n      this.option(\"selectedIndex\", selectedIndex + 1);\n    }\n  },\n  _afterItemElementInserted: _common.noop,\n  _removeByChange: function (keyInfo, items, change, isPartialRefresh) {\n    var _this6 = this;\n\n    var index = isPartialRefresh ? change.index : _array_utils2.default.indexByKey(keyInfo, items, change.key);\n    var removedItem = isPartialRefresh ? change.oldItem : items[index];\n\n    if (removedItem) {\n      var $removedItemElement = this._findItemElementByKey(change.key);\n\n      var deletedActionArgs = this._extendActionArgs($removedItemElement);\n\n      this._waitDeletingPrepare($removedItemElement).done(function () {\n        if (isPartialRefresh) {\n          _this6._updateIndicesAfterIndex(index - 1);\n\n          _this6._afterItemElementDeleted($removedItemElement, deletedActionArgs);\n\n          _this6._updateSelectionAfterRemoveByChange(index);\n        } else {\n          _this6._deleteItemElementByIndex(index);\n\n          _this6._afterItemElementDeleted($removedItemElement, deletedActionArgs);\n        }\n      });\n\n      this._correctionIndex--;\n    }\n  },\n  _modifyByChanges: function (changes, isPartialRefresh) {\n    var _this7 = this;\n\n    var items = this._editStrategy.itemsGetter();\n\n    var keyInfo = {\n      key: this.key.bind(this),\n      keyOf: this.keyOf.bind(this)\n    };\n    var dataSource = this._dataSource;\n    var paginate = dataSource && dataSource.paginate();\n    var group = dataSource && dataSource.group();\n\n    if (paginate || group) {\n      changes = changes.filter(function (item) {\n        return \"insert\" !== item.type || void 0 !== item.index;\n      });\n    }\n\n    changes.forEach(function (change) {\n      return _this7[\"_\".concat(change.type, \"ByChange\")](keyInfo, items, change, isPartialRefresh);\n    });\n    this._renderedItemsCount = items.length;\n\n    this._refreshItemsCache();\n\n    this._fireContentReadyAction();\n  },\n  _appendItemToContainer: function ($container, $itemFrame, index) {\n    var nextSiblingElement = $container.children(this._itemSelector()).get(index);\n    (0, _dom_adapter.insertElement)($container.get(0), $itemFrame.get(0), nextSiblingElement);\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"items\":\n        var isItemsUpdated = this._partialRefresh(args.value);\n\n        if (!isItemsUpdated) {\n          this.callBase(args);\n        }\n\n        break;\n\n      case \"dataSource\":\n        if (!this.option(\"repaintChangesOnly\") || !args.value) {\n          this.option(\"items\", []);\n        }\n\n        this.callBase(args);\n        break;\n\n      case \"repaintChangesOnly\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"script"}
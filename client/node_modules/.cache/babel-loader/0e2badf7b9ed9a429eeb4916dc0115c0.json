{"ast":null,"code":"import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\n\nvar CheckBoxFilter =\n/** @class */\nfunction () {\n  /**\n   * Constructor for checkbox filtering module\n   * @hidden\n   */\n  function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n    this.parent = parent;\n    this.isresetFocus = true;\n    this.checkBoxBase = new CheckBoxFilterBase(parent);\n    this.addEventListener();\n  }\n  /**\n   * To destroy the check box filter.\n   * @return {void}\n   * @hidden\n   */\n\n\n  CheckBoxFilter.prototype.destroy = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n  };\n\n  CheckBoxFilter.prototype.openDialog = function (options) {\n    this.checkBoxBase.openDialog(options);\n    this.parent.log('column_type_missing', {\n      column: options.column\n    });\n  };\n\n  CheckBoxFilter.prototype.closeDialog = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n\n    if (this.isresetFocus) {\n      this.parent.notify(events.restoreFocus, {});\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  CheckBoxFilter.prototype.getModuleName = function () {\n    return 'checkboxFilter';\n  };\n\n  CheckBoxFilter.prototype.actionBegin = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n\n  CheckBoxFilter.prototype.actionComplete = function (args) {\n    this.parent.trigger(events.actionComplete, args);\n  };\n\n  CheckBoxFilter.prototype.actionPrevent = function (args) {\n    if (isActionPrevent(this.parent)) {\n      this.parent.notify(events.preventBatch, args);\n      args.cancel = true;\n    }\n  };\n\n  CheckBoxFilter.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n    this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n    this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n  };\n\n  CheckBoxFilter.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n    this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n    this.parent.off(events.fltrPrevent, this.actionPrevent);\n  };\n\n  return CheckBoxFilter;\n}();\n\nexport { CheckBoxFilter };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _position = require(\"../../animation/position\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _context_menu = require(\"../context_menu\");\n\nvar _context_menu2 = _interopRequireDefault(_context_menu);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function (target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\n\nvar Submenu = function (_ContextMenu) {\n  _inherits(Submenu, _ContextMenu);\n\n  var _super = _createSuper(Submenu);\n\n  function Submenu() {\n    _classCallCheck(this, Submenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Submenu, [{\n    key: \"_getDefaultOptions\",\n    value: function () {\n      return (0, _extend.extend)(_get(_getPrototypeOf(Submenu.prototype), \"_getDefaultOptions\", this).call(this), {\n        orientation: \"horizontal\",\n        tabIndex: null,\n        onHoverStart: _common.noop\n      });\n    }\n  }, {\n    key: \"_initDataAdapter\",\n    value: function () {\n      this._dataAdapter = this.option(\"_dataAdapter\");\n\n      if (!this._dataAdapter) {\n        _get(_getPrototypeOf(Submenu.prototype), \"_initDataAdapter\", this).call(this);\n      }\n    }\n  }, {\n    key: \"_renderContentImpl\",\n    value: function () {\n      this._renderContextMenuOverlay();\n\n      _get(_getPrototypeOf(Submenu.prototype), \"_renderContentImpl\", this).call(this);\n\n      var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\n\n      node && this._renderItems(this._getChildNodes(node));\n\n      this._renderDelimiter();\n    }\n  }, {\n    key: \"_renderDelimiter\",\n    value: function () {\n      this.$contentDelimiter = (0, _renderer2.default)(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS);\n    }\n  }, {\n    key: \"_getOverlayOptions\",\n    value: function () {\n      return (0, _extend.extend)(_get(_getPrototypeOf(Submenu.prototype), \"_getOverlayOptions\", this).call(this), {\n        onPositioned: this._overlayPositionedActionHandler.bind(this)\n      });\n    }\n  }, {\n    key: \"_overlayPositionedActionHandler\",\n    value: function (arg) {\n      this._showDelimiter(arg);\n    }\n  }, {\n    key: \"_hoverEndHandler\",\n    value: function (e) {\n      _get(_getPrototypeOf(Submenu.prototype), \"_hoverEndHandler\", this).call(this, e);\n\n      this._toggleFocusClass(false, e.currentTarget);\n    }\n  }, {\n    key: \"_isMenuHorizontal\",\n    value: function () {\n      return \"horizontal\" === this.option(\"orientation\");\n    }\n  }, {\n    key: \"_hoverStartHandler\",\n    value: function (e) {\n      var hoverStartAction = this.option(\"onHoverStart\");\n      hoverStartAction(e);\n\n      _get(_getPrototypeOf(Submenu.prototype), \"_hoverStartHandler\", this).call(this, e);\n\n      this._toggleFocusClass(true, e.currentTarget);\n    }\n  }, {\n    key: \"_drawSubmenu\",\n    value: function ($rootItem) {\n      this._actions.onShowing({\n        rootItem: (0, _dom.getPublicElement)($rootItem),\n        submenu: this\n      });\n\n      _get(_getPrototypeOf(Submenu.prototype), \"_drawSubmenu\", this).call(this, $rootItem);\n\n      this._actions.onShown({\n        rootItem: (0, _dom.getPublicElement)($rootItem),\n        submenu: this\n      });\n    }\n  }, {\n    key: \"_hideSubmenu\",\n    value: function ($rootItem) {\n      this._actions.onHiding({\n        cancel: true,\n        rootItem: (0, _dom.getPublicElement)($rootItem),\n        submenu: this\n      });\n\n      _get(_getPrototypeOf(Submenu.prototype), \"_hideSubmenu\", this).call(this, $rootItem);\n\n      this._actions.onHidden({\n        rootItem: (0, _dom.getPublicElement)($rootItem),\n        submenu: this\n      });\n    }\n  }, {\n    key: \"_showDelimiter\",\n    value: function (arg) {\n      if (!this.$contentDelimiter) {\n        return;\n      }\n\n      var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\n\n      var $rootItem = this.option(\"position\").of;\n      var position = {\n        of: $submenu\n      };\n      var containerOffset = arg.position;\n      var vLocation = containerOffset.v.location;\n      var hLocation = containerOffset.h.location;\n      var rootOffset = $rootItem.offset();\n      var offsetLeft = Math.round(rootOffset.left);\n      var offsetTop = Math.round(rootOffset.top);\n      var rootWidth = $rootItem.width();\n      var rootHeight = $rootItem.height();\n      var submenuWidth = $submenu.width();\n      var submenuHeight = $submenu.height();\n      this.$contentDelimiter.css(\"display\", \"block\");\n      this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\n      this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\n\n      if (this._isMenuHorizontal()) {\n        if (vLocation > offsetTop) {\n          if (Math.round(hLocation) === offsetLeft) {\n            position.offset = \"1 -1\";\n            position.at = position.my = \"left top\";\n          } else {\n            position.offset = \"-1 -1\";\n            position.at = position.my = \"right top\";\n          }\n        } else {\n          this.$contentDelimiter.height(5);\n\n          if (Math.round(hLocation) === offsetLeft) {\n            position.offset = \"1 4\";\n            position.at = position.my = \"left bottom\";\n          } else {\n            position.offset = \"-1 2\";\n            position.at = position.my = \"right bottom\";\n          }\n        }\n      } else {\n        if (hLocation > offsetLeft) {\n          if (Math.round(vLocation) === offsetTop) {\n            position.offset = \"-1 1\";\n            position.at = position.my = \"left top\";\n          } else {\n            position.offset = \"-1 -1\";\n            position.at = position.my = \"left bottom\";\n          }\n        } else {\n          if (Math.round(vLocation) === offsetTop) {\n            position.offset = \"1 1\";\n            position.at = position.my = \"right top\";\n          } else {\n            position.offset = \"1 -1\";\n            position.at = position.my = \"right bottom\";\n          }\n        }\n      }\n\n      (0, _position.setup)(this.$contentDelimiter, position);\n    }\n  }, {\n    key: \"_getContextMenuPosition\",\n    value: function () {\n      return this.option(\"position\");\n    }\n  }, {\n    key: \"isOverlayVisible\",\n    value: function () {\n      return this._overlay.option(\"visible\");\n    }\n  }, {\n    key: \"getOverlayContent\",\n    value: function () {\n      return this._overlay.$content();\n    }\n  }]);\n\n  return Submenu;\n}(_context_menu2.default);\n\nmodule.exports = Submenu;","map":null,"metadata":{},"sourceType":"script"}
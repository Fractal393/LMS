{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\n\n\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\n\nvar PdfBitmap =\n/** @class */\nfunction (_super) {\n  __extends(PdfBitmap, _super);\n  /**\n   * Create an instance for `PdfBitmap` class.\n   * @param encodedString Base64 string of an image.\n   * ```typescript\n   * // create a new PDF document.\n   * let document : PdfDocument = new PdfDocument();\n   * // add a page to the document.\n   * let page1 : PdfPage = document.pages.add();\n   * // base64 string of an image\n   * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n   * //\n   * // load the image from the base64 string of original image.\n   * let image : PdfBitmap = new PdfBitmap(imageString);\n   * //\n   * // draw the image\n   * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n   * // save the document.\n   * document.save('output.pdf');\n   * // destroy the document\n   * document.destroy();\n   * ```\n   */\n\n\n  function PdfBitmap(encodedString) {\n    var _this = _super.call(this) || this; //Fields\n\n    /**\n     * Specifies the `status` of an image.\n     * @default true.\n     * @hidden\n     * @private\n     */\n\n\n    _this.imageStatus = true;\n    /**\n     * Internal variable for accessing fields from `DictionryProperties` class.\n     * @hidden\n     * @private\n     */\n\n    _this.dictionaryProperties = new DictionaryProperties();\n\n    _this.loadImage(encodedString);\n\n    return _this;\n  }\n  /**\n   * `Load image`.\n   * @hidden\n   * @private\n   */\n\n\n  PdfBitmap.prototype.loadImage = function (encodedString) {\n    var task = this.initializeAsync(encodedString);\n  };\n  /**\n   * `Initialize` image parameters.\n   * @private\n   */\n\n\n  PdfBitmap.prototype.initializeAsync = function (encodedString) {\n    var byteArray = new ByteArray(encodedString.length);\n    byteArray.writeFromBase64String(encodedString);\n    this.decoder = new ImageDecoder(byteArray);\n    this.height = this.decoder.height;\n    this.width = this.decoder.width; // FrameCount = BitmapImageDecoder.FrameCount;\n\n    this.bitsPerComponent = this.decoder.bitsPerComponent;\n  };\n  /**\n   * `Saves` the image into stream.\n   * @private\n   */\n\n\n  PdfBitmap.prototype.save = function () {\n    this.imageStatus = true;\n    this.imageStream = this.decoder.getImageDictionary();\n  };\n\n  return PdfBitmap;\n}(PdfImage);\n\nexport { PdfBitmap };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar toArray = require(\"es5-ext/array/to-array\"),\n    isValue = require(\"es5-ext/object/is-value\"),\n    callable = require(\"es5-ext/object/valid-callable\");\n\nvar slice = Array.prototype.slice,\n    resolveArgs;\n\nresolveArgs = function (args) {\n  return this.map(function (resolve, i) {\n    return resolve ? resolve(args[i]) : args[i];\n  }).concat(slice.call(args, this.length));\n};\n\nmodule.exports = function (resolvers) {\n  resolvers = toArray(resolvers);\n  resolvers.forEach(function (resolve) {\n    if (isValue(resolve)) callable(resolve);\n  });\n  return resolveArgs.bind(resolvers);\n};","map":null,"metadata":{},"sourceType":"script"}
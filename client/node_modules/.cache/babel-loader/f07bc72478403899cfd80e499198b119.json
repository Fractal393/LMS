{"ast":null,"code":"/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair =\n/** @class */\nfunction () {\n  function PdfTemplateValuePair(template, value) {\n    // Fields\n\n    /**\n     * Internal variable to store template.\n     * @default null\n     * @private\n     */\n    this.pdfTemplate = null;\n    /**\n     * Intenal variable to store value.\n     * @private\n     */\n\n    this.content = '';\n\n    if (typeof template === 'undefined') {//\n    } else {\n      this.template = template;\n      this.value = value;\n    }\n  }\n\n  Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n    // Properties\n\n    /**\n     * Gets or sets the template.\n     * @private\n     */\n    get: function () {\n      return this.pdfTemplate;\n    },\n    set: function (value) {\n      this.pdfTemplate = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n    /**\n     * Gets or sets the value.\n     * @private\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.content = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTemplateValuePair;\n}();\n\nexport { PdfTemplateValuePair };","map":null,"metadata":{},"sourceType":"module"}
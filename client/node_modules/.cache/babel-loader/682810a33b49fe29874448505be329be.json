{"ast":null,"code":"/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n\n(function (PdfHorizontalAlignment) {\n  /**\n   * Specifies the type of `Left`.\n   * @private\n   */\n  PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n  /**\n   * Specifies the type of `Center`.\n   * @private\n   */\n\n  PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n  /**\n   * Specifies the type of `Right`.\n   * @private\n   */\n\n  PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\n\n\nexport var PdfVerticalAlignment;\n\n(function (PdfVerticalAlignment) {\n  /**\n   * Specifies the type of `Top`.\n   * @private\n   */\n  PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n  /**\n   * Specifies the type of `Middle`.\n   * @private\n   */\n\n  PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n  /**\n   * Specifies the type of `Bottom`.\n   * @private\n   */\n\n  PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\n\n\nexport var PdfTextAlignment;\n\n(function (PdfTextAlignment) {\n  /**\n   * Specifies the type of `Left`.\n   * @private\n   */\n  PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n  /**\n   * Specifies the type of `Center`.\n   * @private\n   */\n\n  PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n  /**\n   * Specifies the type of `Right`.\n   * @private\n   */\n\n  PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n  /**\n   * Specifies the type of `Justify`.\n   * @private\n   */\n\n  PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\n\n\nexport var TextRenderingMode;\n\n(function (TextRenderingMode) {\n  /**\n   * Specifies the type of `Fill`.\n   * @private\n   */\n  TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n  /**\n   * Specifies the type of `Stroke`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n  /**\n   * Specifies the type of `FillStroke`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n  /**\n   * Specifies the type of `None`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n  /**\n   * Specifies the type of `ClipFlag`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n  /**\n   * Specifies the type of `ClipFill`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n  /**\n   * Specifies the type of `ClipStroke`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n  /**\n   * Specifies the type of `ClipFillStroke`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n  /**\n   * Specifies the type of `Clip`.\n   * @private\n   */\n\n  TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\n\n\nexport var PdfLineJoin;\n\n(function (PdfLineJoin) {\n  /**\n   * Specifies the type of `Miter`.\n   * @private\n   */\n  PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n  /**\n   * Specifies the type of `Round`.\n   * @private\n   */\n\n  PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n  /**\n   * Specifies the type of `Bevel`.\n   * @private\n   */\n\n  PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\n\n\nexport var PdfLineCap;\n\n(function (PdfLineCap) {\n  /**\n   * Specifies the type of `Flat`.\n   * @private\n   */\n  PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n  /**\n   * Specifies the type of `Round`.\n   * @private\n   */\n\n  PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n  /**\n   * Specifies the type of `Square`.\n   * @private\n   */\n\n  PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\n\n\nexport var PdfDashStyle;\n\n(function (PdfDashStyle) {\n  /**\n   * Specifies the type of `Solid`.\n   * @private\n   */\n  PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n  /**\n   * Specifies the type of `Dash`.\n   * @private\n   */\n\n  PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n  /**\n   * Specifies the type of `Dot`.\n   * @private\n   */\n\n  PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n  /**\n   * Specifies the type of `DashDot`.\n   * @private\n   */\n\n  PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n  /**\n   * Specifies the type of `DashDotDot`.\n   * @private\n   */\n\n  PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n  /**\n   * Specifies the type of `Custom`.\n   * @private\n   */\n\n  PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\n\n\nexport var PdfFillMode;\n\n(function (PdfFillMode) {\n  /**\n   * Specifies the type of `Winding`.\n   * @private\n   */\n  PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n  /**\n   * Specifies the type of `Alternate`.\n   * @private\n   */\n\n  PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\n\n\nexport var PdfColorSpace;\n\n(function (PdfColorSpace) {\n  /**\n   * Specifies the type of `Rgb`.\n   * @private\n   */\n  PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n  /**\n   * Specifies the type of `Cmyk`.\n   * @private\n   */\n\n  PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n  /**\n   * Specifies the type of `GrayScale`.\n   * @private\n   */\n\n  PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n  /**\n   * Specifies the type of `Indexed`.\n   * @private\n   */\n\n  PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\n\n\nexport var PdfBlendMode;\n\n(function (PdfBlendMode) {\n  /**\n   * Specifies the type of `Normal`.\n   * @private\n   */\n  PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * Specifies the type of `Multiply`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n  /**\n   * Specifies the type of `Screen`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n  /**\n   * Specifies the type of `Overlay`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n  /**\n   * Specifies the type of `Darken`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n  /**\n   * Specifies the type of `Lighten`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n  /**\n   * Specifies the type of `ColorDodge`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n  /**\n   * Specifies the type of `ColorBurn`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n  /**\n   * Specifies the type of `HardLight`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n  /**\n   * Specifies the type of `SoftLight`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n  /**\n   * Specifies the type of `Difference`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n  /**\n   * Specifies the type of `Exclusion`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n  /**\n   * Specifies the type of `Hue`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n  /**\n   * Specifies the type of `Saturation`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n  /**\n   * Specifies the type of `Color`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n  /**\n   * Specifies the type of `Luminosity`.\n   * @private\n   */\n\n  PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\n\n\nexport var PdfGraphicsUnit;\n\n(function (PdfGraphicsUnit) {\n  /**\n   * Specifies the type of `Centimeter`.\n   * @private\n   */\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n  /**\n   * Specifies the type of `Pica`.\n   * @private\n   */\n\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n  /**\n   * Specifies the type of `Pixel`.\n   * @private\n   */\n\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n  /**\n   * Specifies the type of `Point`.\n   * @private\n   */\n\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n  /**\n   * Specifies the type of `Inch`.\n   * @private\n   */\n\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n  /**\n   * Specifies the type of `Document`.\n   * @private\n   */\n\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n  /**\n   * Specifies the type of `Millimeter`.\n   * @private\n   */\n\n  PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\n\n\nexport var PdfGridImagePosition;\n\n(function (PdfGridImagePosition) {\n  /**\n   * Specifies the type of `Fit`.\n   * @private\n   */\n  PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n  /**\n   * Specifies the type of `Center`.\n   * @private\n   */\n\n  PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n  /**\n   * Specifies the type of `Stretch`.\n   * @private\n   */\n\n  PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n  /**\n   * Specifies the type of `Tile`.\n   * @private\n   */\n\n  PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\n\n\nexport var PdfTextDirection;\n\n(function (PdfTextDirection) {\n  /**\n   * Specifies the type of `None`.\n   * @private\n   */\n  PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n  /**\n   * Specifies the type of `LeftToRight`.\n   * @private\n   */\n\n  PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n  /**\n   * Specifies the type of `RightToLeft`.\n   * @private\n   */\n\n  PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));","map":null,"metadata":{},"sourceType":"module"}
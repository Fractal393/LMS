{"ast":null,"code":"import { RowModelGenerator } from '../services/row-model-generator';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * FreezeRowModelGenerator is used to generate grid data rows with freeze row and column.\n * @hidden\n */\n\nvar FreezeRowModelGenerator =\n/** @class */\nfunction () {\n  function FreezeRowModelGenerator(parent) {\n    this.isFrzLoad = 1;\n    this.parent = parent;\n    this.rowModelGenerator = new RowModelGenerator(this.parent);\n  }\n\n  FreezeRowModelGenerator.prototype.generateRows = function (data, notifyArgs, virtualRows) {\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (this.isFrzLoad % 2 !== 0 && notifyArgs.requestType === 'virtualscroll' && notifyArgs.virtualInfo.sentinelInfo.axis === 'X') {\n      this.isFrzLoad++;\n      return null;\n    }\n\n    var row = this.parent.enableVirtualization ? virtualRows : this.rowModelGenerator.generateRows(data, notifyArgs);\n\n    if (isBlazor() && !this.parent.isJsComponent) {\n      return row;\n    }\n\n    for (var i = 0, len = row.length; i < len; i++) {\n      if (this.isFrzLoad % 2 === 0) {\n        row[i].cells = row[i].cells.slice(frzCols, row[i].cells.length);\n      } else {\n        row[i].isFreezeRow = true;\n        row[i].cells = row[i].cells.slice(0, frzCols);\n      }\n    }\n\n    this.isFrzLoad++;\n    return row;\n  };\n\n  return FreezeRowModelGenerator;\n}();\n\nexport { FreezeRowModelGenerator };","map":null,"metadata":{},"sourceType":"module"}
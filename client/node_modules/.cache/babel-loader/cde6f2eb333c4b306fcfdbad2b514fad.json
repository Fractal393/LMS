{"ast":null,"code":"/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean =\n/** @class */\nfunction () {\n  //constructor\n\n  /**\n   * Initializes a new instance of the `PdfBoolean` class.\n   * @private\n   */\n  function PdfBoolean(value) {\n    /**\n     * Internal variable to store the `position`.\n     * @default -1\n     * @private\n     */\n    this.currentPosition = -1;\n    this.value = value;\n  }\n\n  Object.defineProperty(PdfBoolean.prototype, \"status\", {\n    //Properties\n\n    /**\n     * Gets or sets the `Status` of the specified object.\n     * @private\n     */\n    get: function () {\n      return this.objectStatus;\n    },\n    set: function (value) {\n      this.objectStatus = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n    /**\n     * Gets or sets a value indicating whether this document `is saving` or not.\n     * @private\n     */\n    get: function () {\n      return this.saving;\n    },\n    set: function (value) {\n      this.saving = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n    /**\n     * Gets or sets the `index` value of the specified object.\n     * @private\n     */\n    get: function () {\n      return this.index;\n    },\n    set: function (value) {\n      this.index = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBoolean.prototype, \"position\", {\n    /**\n     * Gets or sets the `position` of the object.\n     * @private\n     */\n    get: function () {\n      return this.currentPosition;\n    },\n    set: function (value) {\n      this.currentPosition = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n    /**\n     * Returns `cloned object`.\n     * @private\n     */\n    get: function () {\n      var rValue = null;\n      return rValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Saves` the object using the specified writer.\n   * @private\n   */\n\n  PdfBoolean.prototype.save = function (writer) {\n    writer.write(this.boolToStr(this.value));\n  };\n  /**\n   * Creates a `copy of PdfBoolean`.\n   * @private\n   */\n\n\n  PdfBoolean.prototype.clone = function (crossTable) {\n    var newNumber = new PdfBoolean(this.value);\n    return newNumber;\n  }; // Implementation\n\n  /**\n   * Converts `boolean to string` - 0/1 'true'/'false'.\n   * @private\n   */\n\n\n  PdfBoolean.prototype.boolToStr = function (value) {\n    return value ? 'true' : 'false';\n  };\n\n  return PdfBoolean;\n}();\n\nexport { PdfBoolean };","map":null,"metadata":{},"sourceType":"module"}
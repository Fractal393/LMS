{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _extend = require(\"../../core/utils/extend\");\n\nmodule.exports = {\n  _getEmptyCell: function () {\n    return {\n      text: \"\",\n      value: void 0,\n      colspan: 1,\n      rowspan: 1\n    };\n  },\n  _defaultSetter: function (value) {\n    return !value ? 1 : value;\n  },\n  _cloneItem: function (item) {\n    return (0, _extend.extend)({}, item, this._getEmptyCell());\n  },\n  _prepareItems: function (items) {\n    var that = this;\n    var resultItems = [];\n    var cols = (items[0] || []).reduce(function (sum, item) {\n      return sum + that._defaultSetter(item.colspan);\n    }, 0);\n\n    var getItem = function (items) {\n      var rowIndex = 0;\n      var cellIndex = 0;\n      return function () {\n        var row = items[rowIndex] || [];\n        var item = row[cellIndex++];\n\n        if (cellIndex >= row.length) {\n          rowIndex++;\n          cellIndex = 0;\n        }\n\n        if (item) {\n          item.colspan = that._defaultSetter(item.colspan);\n          item.rowspan = that._defaultSetter(item.rowspan);\n        }\n\n        return item;\n      };\n    }(items);\n\n    function addItem(rowIndex, cellIndex, item) {\n      var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\n      row[cellIndex] = item;\n\n      if (item.colspan > 1 || item.rowspan > 1) {\n        var clone = that._cloneItem(item);\n\n        for (var c = 1; c < item.colspan; c++) {\n          addItem(rowIndex, cellIndex + c, clone);\n        }\n\n        for (var r = 1; r < item.rowspan; r++) {\n          for (var _c = 0; _c < item.colspan; _c++) {\n            addItem(rowIndex + r, cellIndex + _c, clone);\n          }\n        }\n      }\n    }\n\n    var item = getItem();\n    var rowIndex = 0;\n\n    while (item) {\n      for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\n        if (!item) {\n          break;\n        }\n\n        if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\n          continue;\n        }\n\n        addItem(rowIndex, cellIndex, item);\n        cellIndex += item.colspan - 1;\n        item = getItem();\n      }\n\n      rowIndex++;\n    }\n\n    return resultItems;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
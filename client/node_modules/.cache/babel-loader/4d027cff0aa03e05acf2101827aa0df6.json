{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\n\n\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\n\nvar PdfSampledFunction =\n/** @class */\nfunction (_super) {\n  __extends(PdfSampledFunction, _super);\n  /**\n   * Initializes a new instance of the `PdfSampledFunction` class.\n   * @public\n   */\n\n\n  function PdfSampledFunction(domain, range, sizes, samples) {\n    var _this = _super.call(this, new PdfStream()) || this;\n\n    if (typeof domain === 'undefined') {\n      _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n    } else {\n      _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n\n      _this.checkParams(domain, range, sizes, samples);\n\n      _this.setDomainAndRange(domain, range);\n\n      _this.setSizeAndValues(sizes, samples);\n    }\n\n    return _this;\n  } // Helper methods\n\n  /**\n   * Checks the input parameters.\n   */\n\n\n  PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n    var rLength = range.length;\n    var dLength = domain.length;\n    var sLength = samples.length;\n    var frameLength = rLength * (dLength / 4);\n  };\n  /**\n   * Sets the domain and range.\n   */\n\n\n  PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n    this.domain = new PdfArray(domain);\n    this.range = new PdfArray(range);\n  };\n  /**\n   * Sets the size and values.\n   */\n\n\n  PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n    var s = this.dictionary;\n    this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n    this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n    s.writeBytes(samples);\n  };\n\n  return PdfSampledFunction;\n}(PdfFunction);\n\nexport { PdfSampledFunction };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/file_manager/ui.file_manager.item_list.thumbnails.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _utils = require(\"../../events/utils\");\n\nvar _contextmenu = require(\"../../events/contextmenu\");\n\nvar _uiFile_manager = require(\"./ui.file_manager.common\");\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _uiFile_managerItems_listThumbnails = require(\"./ui.file_manager.items_list.thumbnails.list_box\");\n\nvar _uiFile_managerItems_listThumbnails2 = _interopRequireDefault(_uiFile_managerItems_listThumbnails);\n\nvar _uiFile_manager2 = require(\"./ui.file_manager.item_list\");\n\nvar _uiFile_manager3 = _interopRequireDefault(_uiFile_manager2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function (target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS = \"dx-filemanager-thumbnails\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS = \"dx-filemanager-thumbnails-item-thumbnail\";\nvar FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE = \"dxFileManager_thumbnails\";\n\nvar FileManagerThumbnailsItemList = function (_FileManagerItemListB) {\n  _inherits(FileManagerThumbnailsItemList, _FileManagerItemListB);\n\n  var _super = _createSuper(FileManagerThumbnailsItemList);\n\n  function FileManagerThumbnailsItemList() {\n    _classCallCheck(this, FileManagerThumbnailsItemList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerThumbnailsItemList, [{\n    key: \"_initMarkup\",\n    value: function () {\n      _get(_getPrototypeOf(FileManagerThumbnailsItemList.prototype), \"_initMarkup\", this).call(this);\n\n      this.$element().addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS);\n      var contextMenuEvent = (0, _utils.addNamespace)(_contextmenu.name, FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE);\n\n      _events_engine2.default.on(this.$element(), contextMenuEvent, this._onContextMenu.bind(this));\n\n      this._createItemList();\n    }\n  }, {\n    key: \"_createItemList\",\n    value: function () {\n      var selectionMode = this._isMultipleSelectionMode() ? \"multiple\" : \"single\";\n      var $itemListContainer = (0, _renderer2.default)(\"<div>\").appendTo(this.$element());\n      this._itemList = this._createComponent($itemListContainer, _uiFile_managerItems_listThumbnails2.default, {\n        dataSource: this._createDataSource(),\n        selectionMode: selectionMode,\n        selectedItemKeys: this.option(\"selectedItemKeys\"),\n        focusedItemKey: this.option(\"focusedItemKey\"),\n        activeStateEnabled: true,\n        hoverStateEnabled: true,\n        loopItemFocus: false,\n        focusStateEnabled: true,\n        onItemEnterKeyPressed: this._tryOpen.bind(this),\n        itemThumbnailTemplate: this._getItemThumbnailContainer.bind(this),\n        getTooltipText: this._getTooltipText.bind(this),\n        onSelectionChanged: this._onItemListSelectionChanged.bind(this),\n        onFocusedItemChanged: this._onItemListFocusedItemChanged.bind(this)\n      });\n    }\n  }, {\n    key: \"_onContextMenu\",\n    value: function (e) {\n      e.preventDefault();\n\n      if (!this._isDesktop()) {\n        return;\n      }\n\n      var items = null;\n      var targetItemElement = (0, _renderer2.default)(e.target).closest(this._getItemSelector());\n\n      if (targetItemElement.length > 0) {\n        var targetItem = this._itemList.getItemByItemElement(targetItemElement);\n\n        this._itemList.selectItem(targetItem);\n\n        items = this._getFileItemsForContextMenu(targetItem);\n      }\n\n      this._showContextMenu(items, e.target, e);\n    }\n  }, {\n    key: \"_getItemThumbnailCssClass\",\n    value: function () {\n      return FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS;\n    }\n  }, {\n    key: \"_getItemSelector\",\n    value: function () {\n      return \".\".concat(FILE_MANAGER_THUMBNAILS_ITEM_CLASS);\n    }\n  }, {\n    key: \"_getTooltipText\",\n    value: function (fileItemInfo) {\n      var item = fileItemInfo.fileItem;\n\n      if (item.tooltipText) {\n        return item.tooltipText;\n      }\n\n      var text = \"\".concat(item.name, \"\\r\\n\");\n\n      if (!item.isDirectory) {\n        text += \"\".concat(_message2.default.format(\"dxFileManager-listThumbnailsTooltipTextSize\"), \": \").concat((0, _uiFile_manager.getDisplayFileSize)(item.size), \"\\r\\n\");\n      }\n\n      text += \"\".concat(_message2.default.format(\"dxFileManager-listThumbnailsTooltipTextDateModified\"), \": \").concat(item.dateModified);\n      return text;\n    }\n  }, {\n    key: \"_onItemDblClick\",\n    value: function (e) {\n      var $item = (0, _renderer2.default)(e.currentTarget);\n\n      var item = this._itemList.getItemByItemElement($item);\n\n      this._tryOpen(item);\n    }\n  }, {\n    key: \"_tryOpen\",\n    value: function (item) {\n      if (item) {\n        this._raiseSelectedItemOpened(item);\n      }\n    }\n  }, {\n    key: \"_getItemsInternal\",\n    value: function () {\n      return _get(_getPrototypeOf(FileManagerThumbnailsItemList.prototype), \"_getItemsInternal\", this).call(this).then(function (items) {\n        var deferred = new _deferred.Deferred();\n        setTimeout(function () {\n          return deferred.resolve(items);\n        });\n        return deferred.promise();\n      });\n    }\n  }, {\n    key: \"_disableDragging\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function () {\n      return (0, _extend.extend)(_get(_getPrototypeOf(FileManagerThumbnailsItemList.prototype), \"_getDefaultOptions\", this).call(this), {\n        focusStateEnabled: true\n      });\n    }\n  }, {\n    key: \"_onItemListSelectionChanged\",\n    value: function (_ref) {\n      var addedItemKeys = _ref.addedItemKeys,\n          removedItemKeys = _ref.removedItemKeys;\n      var selectedItemInfos = this.getSelectedItems();\n      var selectedItems = selectedItemInfos.map(function (itemInfo) {\n        return itemInfo.fileItem;\n      });\n      var selectedItemKeys = selectedItems.map(function (item) {\n        return item.key;\n      });\n\n      this._tryRaiseSelectionChanged({\n        selectedItemInfos: selectedItemInfos,\n        selectedItems: selectedItems,\n        selectedItemKeys: selectedItemKeys,\n        currentSelectedItemKeys: addedItemKeys,\n        currentDeselectedItemKeys: removedItemKeys\n      });\n    }\n  }, {\n    key: \"_onItemListFocusedItemChanged\",\n    value: function (_ref2) {\n      var item = _ref2.item,\n          itemElement = _ref2.itemElement;\n\n      if (!this._isMultipleSelectionMode()) {\n        this._selectItemSingleSelection(item);\n      }\n\n      var fileSystemItem = (null === item || void 0 === item ? void 0 : item.fileItem) || null;\n\n      this._onFocusedItemChanged({\n        item: fileSystemItem,\n        itemKey: null === fileSystemItem || void 0 === fileSystemItem ? void 0 : fileSystemItem.key,\n        itemElement: itemElement || void 0\n      });\n    }\n  }, {\n    key: \"_setSelectedItemKeys\",\n    value: function (itemKeys) {\n      this._itemList.option(\"selectedItemKeys\", itemKeys);\n    }\n  }, {\n    key: \"_setFocusedItemKey\",\n    value: function (itemKey) {\n      this._itemList.option(\"focusedItemKey\", itemKey);\n    }\n  }, {\n    key: \"refresh\",\n    value: function (options) {\n      var actualOptions = {\n        dataSource: this._createDataSource()\n      };\n\n      if (options && Object.prototype.hasOwnProperty.call(options, \"focusedItemKey\")) {\n        actualOptions.focusedItemKey = options.focusedItemKey;\n      }\n\n      this._itemList.option(actualOptions);\n    }\n  }, {\n    key: \"_deselectItem\",\n    value: function (item) {\n      var itemElement = this._itemList.getItemElementByItem(item);\n\n      this._itemList.unselectItem(itemElement);\n    }\n  }, {\n    key: \"_selectItemSingleSelection\",\n    value: function (item) {\n      if (item) {\n        this._itemList.selectItem(item);\n      } else {\n        this._itemList.clearSelection();\n      }\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function () {\n      this._itemList.clearSelection();\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function () {\n      return this._itemList.getSelectedItems();\n    }\n  }]);\n\n  return FileManagerThumbnailsItemList;\n}(_uiFile_manager3.default);\n\nmodule.exports = FileManagerThumbnailsItemList;","map":null,"metadata":{},"sourceType":"script"}
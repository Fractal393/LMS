{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFileNameComponent = exports.useModifierIconComponents = exports.useThumbnailUrl = exports.useDndIcon = void 0;\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar recoil_1 = require(\"recoil\");\n\nvar thumbnails_recoil_1 = require(\"../../recoil/thumbnails.recoil\");\n\nvar icons_types_1 = require(\"../../types/icons.types\");\n\nvar file_helper_1 = require(\"../../util/file-helper\");\n\nvar logger_1 = require(\"../../util/logger\");\n\nvar ChonkyIcon_1 = require(\"../external/ChonkyIcon\");\n\nvar TextPlaceholder_1 = require(\"../external/TextPlaceholder\");\n\nexports.useDndIcon = function (selected, isDragging, isOver, canDrop) {\n  if (isOver) {\n    return canDrop && !selected ? icons_types_1.ChonkyIconName.dndCanDrop : icons_types_1.ChonkyIconName.dndCannotDrop;\n  }\n\n  return isDragging ? icons_types_1.ChonkyIconName.dndDragging : null;\n};\n\nexports.useThumbnailUrl = function (file, setThumbnailUrl, setThumbnailLoading) {\n  var thumbnailGenerator = recoil_1.useRecoilValue(thumbnails_recoil_1.thumbnailGeneratorState);\n  react_1.useEffect(function () {\n    var loadingCancelled = false;\n\n    if (file) {\n      if (thumbnailGenerator) {\n        setThumbnailLoading(true);\n        Promise.resolve().then(function () {\n          return thumbnailGenerator(file);\n        }).then(function (thumbnailUrl) {\n          if (loadingCancelled) return;\n          setThumbnailLoading(false);\n\n          if (thumbnailUrl && typeof thumbnailUrl === 'string') {\n            setThumbnailUrl(thumbnailUrl);\n          }\n        }).catch(function (error) {\n          if (!loadingCancelled) setThumbnailLoading(false);\n          logger_1.Logger.error(\"User-defined \\\"thumbnailGenerator\\\" handler threw an error: \" + error.message);\n        });\n      } else if (file.thumbnailUrl) {\n        setThumbnailUrl(file.thumbnailUrl);\n      }\n    }\n\n    return function () {\n      loadingCancelled = true;\n    };\n  }, [file, setThumbnailUrl, setThumbnailLoading, thumbnailGenerator]);\n};\n\nexports.useModifierIconComponents = function (file) {\n  var modifierIcons = react_1.useMemo(function () {\n    var modifierIcons = [];\n    if (file_helper_1.FileHelper.isHidden(file)) modifierIcons.push(icons_types_1.ChonkyIconName.hidden);\n    if (file_helper_1.FileHelper.isSymlink(file)) modifierIcons.push(icons_types_1.ChonkyIconName.symlink);\n    return modifierIcons;\n  }, [file]);\n  var modifierIconComponents = react_1.useMemo(function () {\n    return modifierIcons.map(function (icon, index) {\n      return react_1.default.createElement(ChonkyIcon_1.ChonkyIconFA, {\n        key: \"file-modifier-\" + index,\n        icon: icon\n      });\n    });\n  }, [modifierIcons]);\n  return modifierIconComponents;\n};\n\nexports.useFileNameComponent = function (file) {\n  return react_1.useMemo(function () {\n    var _a;\n\n    if (!file) return react_1.default.createElement(TextPlaceholder_1.TextPlaceholder, {\n      minLength: 15,\n      maxLength: 20\n    });\n    var name;\n    var extension;\n    var isDir = file_helper_1.FileHelper.isDirectory(file);\n\n    if (isDir) {\n      name = file.name;\n      extension = '/';\n    } else {\n      extension = (_a = file.ext) !== null && _a !== void 0 ? _a : path_1.default.extname(file.name);\n      name = file.name.substr(0, file.name.length - extension.length);\n    }\n\n    return react_1.default.createElement(react_1.default.Fragment, null, name, react_1.default.createElement(\"span\", {\n      className: \"chonky-file-entry-description-title-extension\"\n    }, extension));\n  }, [file]);\n};","map":null,"metadata":{},"sourceType":"script"}
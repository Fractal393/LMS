{"ast":null,"code":"/**\r\n * DevExtreme (events/gesture/swipeable.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar swipeEvents = require(\"../swipe\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar DOMComponent = require(\"../../core/dom_component\");\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar eventUtils = require(\"../utils\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar publicComponentUtils = require(\"../../core/utils/public_component\");\n\nvar DX_SWIPEABLE = \"dxSwipeable\";\nvar SWIPEABLE_CLASS = \"dx-swipeable\";\nvar ACTION_TO_EVENT_MAP = {\n  onStart: swipeEvents.start,\n  onUpdated: swipeEvents.swipe,\n  onEnd: swipeEvents.end,\n  onCancel: \"dxswipecancel\"\n};\nvar Swipeable = DOMComponent.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      elastic: true,\n      immediate: false,\n      direction: \"horizontal\",\n      itemSizeFunc: null,\n      onStart: null,\n      onUpdated: null,\n      onEnd: null,\n      onCancel: null\n    });\n  },\n  _render: function () {\n    this.callBase();\n    this.$element().addClass(SWIPEABLE_CLASS);\n\n    this._attachEventHandlers();\n  },\n  _attachEventHandlers: function () {\n    this._detachEventHandlers();\n\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var NAME = this.NAME;\n\n    this._createEventData();\n\n    each(ACTION_TO_EVENT_MAP, function (actionName, eventName) {\n      var action = this._createActionByOption(actionName, {\n        context: this\n      });\n\n      eventName = eventUtils.addNamespace(eventName, NAME);\n      eventsEngine.on(this.$element(), eventName, this._eventData, function (e) {\n        return action({\n          event: e\n        });\n      });\n    }.bind(this));\n  },\n  _createEventData: function () {\n    this._eventData = {\n      elastic: this.option(\"elastic\"),\n      itemSizeFunc: this.option(\"itemSizeFunc\"),\n      direction: this.option(\"direction\"),\n      immediate: this.option(\"immediate\")\n    };\n  },\n  _detachEventHandlers: function () {\n    eventsEngine.off(this.$element(), \".\" + DX_SWIPEABLE);\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"disabled\":\n      case \"onStart\":\n      case \"onUpdated\":\n      case \"onEnd\":\n      case \"onCancel\":\n      case \"elastic\":\n      case \"immediate\":\n      case \"itemSizeFunc\":\n      case \"direction\":\n        this._detachEventHandlers();\n\n        this._attachEventHandlers();\n\n        break;\n\n      case \"rtlEnabled\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _useTemplates: function () {\n    return false;\n  }\n});\npublicComponentUtils.name(Swipeable, DX_SWIPEABLE);\nmodule.exports = Swipeable;","map":null,"metadata":{},"sourceType":"script"}
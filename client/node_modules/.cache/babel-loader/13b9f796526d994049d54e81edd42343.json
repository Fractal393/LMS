{"ast":null,"code":"/**\r\n * DevExtreme (ui/file_manager/ui.file_manager.dialog_manager.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _uiFile_managerDialog = require(\"./ui.file_manager.dialog.name_editor\");\n\nvar _uiFile_managerDialog2 = _interopRequireDefault(_uiFile_managerDialog);\n\nvar _uiFile_managerDialog3 = require(\"./ui.file_manager.dialog.folder_chooser\");\n\nvar _uiFile_managerDialog4 = _interopRequireDefault(_uiFile_managerDialog3);\n\nvar _uiFile_managerDialog5 = require(\"./ui.file_manager.dialog.delete_item\");\n\nvar _uiFile_managerDialog6 = _interopRequireDefault(_uiFile_managerDialog5);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar FileManagerDialogManager = function () {\n  function FileManagerDialogManager($element, options) {\n    _classCallCheck(this, FileManagerDialogManager);\n\n    this._$element = $element;\n    this._options = options;\n    var $chooseFolderDialog = (0, _renderer2.default)(\"<div>\").appendTo(this._$element);\n    this._chooseDirectoryDialog = new _uiFile_managerDialog4.default($chooseFolderDialog, (0, _extend.extend)(this._options.chooseDirectoryDialog, {\n      onClosed: this._options.onDialogClosed\n    }));\n    var $renameDialog = (0, _renderer2.default)(\"<div>\").appendTo(this._$element);\n    this._renameItemDialog = new _uiFile_managerDialog2.default($renameDialog, {\n      title: _message2.default.format(\"dxFileManager-dialogRenameItemTitle\"),\n      buttonText: _message2.default.format(\"dxFileManager-dialogRenameItemButtonText\"),\n      onClosed: this._options.onDialogClosed\n    });\n    var $createDialog = (0, _renderer2.default)(\"<div>\").appendTo(this._$element);\n    this._createItemDialog = new _uiFile_managerDialog2.default($createDialog, {\n      title: _message2.default.format(\"dxFileManager-dialogCreateDirectoryTitle\"),\n      buttonText: _message2.default.format(\"dxFileManager-dialogCreateDirectoryButtonText\"),\n      onClosed: this._options.onDialogClosed\n    });\n    var $deleteItemDialog = (0, _renderer2.default)(\"<div>\").appendTo(this._$element);\n    this._deleteItemDialog = new _uiFile_managerDialog6.default($deleteItemDialog, {\n      onClosed: this._options.onDialogClosed\n    });\n  }\n\n  _createClass(FileManagerDialogManager, [{\n    key: \"getCopyDialog\",\n    value: function () {\n      this._chooseDirectoryDialog.switchToCopyDialog();\n\n      return this._chooseDirectoryDialog;\n    }\n  }, {\n    key: \"getMoveDialog\",\n    value: function () {\n      this._chooseDirectoryDialog.switchToMoveDialog();\n\n      return this._chooseDirectoryDialog;\n    }\n  }, {\n    key: \"getRenameItemDialog\",\n    value: function () {\n      return this._renameItemDialog;\n    }\n  }, {\n    key: \"getCreateItemDialog\",\n    value: function () {\n      return this._createItemDialog;\n    }\n  }, {\n    key: \"getDeleteItemDialog\",\n    value: function () {\n      return this._deleteItemDialog;\n    }\n  }]);\n\n  return FileManagerDialogManager;\n}();\n\nmodule.exports = FileManagerDialogManager;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar DateBoxStrategy = require(\"./ui.date_box.strategy\");\n\nvar support = require(\"../../core/utils/support\");\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar dateUtils = require(\"./ui.date_utils\");\n\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\n\nvar NativeStrategy = DateBoxStrategy.inherit({\n  NAME: \"Native\",\n  popupConfig: noop,\n  getParsedText: function (text, format) {\n    if (!text) {\n      return null;\n    }\n\n    if (\"datetime\" === this.dateBox.option(\"type\")) {\n      return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0]);\n    }\n\n    if (this._isTextInput()) {\n      return this.callBase(text, format);\n    } else {\n      return dateUtils.fromStandardDateFormat(text);\n    }\n  },\n  _isTextInput: function () {\n    return \"text\" === this.dateBox._input().prop(\"type\");\n  },\n  renderPopupContent: noop,\n  _getWidgetName: noop,\n  _getWidgetOptions: noop,\n  _getDateBoxType: function () {\n    var type = this.dateBox.option(\"type\");\n\n    if (inArray(type, dateUtils.SUPPORTED_FORMATS) === -1) {\n      type = \"date\";\n    } else {\n      if (\"datetime\" === type && !support.inputType(type)) {\n        type = \"datetime-local\";\n      }\n    }\n\n    return type;\n  },\n  customizeButtons: function () {\n    var dropDownButton = this.dateBox.getButton(\"dropDown\");\n\n    if (dropDownButton) {\n      dropDownButton.on(\"click\", function () {\n        this.dateBox._input().get(0).click();\n      }.bind(this));\n    }\n  },\n  getDefaultOptions: function () {\n    return {\n      mode: this._getDateBoxType()\n    };\n  },\n  getDisplayFormat: function (displayFormat) {\n    var type = this._getDateBoxType();\n\n    return displayFormat || dateUtils.FORMATS_MAP[type];\n  },\n  renderInputMinMax: function ($input) {\n    $input.attr({\n      min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\n      max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\n    });\n  }\n});\nmodule.exports = NativeStrategy;","map":null,"metadata":{},"sourceType":"script"}
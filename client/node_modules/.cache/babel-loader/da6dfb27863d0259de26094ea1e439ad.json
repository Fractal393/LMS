{"ast":null,"code":"/**\r\n * DevExtreme (ui/file_manager/ui.file_manager.item_list.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _double_click = require(\"../../events/double_click\");\n\nvar _utils = require(\"../../events/utils\");\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _icon = require(\"../../core/utils/icon\");\n\nvar _devices = require(\"../../core/devices\");\n\nvar _devices2 = _interopRequireDefault(_devices);\n\nvar _custom_store = require(\"../../data/custom_store\");\n\nvar _custom_store2 = _interopRequireDefault(_custom_store);\n\nvar _ui = require(\"../widget/ui.widget\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function (target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar FILE_MANAGER_FILES_VIEW_CLASS = \"dx-filemanager-files-view\";\nvar FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE = \"dxFileManager_open\";\n\nvar FileManagerItemListBase = function (_Widget) {\n  _inherits(FileManagerItemListBase, _Widget);\n\n  var _super = _createSuper(FileManagerItemListBase);\n\n  function FileManagerItemListBase() {\n    _classCallCheck(this, FileManagerItemListBase);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerItemListBase, [{\n    key: \"_init\",\n    value: function () {\n      this._initActions();\n\n      this._lockFocusedItemProcessing = false;\n      this._focusedItemKey = this.option(\"focusedItemKey\");\n\n      _get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_init\", this).call(this);\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function () {\n      this.$element().addClass(FILE_MANAGER_FILES_VIEW_CLASS);\n      var dblClickEventName = (0, _utils.addNamespace)(_double_click.name, FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE);\n\n      _events_engine2.default.on(this.$element(), dblClickEventName, this._getItemSelector(), this._onItemDblClick.bind(this));\n\n      _get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_initMarkup\", this).call(this);\n    }\n  }, {\n    key: \"_initActions\",\n    value: function () {\n      this._actions = {\n        onError: this._createActionByOption(\"onError\"),\n        onSelectionChanged: this._createActionByOption(\"onSelectionChanged\"),\n        onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\"),\n        onSelectedItemOpened: this._createActionByOption(\"onSelectedItemOpened\")\n      };\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function () {\n      return (0, _extend.extend)(_get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_getDefaultOptions\", this).call(this), {\n        selectionMode: \"single\",\n        selectedItemKeys: [],\n        focusedItemKey: void 0,\n        contextMenu: null,\n        getItems: null,\n        getItemThumbnail: null,\n        onError: null,\n        onSelectionChanged: null,\n        onFocusedItemChanged: null,\n        onSelectedItemOpened: null\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function (args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"selectionMode\":\n        case \"contextMenu\":\n        case \"getItems\":\n        case \"getItemThumbnail\":\n          this.repaint();\n          break;\n\n        case \"selectedItemKeys\":\n          this._setSelectedItemKeys(args.value);\n\n          break;\n\n        case \"focusedItemKey\":\n          if (!this._lockFocusedItemProcessing) {\n            this._setFocusedItemKey(args.value);\n          }\n\n          break;\n\n        case \"onError\":\n        case \"onSelectedItemOpened\":\n        case \"onSelectionChanged\":\n        case \"onFocusedItemChanged\":\n          this._actions[name] = this._createActionByOption(name);\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_getItems\",\n    value: function () {\n      var _this = this;\n\n      return this._getItemsInternal().done(function (itemInfos) {\n        _this._itemCount = itemInfos.length;\n\n        var parentDirectoryItem = _this._findParentDirectoryItem(itemInfos);\n\n        _this._hasParentDirectoryItem = !!parentDirectoryItem;\n        _this._parentDirectoryItemKey = parentDirectoryItem ? parentDirectoryItem.fileItem.key : null;\n      });\n    }\n  }, {\n    key: \"_getItemsInternal\",\n    value: function () {\n      var itemsGetter = this.option(\"getItems\");\n      var itemsResult = itemsGetter ? itemsGetter() : [];\n      return (0, _deferred.when)(itemsResult);\n    }\n  }, {\n    key: \"_raiseOnError\",\n    value: function (error) {\n      this._actions.onError({\n        error: error\n      });\n    }\n  }, {\n    key: \"_raiseSelectionChanged\",\n    value: function (args) {\n      this._actions.onSelectionChanged(args);\n    }\n  }, {\n    key: \"_raiseFocusedItemChanged\",\n    value: function (args) {\n      this._actions.onFocusedItemChanged(args);\n    }\n  }, {\n    key: \"_raiseSelectedItemOpened\",\n    value: function (fileItemInfo) {\n      this._actions.onSelectedItemOpened({\n        fileItemInfo: fileItemInfo\n      });\n    }\n  }, {\n    key: \"_tryRaiseSelectionChanged\",\n    value: function (_ref) {\n      var _this2 = this;\n\n      var selectedItemInfos = _ref.selectedItemInfos,\n          selectedItems = _ref.selectedItems,\n          selectedItemKeys = _ref.selectedItemKeys,\n          currentSelectedItemKeys = _ref.currentSelectedItemKeys,\n          currentDeselectedItemKeys = _ref.currentDeselectedItemKeys;\n\n      var parentDirectoryItem = this._findParentDirectoryItem(this.getSelectedItems());\n\n      if (parentDirectoryItem) {\n        this._deselectItem(parentDirectoryItem);\n      }\n\n      var raiseEvent = !this._hasParentDirectoryItem;\n      raiseEvent = raiseEvent || this._hasValidKeys(currentSelectedItemKeys) || this._hasValidKeys(currentDeselectedItemKeys);\n\n      if (raiseEvent) {\n        selectedItemInfos = this._filterOutItemByPredicate(selectedItemInfos, function (item) {\n          return item.fileItem.key === _this2._parentDirectoryItemKey;\n        });\n        selectedItems = this._filterOutParentDirectory(selectedItems);\n        selectedItemKeys = this._filterOutParentDirectoryKey(selectedItemKeys, true);\n        currentSelectedItemKeys = this._filterOutParentDirectoryKey(currentSelectedItemKeys, true);\n        currentDeselectedItemKeys = this._filterOutParentDirectoryKey(currentDeselectedItemKeys, true);\n\n        this._raiseSelectionChanged({\n          selectedItemInfos: selectedItemInfos,\n          selectedItems: selectedItems,\n          selectedItemKeys: selectedItemKeys,\n          currentSelectedItemKeys: currentSelectedItemKeys,\n          currentDeselectedItemKeys: currentDeselectedItemKeys\n        });\n      }\n    }\n  }, {\n    key: \"_onFocusedItemChanged\",\n    value: function (args) {\n      if (this._focusedItemKey === args.itemKey) {\n        return;\n      }\n\n      this._focusedItemKey = args.itemKey;\n      this._lockFocusedItemProcessing = true;\n      this.option(\"focusedItemKey\", args.itemKey);\n      this._lockFocusedItemProcessing = false;\n\n      this._raiseFocusedItemChanged(args);\n    }\n  }, {\n    key: \"_getItemThumbnail\",\n    value: function (fileInfo) {\n      var itemThumbnailGetter = this.option(\"getItemThumbnail\");\n      return itemThumbnailGetter ? itemThumbnailGetter(fileInfo) : {\n        thumbnail: \"\"\n      };\n    }\n  }, {\n    key: \"_getItemThumbnailContainer\",\n    value: function (fileInfo) {\n      var _this$_getItemThumbna = this._getItemThumbnail(fileInfo),\n          thumbnail = _this$_getItemThumbna.thumbnail,\n          cssClass = _this$_getItemThumbna.cssClass;\n\n      var $itemThumbnail = (0, _icon.getImageContainer)(thumbnail).addClass(this._getItemThumbnailCssClass());\n\n      if (cssClass) {\n        $itemThumbnail.addClass(cssClass);\n      }\n\n      return $itemThumbnail;\n    }\n  }, {\n    key: \"_getItemThumbnailCssClass\",\n    value: function () {\n      return \"\";\n    }\n  }, {\n    key: \"_getItemSelector\",\n    value: function () {}\n  }, {\n    key: \"_onItemDblClick\",\n    value: function (e) {}\n  }, {\n    key: \"_isDesktop\",\n    value: function () {\n      return \"desktop\" === _devices2.default.real().deviceType;\n    }\n  }, {\n    key: \"_showContextMenu\",\n    value: function (items, element, offset) {\n      this._contextMenu.showAt(items, element, offset);\n    }\n  }, {\n    key: \"_findParentDirectoryItem\",\n    value: function (itemInfos) {\n      for (var i = 0; i < itemInfos.length; i++) {\n        var itemInfo = itemInfos[i];\n\n        if (this._isParentDirectoryItem(itemInfo)) {\n          return itemInfo;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getFileItemsForContextMenu\",\n    value: function (fileItem) {\n      var result = this.getSelectedItems();\n\n      if (this._isParentDirectoryItem(fileItem)) {\n        result.push(fileItem);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_isParentDirectoryItem\",\n    value: function (itemInfo) {\n      return itemInfo.fileItem.isParentFolder;\n    }\n  }, {\n    key: \"_hasValidKeys\",\n    value: function (keys) {\n      return keys.length > 1 || 1 === keys.length && keys[0] !== this._parentDirectoryItemKey;\n    }\n  }, {\n    key: \"_filterOutParentDirectory\",\n    value: function (array, createNewArray) {\n      var _this3 = this;\n\n      return this._filterOutItemByPredicate(array, function (item) {\n        return item.key === _this3._parentDirectoryItemKey;\n      }, createNewArray);\n    }\n  }, {\n    key: \"_filterOutParentDirectoryKey\",\n    value: function (array, createNewArray) {\n      var _this4 = this;\n\n      return this._filterOutItemByPredicate(array, function (key) {\n        return key === _this4._parentDirectoryItemKey;\n      }, createNewArray);\n    }\n  }, {\n    key: \"_filterOutItemByPredicate\",\n    value: function (array, predicate, createNewArray) {\n      var result = array;\n      var index = -1;\n\n      for (var i = 0; i < array.length; i++) {\n        if (predicate(array[i])) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index !== -1) {\n        if (createNewArray) {\n          result = _toConsumableArray(array);\n        }\n\n        result.splice(index, 1);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_isMultipleSelectionMode\",\n    value: function () {\n      return \"multiple\" === this.option(\"selectionMode\");\n    }\n  }, {\n    key: \"_deselectItem\",\n    value: function (item) {}\n  }, {\n    key: \"_setSelectedItemKeys\",\n    value: function (itemKeys) {}\n  }, {\n    key: \"_setFocusedItemKey\",\n    value: function (itemKey) {}\n  }, {\n    key: \"_createDataSource\",\n    value: function () {\n      return {\n        store: new _custom_store2.default({\n          key: \"fileItem.key\",\n          load: this._getItems.bind(this)\n        })\n      };\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function () {}\n  }, {\n    key: \"clearSelection\",\n    value: function () {}\n  }, {\n    key: \"selectItem\",\n    value: function () {}\n  }, {\n    key: \"_contextMenu\",\n    get: function () {\n      return this.option(\"contextMenu\");\n    }\n  }]);\n\n  return FileManagerItemListBase;\n}(_ui2.default);\n\nmodule.exports = FileManagerItemListBase;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fileSelectedState = exports.selectionSizeState = exports.selectedFilesState = exports.selectionModifiersState = exports.selectionState = void 0;\n\nvar recoil_1 = require(\"recoil\");\n\nvar constants_1 = require(\"../util/constants\");\n\nvar selection_1 = require(\"../util/selection\");\n\nvar files_recoil_1 = require(\"./files.recoil\"); //\n// ==== Atoms\n\n\nexports.selectionState = recoil_1.atom({\n  key: 'selectionState',\n  default: new Set()\n});\nexports.selectionModifiersState = recoil_1.atom({\n  key: 'selectionModifiersState',\n  default: {\n    selectFiles: constants_1.NOOP_FUNCTION,\n    toggleSelection: constants_1.NOOP_FUNCTION,\n    clearSelection: constants_1.NOOP_FUNCTION\n  }\n}); //\n// ==== Selectors\n\nexports.selectedFilesState = recoil_1.selector({\n  key: 'selectedFilesState',\n  get: function (_a) {\n    var get = _a.get;\n    var files = get(files_recoil_1.filesState);\n    var selection = get(exports.selectionState);\n    return selection_1.SelectionHelper.getSelectedFiles(files, selection);\n  }\n});\nexports.selectionSizeState = recoil_1.selector({\n  key: 'selectionSizeState',\n  get: function (_a) {\n    var get = _a.get;\n    var selection = get(exports.selectionState);\n    return selection.size;\n  }\n});\nexports.fileSelectedState = recoil_1.selectorFamily({\n  key: 'fileSelectedState',\n  get: function (fileId) {\n    return function (_a) {\n      var get = _a.get; // We deliberately don't use `FileHelper.isSelectable` here. We want\n      // the UI to represent the true state of selection. This will help users\n      // see what exactly the selection is before running some code.\n\n      return !!fileId && get(exports.selectionState).has(fileId);\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"script"}
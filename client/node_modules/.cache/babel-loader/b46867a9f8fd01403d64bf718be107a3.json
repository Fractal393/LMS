{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOptions = void 0;\n\nvar react_1 = require(\"react\");\n\nvar recoil_1 = require(\"recoil\");\n\nvar file_actions_recoil_1 = require(\"../recoil/file-actions.recoil\");\n\nvar options_recoil_1 = require(\"../recoil/options.recoil\");\n\nvar file_actions_definitions_1 = require(\"./file-actions-definitions\");\n\nexports.useOptions = function (files) {\n  var fileActions = recoil_1.useRecoilValue(file_actions_recoil_1.fileActionsState);\n  var setOptionMap = recoil_1.useSetRecoilState(options_recoil_1.optionMapState);\n  react_1.useEffect(function () {\n    var optionMap = {};\n\n    for (var _i = 0, fileActions_1 = fileActions; _i < fileActions_1.length; _i++) {\n      var action = fileActions_1[_i];\n      if (!action.option) continue;\n      optionMap[action.option.id] = action.option.defaultValue;\n    }\n\n    setOptionMap(optionMap);\n  }, [fileActions, setOptionMap]);\n  var showHiddenFileState = recoil_1.useRecoilValue(options_recoil_1.optionState(file_actions_definitions_1.ChonkyActions.ToggleHiddenFiles.option.id));\n  return react_1.useMemo(function () {\n    if (showHiddenFileState !== false) return files;\n    return files.filter(function (file) {\n      return !file || !file.isHidden;\n    });\n  }, [files, showHiddenFileState]);\n};","map":null,"metadata":{},"sourceType":"script"}
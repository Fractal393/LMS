{"ast":null,"code":"/**\r\n * DevExtreme (core/memorized_callbacks.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _callbacks = require(\"./utils/callbacks\");\n\nvar _callbacks2 = _interopRequireDefault(_callbacks);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar MemorizedCallbacks = function () {\n  function MemorizedCallbacks() {\n    _classCallCheck(this, MemorizedCallbacks);\n\n    this.memory = [];\n    this.callbacks = (0, _callbacks2.default)();\n  }\n\n  _createClass(MemorizedCallbacks, [{\n    key: \"add\",\n    value: function (fn) {\n      (0, _iterator.each)(this.memory, function (_, item) {\n        return fn.apply(fn, item);\n      });\n      this.callbacks.add(fn);\n    }\n  }, {\n    key: \"remove\",\n    value: function (fn) {\n      this.callbacks.remove(fn);\n    }\n  }, {\n    key: \"fire\",\n    value: function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.memory.push(args);\n      this.callbacks.fire.apply(this.callbacks, args);\n    }\n  }]);\n\n  return MemorizedCallbacks;\n}();\n\nexports.default = MemorizedCallbacks;","map":null,"metadata":{},"sourceType":"script"}
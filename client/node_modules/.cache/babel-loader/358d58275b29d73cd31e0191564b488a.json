{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar constants_1 = require(\"./constants\");\n\nexports.useScrollIndicator = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.onElement,\n      onElement = _a === void 0 ? constants_1.INITIAL_ON_ELEMENT : _a,\n      _b = options.precision,\n      precision = _b === void 0 ? constants_1.INITIAL_PRECISION : _b,\n      _c = options.initialValue,\n      initialValue = _c === void 0 ? constants_1.INITIAL_VALUE : _c;\n  var roundFactor = react_1.useMemo(function () {\n    return Math.pow(constants_1.PRECISION_BASE, precision);\n  }, [precision]);\n  var targetElement = react_1.useRef(null);\n\n  var _d = react_1.useState(initialValue),\n      value = _d[0],\n      setValue = _d[1];\n\n  var handleValue = react_1.useCallback(function (scrolled) {\n    var value = Math.round(scrolled * roundFactor) / roundFactor;\n    setValue(Math.max(Math.min(value, constants_1.VALUE_MAX), constants_1.VALUE_MIN));\n  }, [roundFactor]);\n  var handleElementScroll = react_1.useCallback(function () {\n    var _a = targetElement.current.getBoundingClientRect(),\n        height = _a.height,\n        top = _a.top;\n\n    handleValue(top * -1 / height * constants_1.VALUE_MAX);\n  }, []);\n  var handlePageScroll = react_1.useCallback(function () {\n    var _a = document.documentElement,\n        scrollHeight = _a.scrollHeight,\n        clientHeight = _a.clientHeight,\n        scrollTop = _a.scrollTop;\n    var winScroll = document.body.scrollTop || scrollTop;\n    handleValue(winScroll / (scrollHeight - clientHeight) * constants_1.VALUE_MAX);\n  }, []);\n  var listener = react_1.useMemo(function () {\n    return onElement ? handleElementScroll : handlePageScroll;\n  }, [onElement]);\n  react_1.useEffect(function () {\n    window.addEventListener('scroll', listener);\n    return function () {\n      window.removeEventListener('scroll', listener);\n    };\n  }, []);\n\n  var state = __assign({\n    value: value\n  }, onElement ? {\n    targetElement: targetElement\n  } : null);\n\n  var api = react_1.useMemo(function () {\n    return {\n      activeListener: listener,\n      setScrollState: handleValue\n    };\n  }, [listener, handleValue]);\n  return [state, api];\n};","map":null,"metadata":{},"sourceType":"script"}
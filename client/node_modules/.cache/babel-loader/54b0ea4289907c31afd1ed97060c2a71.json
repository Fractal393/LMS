{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _extend2 = require('lodash/extend');\n\nvar _extend3 = _interopRequireDefault(_extend2);\n\nvar _findIndex2 = require('lodash/findIndex');\n\nvar _findIndex3 = _interopRequireDefault(_findIndex2);\n\nvar _find2 = require('lodash/find');\n\nvar _find3 = _interopRequireDefault(_find2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction addNotification(notifications, id, props) {\n  var index = (0, _findIndex3.default)(notifications, function (o) {\n    return o.id === id;\n  });\n\n  if (index !== -1) {\n    console.error('Can\\'t add notification: ' + id + ' already exists');\n    return notifications;\n  }\n\n  return notifications.concat([(0, _extends3.default)({\n    id: id,\n    children: props.children || []\n  }, props)]);\n}\n\nfunction updateNotification(notifications, id, props) {\n  return notifications.map(function (o) {\n    if (o.id !== id) {\n      return o;\n    }\n\n    return (0, _extend3.default)({}, o, props);\n  });\n}\n\nfunction getNotification(notifications, id) {\n  return (0, _find3.default)(notifications, function (o) {\n    return o.id === id;\n  });\n}\n\nfunction removeNotification(notifications, id) {\n  return notifications.filter(function (o) {\n    return o.id !== id;\n  });\n}\n\nfunction addChild(notificationChildren, id, element) {\n  return notificationChildren.concat([{\n    id: id,\n    element: element\n  }]);\n}\n\nfunction removeChild(notificationChildren, id) {\n  return notificationChildren.filter(function (o) {\n    return o.id !== id;\n  });\n}\n\nfunction updateChild(notificationChildren, id, element) {\n  return notificationChildren.map(function (o) {\n    if (o.id !== id) {\n      return o;\n    }\n\n    return (0, _extend3.default)({}, o, (0, _extends3.default)({\n      id: id\n    }, element));\n  });\n}\n\nfunction getChild(notificationChildren, id) {\n  return (0, _find3.default)(notificationChildren, function (o) {\n    return o.id === id;\n  });\n}\n\nexports.default = {\n  addNotification: addNotification,\n  updateNotification: updateNotification,\n  removeNotification: removeNotification,\n  getNotification: getNotification,\n  addChild: addChild,\n  removeChild: removeChild,\n  updateChild: updateChild,\n  getChild: getChild\n};","map":null,"metadata":{},"sourceType":"script"}
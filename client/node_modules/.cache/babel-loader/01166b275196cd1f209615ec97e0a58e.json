{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ExcelFilterBase } from '../common/excel-filter-base';\nimport { CheckBoxFilter } from './checkbox-filter';\nimport * as events from '../base/constant';\n/**\n * @hidden\n * `ExcelFilter` module is used to handle filtering action.\n */\n\nvar ExcelFilter =\n/** @class */\nfunction (_super) {\n  __extends(ExcelFilter, _super);\n  /**\n   * Constructor for excelbox filtering module\n   * @hidden\n   */\n\n\n  function ExcelFilter(parent, filterSettings, serviceLocator, customFltrOperators) {\n    var _this = _super.call(this, parent, filterSettings, serviceLocator) || this;\n\n    _this.parent = parent;\n    _this.isresetFocus = true;\n    _this.excelFilterBase = new ExcelFilterBase(parent, customFltrOperators);\n    return _this;\n  }\n  /**\n   * To destroy the excel filter.\n   * @return {void}\n   * @hidden\n   */\n\n\n  ExcelFilter.prototype.destroy = function () {\n    this.excelFilterBase.closeDialog();\n  };\n\n  ExcelFilter.prototype.openDialog = function (options) {\n    this.excelFilterBase.openDialog(options);\n  };\n\n  ExcelFilter.prototype.closeDialog = function () {\n    this.excelFilterBase.closeDialog();\n\n    if (this.isresetFocus) {\n      this.parent.notify(events.restoreFocus, {});\n    }\n  };\n  /* tslint:disable-next-line:max-line-length */\n\n\n  ExcelFilter.prototype.filterByColumn = function (fieldName, firstOperator, firstValue, predicate, matchCase, ignoreAccent, secondOperator, secondValue) {\n    /* tslint:disable-next-line:max-line-length */\n    this.excelFilterBase.filterByColumn(fieldName, firstOperator, firstValue, predicate, matchCase, ignoreAccent, secondOperator, secondValue);\n  };\n  /**\n   * @hidden\n   */\n\n\n  ExcelFilter.prototype.getFilterUIInfo = function () {\n    return this.excelFilterBase.getFilterUIInfo();\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  ExcelFilter.prototype.getModuleName = function () {\n    return 'excelFilter';\n  };\n\n  return ExcelFilter;\n}(CheckBoxFilter);\n\nexport { ExcelFilter };","map":null,"metadata":{},"sourceType":"module"}
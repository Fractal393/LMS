{"ast":null,"code":"import _slicedToArray from \"D:\\\\Akshat\\\\quill-editor-blog-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Akshat\\\\quill-editor-blog-master\\\\client\\\\src\\\\components\\\\views\\\\LoginPage\\\\LoginPage.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nconst Title = Typography.Title;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        formErrorMessage = _useState2[0],\n        setFormErrorMessage = _useState2[1];\n\n  const _useState3 = useState(rememberMeChecked),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rememberMe = _useState4[0],\n        setRememberMe = _useState4[1];\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n  return React.createElement(Formik, {\n    initialValues: {\n      email: initialEmail,\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password\n        };\n        dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            if (rememberMe === true) {\n              window.localStorage.setItem('rememberMe', values.id);\n            } else {\n              localStorage.removeItem('rememberMe');\n            }\n\n            props.history.push(\"/\");\n          } else {\n            setFormErrorMessage('Check out your Account or Password again');\n          }\n        }).catch(err => {\n          setFormErrorMessage('Check out your Account or Password again');\n          setTimeout(() => {\n            setFormErrorMessage(\"\");\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props => {\n    const values = props.values,\n          touched = props.touched,\n          errors = props.errors,\n          dirty = props.dirty,\n          isSubmitting = props.isSubmitting,\n          handleChange = props.handleChange,\n          handleBlur = props.handleBlur,\n          handleSubmit = props.handleSubmit,\n          handleReset = props.handleReset;\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Title, {\n      level: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        width: '350px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"email\",\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      placeholder: \"Enter your email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? 'text-input error' : 'text-input',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, errors.email)), React.createElement(Form.Item, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"password\",\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, errors.password)), formErrorMessage && React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: '#ff0000bf',\n        fontSize: '0.7rem',\n        border: '1px solid',\n        padding: '1rem',\n        borderRadius: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, formErrorMessage)), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      id: \"rememberMe\",\n      onChange: handleRememberMe,\n      checked: rememberMe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Remember me\"), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"/reset_user\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"forgot password\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        minWidth: '100%'\n      },\n      disabled: isSubmitting,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Log in\")), \"Or \", React.createElement(\"a\", {\n      href: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"register now!\"))));\n  });\n}\n\n;\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["D:\\Akshat\\quill-editor-blog-master\\client\\src\\components\\views\\LoginPage\\LoginPage.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","Form","Icon","Input","Button","Checkbox","Typography","useDispatch","Title","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","window","setItem","id","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","fontSize","border","padding","borderRadius","float","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n"]},"metadata":{},"sourceType":"module"}
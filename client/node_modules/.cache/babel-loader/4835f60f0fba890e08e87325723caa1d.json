{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _api = require('../api');\n\nvar _api2 = _interopRequireDefault(_api);\n\nvar _onFailError = require('../utils/onFailError');\n\nvar _onFailError2 = _interopRequireDefault(_onFailError);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (apiOptions, actions) {\n  var updateNotifications = actions.updateNotifications,\n      getResource = actions.getResource,\n      getNotifications = actions.getNotifications,\n      getSortState = actions.getSortState;\n  return {\n    id: 'sort',\n    shouldBeAvailable: function shouldBeAvailable() {\n      return true;\n    },\n    handler: function () {\n      var _ref = (0, _asyncToGenerator3.default)(\n      /*#__PURE__*/\n      _regenerator2.default.mark(function _callee(_ref2) {\n        var sortBy = _ref2.sortBy,\n            sortDirection = _ref2.sortDirection;\n        var id;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = getResource().id;\n                _context.prev = 1;\n                return _context.abrupt('return', _api2.default.getChildrenForId(apiOptions, {\n                  id: id,\n                  sortBy: sortBy,\n                  sortDirection: sortDirection\n                }));\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context['catch'](1);\n                (0, _onFailError2.default)({\n                  getNotifications: getNotifications,\n                  notificationId: 'rename',\n                  updateNotifications: updateNotifications\n                });\n                return _context.abrupt('return', null);\n\n              case 9:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, undefined, [[1, 5]]);\n      }));\n\n      return function handler(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  };\n};","map":null,"metadata":{},"sourceType":"script"}
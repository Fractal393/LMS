{"ast":null,"code":"/**\r\n * DevExtreme (ui/track_bar.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar Editor = require(\"./editor/editor\");\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar windowUtils = require(\"../core/utils/window\");\n\nvar fx = require(\"../animation/fx\");\n\nvar TRACKBAR_CLASS = \"dx-trackbar\";\nvar TRACKBAR_CONTAINER_CLASS = \"dx-trackbar-container\";\nvar TRACKBAR_RANGE_CLASS = \"dx-trackbar-range\";\nvar TRACKBAR_WRAPPER_CLASS = \"dx-trackbar-wrapper\";\nvar TrackBar = Editor.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      min: 0,\n      max: 100,\n      value: 0\n    });\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TRACKBAR_CLASS);\n\n    this._renderWrapper();\n\n    this._renderContainer();\n\n    this._renderRange();\n\n    this._renderValue();\n\n    this._setRangeStyles();\n\n    this.callBase();\n  },\n  _render: function () {\n    this.callBase();\n\n    this._setRangeStyles(this._rangeStylesConfig());\n  },\n  _renderWrapper: function () {\n    this._$wrapper = $(\"<div>\").addClass(TRACKBAR_WRAPPER_CLASS).appendTo(this.$element());\n  },\n  _renderContainer: function () {\n    this._$bar = $(\"<div>\").addClass(TRACKBAR_CONTAINER_CLASS).appendTo(this._$wrapper);\n  },\n  _renderRange: function () {\n    this._$range = $(\"<div>\").addClass(TRACKBAR_RANGE_CLASS).appendTo(this._$bar);\n  },\n  _renderValue: function () {\n    var val = this.option(\"value\");\n    var min = this.option(\"min\");\n    var max = this.option(\"max\");\n\n    if (min > max) {\n      return;\n    }\n\n    if (val < min) {\n      this.option(\"value\", min);\n      this._currentRatio = 0;\n      return;\n    }\n\n    if (val > max) {\n      this.option(\"value\", max);\n      this._currentRatio = 1;\n      return;\n    }\n\n    var ratio = min === max ? 0 : (val - min) / (max - min);\n    !this._needPreventAnimation && this._setRangeStyles({\n      width: 100 * ratio + \"%\"\n    });\n    this.setAria({\n      valuemin: this.option(\"min\"),\n      valuemax: max,\n      valuenow: val\n    });\n    this._currentRatio = ratio;\n  },\n  _rangeStylesConfig: function () {\n    return {\n      width: 100 * this._currentRatio + \"%\"\n    };\n  },\n  _setRangeStyles: function (options) {\n    fx.stop(this._$range);\n\n    if (!options) {\n      this._$range.css({\n        width: 0\n      });\n\n      return;\n    }\n\n    if (this._needPreventAnimation || !windowUtils.hasWindow()) {\n      return;\n    }\n\n    fx.animate(this._$range, {\n      type: \"custom\",\n      duration: 100,\n      to: options\n    });\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"value\":\n        this._renderValue();\n\n        this.callBase(args);\n        break;\n\n      case \"max\":\n      case \"min\":\n        this._renderValue();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _dispose: function () {\n    fx.stop(this._$range);\n    this.callBase();\n  }\n});\nregisterComponent(\"dxTrackBar\", TrackBar);\nmodule.exports = TrackBar;","map":null,"metadata":{},"sourceType":"script"}
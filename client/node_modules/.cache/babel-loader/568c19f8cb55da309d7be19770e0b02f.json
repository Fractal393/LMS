{"ast":null,"code":"import { createElement, append, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `PagerMessage` module is used to display pager information.\n */\n\nvar PagerMessage =\n/** @class */\nfunction () {\n  /**\n   * Constructor for externalMessage module\n   * @hidden\n   */\n  function PagerMessage(pagerModule) {\n    this.pagerModule = pagerModule;\n  }\n  /**\n   * The function is used to render pager message\n   * @hidden\n   */\n\n\n  PagerMessage.prototype.render = function () {\n    var div = createElement('div', {\n      className: 'e-parentmsgbar',\n      attrs: {\n        'aria-label': 'Pager Information'\n      }\n    });\n    this.pageNoMsgElem = createElement('span', {\n      className: 'e-pagenomsg',\n      styles: 'textalign:right'\n    });\n    this.pageCountMsgElem = createElement('span', {\n      className: 'e-pagecountmsg',\n      styles: 'textalign:right'\n    });\n    append([this.pageNoMsgElem, this.pageCountMsgElem], div);\n    this.pagerModule.element.appendChild(div);\n    this.refresh();\n  };\n  /**\n   * Refreshes the pager information.\n   */\n\n\n  PagerMessage.prototype.refresh = function () {\n    var pagerObj = this.pagerModule;\n\n    if (isBlazor()) {\n      this.pageNoMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('CurrentPageInfo'), [pagerObj.totalRecordsCount === 0 ? 0 : pagerObj.currentPage, pagerObj.totalPages || 0]) + ' ';\n      this.pageCountMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('TotalItemsInfo'), [pagerObj.totalRecordsCount || 0]);\n    } else {\n      this.pageNoMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('currentPageInfo'), [pagerObj.totalRecordsCount === 0 ? 0 : pagerObj.currentPage, pagerObj.totalPages || 0]) + ' ';\n      this.pageCountMsgElem.textContent = this.format(pagerObj.getLocalizedLabel(pagerObj.totalRecordsCount <= 1 ? 'totalItemInfo' : 'totalItemsInfo'), [pagerObj.totalRecordsCount || 0]);\n    }\n\n    this.pageNoMsgElem.parentElement.setAttribute('aria-label', this.pageNoMsgElem.textContent + this.pageCountMsgElem.textContent);\n  };\n  /**\n   * Hides the Pager information.\n   */\n\n\n  PagerMessage.prototype.hideMessage = function () {\n    if (this.pageNoMsgElem) {\n      this.pageNoMsgElem.style.display = 'none';\n    }\n\n    if (this.pageCountMsgElem) {\n      this.pageCountMsgElem.style.display = 'none';\n    }\n  };\n  /**\n   * Shows the Pager information.\n   */\n\n\n  PagerMessage.prototype.showMessage = function () {\n    if (!this.pageNoMsgElem) {\n      this.render();\n    }\n\n    this.pageNoMsgElem.style.display = '';\n    this.pageCountMsgElem.style.display = '';\n  };\n  /**\n   * To destroy the PagerMessage\n   * @method destroy\n   * @return {void}\n   * @hidden\n   */\n\n\n  PagerMessage.prototype.destroy = function () {//destroy\n  };\n\n  PagerMessage.prototype.format = function (str, args) {\n    var regx;\n\n    for (var i = 0; i < args.length; i++) {\n      regx = new RegExp('\\\\{' + i + '\\\\}', 'gm');\n      str = str.replace(regx, args[i].toString());\n    }\n\n    return str;\n  };\n\n  return PagerMessage;\n}();\n\nexport { PagerMessage };","map":null,"metadata":{},"sourceType":"module"}
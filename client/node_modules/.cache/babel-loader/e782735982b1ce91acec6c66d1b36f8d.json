{"ast":null,"code":"import { TemplateType } from './../pages/enum'; // import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\n\nvar PdfDocumentTemplate =\n/** @class */\nfunction () {\n  // Constructors\n\n  /**\n   * Initializes a new instance of the `PdfDocumentTemplate` class.\n   * @public\n   */\n  function PdfDocumentTemplate() {//\n  }\n\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n    // private m_stamps : PdfStampCollection;\n    // Properties\n\n    /**\n     * `Left` page template object.\n     * @public\n     */\n    get: function () {\n      return this.leftTemplate;\n    },\n    set: function (value) {\n      this.leftTemplate = this.checkElement(value, TemplateType.Left);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n    /**\n     * `Top` page template object.\n     * @public\n     */\n    get: function () {\n      return this.topTemplate;\n    },\n    set: function (value) {\n      this.topTemplate = this.checkElement(value, TemplateType.Top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n    /**\n     * `Right` page template object.\n     * @public\n     */\n    get: function () {\n      return this.rightTemplate;\n    },\n    set: function (value) {\n      this.rightTemplate = this.checkElement(value, TemplateType.Right);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n    /**\n     * `Bottom` page template object.\n     * @public\n     */\n    get: function () {\n      return this.bottomTemplate;\n    },\n    set: function (value) {\n      this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n    /**\n     * `EvenLeft` page template object.\n     * @public\n     */\n    get: function () {\n      return this.evenLeft;\n    },\n    set: function (value) {\n      this.evenLeft = this.checkElement(value, TemplateType.Left);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n    /**\n     * `EvenTop` page template object.\n     * @public\n     */\n    get: function () {\n      return this.evenTop;\n    },\n    set: function (value) {\n      this.evenTop = this.checkElement(value, TemplateType.Top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n    /**\n     * `EvenRight` page template object.\n     * @public\n     */\n    get: function () {\n      return this.evenRight;\n    },\n    set: function (value) {\n      this.evenRight = this.checkElement(value, TemplateType.Right);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n    /**\n     * `EvenBottom` page template object.\n     * @public\n     */\n    get: function () {\n      return this.evenBottom;\n    },\n    set: function (value) {\n      this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n    /**\n     * `OddLeft` page template object.\n     * @public\n     */\n    get: function () {\n      return this.oddLeft;\n    },\n    set: function (value) {\n      this.oddLeft = this.checkElement(value, TemplateType.Left);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n    /**\n     * `OddTop` page template object.\n     * @public\n     */\n    get: function () {\n      return this.oddTop;\n    },\n    set: function (value) {\n      this.oddTop = this.checkElement(value, TemplateType.Top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n    /**\n     * `OddRight` page template object.\n     * @public\n     */\n    get: function () {\n      return this.oddRight;\n    },\n    set: function (value) {\n      this.oddRight = this.checkElement(value, TemplateType.Right);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n    /**\n     * `OddBottom` page template object.\n     * @public\n     */\n    get: function () {\n      return this.oddBottom;\n    },\n    set: function (value) {\n      this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * Returns `left` template.\n   * @public\n   */\n\n  PdfDocumentTemplate.prototype.getLeft = function (page) {\n    if (page == null) {\n      throw new Error('ArgumentNullException:page');\n    }\n\n    var template = null; // if (page.Document.Pages != null) {\n\n    var even = this.isEven(page);\n\n    if (even) {\n      template = this.EvenLeft != null ? this.EvenLeft : this.left;\n    } else {\n      template = this.OddLeft != null ? this.OddLeft : this.left;\n    } // }\n\n\n    return template;\n  };\n  /**\n   * Returns `top` template.\n   * @public\n   */\n\n\n  PdfDocumentTemplate.prototype.getTop = function (page) {\n    if (page == null) {\n      throw new Error('ArgumentNullException:page');\n    }\n\n    var template = null; // if (page.Document.Pages != null) {\n\n    var even = this.isEven(page);\n\n    if (even) {\n      template = this.EvenTop != null ? this.EvenTop : this.top;\n    } else {\n      template = this.OddTop != null ? this.OddTop : this.top;\n    } // }\n\n\n    return template;\n  };\n  /**\n   * Returns `right` template.\n   * @public\n   */\n\n\n  PdfDocumentTemplate.prototype.getRight = function (page) {\n    if (page == null) {\n      throw new Error('ArgumentNullException:page');\n    }\n\n    var template = null; // if (page.Document.Pages != null) {\n\n    var even = this.isEven(page);\n\n    if (even) {\n      template = this.EvenRight != null ? this.EvenRight : this.right;\n    } else {\n      template = this.OddRight != null ? this.OddRight : this.right;\n    } // }\n\n\n    return template;\n  };\n  /**\n   * Returns `bottom` template.\n   * @public\n   */\n\n\n  PdfDocumentTemplate.prototype.getBottom = function (page) {\n    if (page == null) {\n      throw new Error('ArgumentNullException:page');\n    }\n\n    var template = null; // if (page.Document.Pages != null) {\n\n    var even = this.isEven(page);\n\n    if (even) {\n      template = this.EvenBottom != null ? this.EvenBottom : this.bottom;\n    } else {\n      template = this.OddBottom != null ? this.OddBottom : this.bottom;\n    } // }\n\n\n    return template;\n  };\n  /**\n   * Checks whether the page `is even`.\n   * @private\n   */\n\n\n  PdfDocumentTemplate.prototype.isEven = function (page) {\n    var pages = page.section.document.pages;\n    var index = 0;\n\n    if (pages.pageCollectionIndex.containsKey(page)) {\n      index = pages.pageCollectionIndex.getValue(page) + 1;\n    } else {\n      index = pages.indexOf(page) + 1;\n    }\n\n    var even = index % 2 === 0;\n    return even;\n  };\n  /**\n   * Checks a `template element`.\n   * @private\n   */\n\n\n  PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n    if (templateElement != null) {\n      if (typeof templateElement.type !== 'undefined' && templateElement.type !== TemplateType.None) {\n        throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n      }\n\n      templateElement.type = type;\n    }\n\n    return templateElement;\n  };\n\n  return PdfDocumentTemplate;\n}();\n\nexport { PdfDocumentTemplate };","map":null,"metadata":{},"sourceType":"module"}
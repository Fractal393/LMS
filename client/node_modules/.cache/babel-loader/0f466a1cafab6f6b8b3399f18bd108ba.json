{"ast":null,"code":"/**\r\n * DevExtreme (ui/file_manager/ui.file_manager.common.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar whenSome = function (arg, onSuccess, onError) {\n  onSuccess = onSuccess || _common.noop;\n  onError = onError || _common.noop;\n\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n\n  var deferreds = arg.map(function (item, index) {\n    return (0, _deferred.when)(item).then(function (result) {\n      _type2.default.isFunction(onSuccess) && onSuccess({\n        item: item,\n        index: index,\n        result: result\n      });\n      return result;\n    }, function (error) {\n      if (!error) {\n        error = {};\n      }\n\n      error.index = index;\n      _type2.default.isFunction(onError) && onError(error);\n      return new _deferred.Deferred().resolve().promise();\n    });\n  });\n  return _deferred.when.apply(null, deferreds);\n};\n\nvar getDisplayFileSize = function (byteSize) {\n  var sizesTitles = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  var index = 0;\n  var displaySize = byteSize;\n\n  while (displaySize >= 1024 && index <= sizesTitles.length - 1) {\n    displaySize /= 1024;\n    index++;\n  }\n\n  displaySize = Math.round(10 * displaySize) / 10;\n  return \"\".concat(displaySize, \" \").concat(sizesTitles[index]);\n};\n\nvar extendAttributes = function (targetObject, sourceObject, objectKeysArray) {\n  objectKeysArray.forEach(function (objectKey) {\n    (0, _extend.extend)(true, targetObject, _type2.default.isDefined(sourceObject[objectKey]) ? _defineProperty({}, objectKey, sourceObject[objectKey]) : {});\n  });\n  return targetObject;\n};\n\nvar findItemsByKeys = function (itemInfos, keys) {\n  var itemMap = {};\n  keys.forEach(function (key) {\n    itemMap[key] = null;\n  });\n  itemInfos.forEach(function (itemInfo) {\n    var key = itemInfo.fileItem.key;\n\n    if (Object.prototype.hasOwnProperty.call(itemMap, key)) {\n      itemMap[key] = itemInfo;\n    }\n  });\n  var result = [];\n  keys.forEach(function (key) {\n    var itemInfo = itemMap[key];\n\n    if (itemInfo) {\n      result.push(itemInfo);\n    }\n  });\n  return result;\n};\n\nmodule.exports = whenSome;\nmodule.exports.getDisplayFileSize = getDisplayFileSize;\nmodule.exports.extendAttributes = extendAttributes;\nmodule.exports.findItemsByKeys = findItemsByKeys;","map":null,"metadata":{},"sourceType":"script"}
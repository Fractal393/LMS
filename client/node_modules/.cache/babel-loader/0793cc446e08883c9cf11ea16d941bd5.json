{"ast":null,"code":"// Call dispose callback on each cache purge\n\"use strict\";\n\nvar callable = require(\"es5-ext/object/valid-callable\"),\n    forEach = require(\"es5-ext/object/for-each\"),\n    extensions = require(\"../lib/registered-extensions\"),\n    apply = Function.prototype.apply;\n\nextensions.dispose = function (dispose, conf, options) {\n  var del;\n  callable(dispose);\n\n  if (options.async && extensions.async || options.promise && extensions.promise) {\n    conf.on(\"deleteasync\", del = function (id, resultArray) {\n      apply.call(dispose, null, resultArray);\n    });\n    conf.on(\"clearasync\", function (cache) {\n      forEach(cache, function (result, id) {\n        del(id, result);\n      });\n    });\n    return;\n  }\n\n  conf.on(\"delete\", del = function (id, result) {\n    dispose(result);\n  });\n  conf.on(\"clear\", function (cache) {\n    forEach(cache, function (result, id) {\n      del(id, result);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}
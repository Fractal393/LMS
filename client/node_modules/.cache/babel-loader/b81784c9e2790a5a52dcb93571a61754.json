{"ast":null,"code":"/**\r\n * DevExtreme (ui/toolbar/ui.toolbar.menu.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar registerComponent = require(\"../../core/component_registrator\");\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar List = require(\"../list/ui.list.base\");\n\nvar TOOLBAR_MENU_ACTION_CLASS = \"dx-toolbar-menu-action\";\nvar TOOLBAR_HIDDEN_BUTTON_CLASS = \"dx-toolbar-hidden-button\";\nvar TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS = \"dx-toolbar-hidden-button-group\";\nvar TOOLBAR_MENU_SECTION_CLASS = \"dx-toolbar-menu-section\";\nvar TOOLBAR_MENU_LAST_SECTION_CLASS = \"dx-toolbar-menu-last-section\";\nvar ToolbarMenu = List.inherit({\n  _activeStateUnit: \".\" + TOOLBAR_MENU_ACTION_CLASS,\n  _initMarkup: function () {\n    this._renderSections();\n\n    this.callBase();\n  },\n  _getSections: function () {\n    return this._itemContainer().children();\n  },\n  _itemElements: function () {\n    return this._getSections().children(this._itemSelector());\n  },\n  _renderSections: function () {\n    var that = this;\n\n    var $container = this._itemContainer();\n\n    each([\"before\", \"center\", \"after\", \"menu\"], function () {\n      var sectionName = \"_$\" + this + \"Section\";\n      var $section = that[sectionName];\n\n      if (!$section) {\n        that[sectionName] = $section = $(\"<div>\").addClass(TOOLBAR_MENU_SECTION_CLASS);\n      }\n\n      $section.appendTo($container);\n    });\n  },\n  _renderItems: function () {\n    this.callBase.apply(this, arguments);\n\n    this._updateSections();\n  },\n  _updateSections: function () {\n    var $sections = this.$element().find(\".\" + TOOLBAR_MENU_SECTION_CLASS);\n    $sections.removeClass(TOOLBAR_MENU_LAST_SECTION_CLASS);\n    $sections.not(\":empty\").eq(-1).addClass(TOOLBAR_MENU_LAST_SECTION_CLASS);\n  },\n  _renderItem: function (index, item, itemContainer, $after) {\n    var location = item.location || \"menu\";\n    var $container = this[\"_$\" + location + \"Section\"];\n    var itemElement = this.callBase(index, item, $container, $after);\n\n    if (this._getItemTemplateName({\n      itemData: item\n    })) {\n      itemElement.addClass(\"dx-toolbar-menu-custom\");\n    }\n\n    if (\"menu\" === location || \"dxButton\" === item.widget || item.isAction) {\n      itemElement.addClass(TOOLBAR_MENU_ACTION_CLASS);\n    }\n\n    if (\"dxButton\" === item.widget) {\n      itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_CLASS);\n    }\n\n    if (\"dxButtonGroup\" === item.widget) {\n      itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS);\n    }\n\n    itemElement.addClass(item.cssClass);\n    return itemElement;\n  },\n  _getItemTemplateName: function (args) {\n    var template = this.callBase(args);\n    var data = args.itemData;\n    var menuTemplate = data && data.menuItemTemplate;\n    return menuTemplate || template;\n  },\n  _itemClickHandler: function (e, args, config) {\n    if ($(e.target).closest(\".\" + TOOLBAR_MENU_ACTION_CLASS).length) {\n      this.callBase(e, args, config);\n    }\n  },\n  _clean: function () {\n    this._getSections().empty();\n\n    this.callBase();\n  }\n});\nregisterComponent(\"dxToolbarMenu\", ToolbarMenu);\nmodule.exports = ToolbarMenu;","map":null,"metadata":{},"sourceType":"script"}
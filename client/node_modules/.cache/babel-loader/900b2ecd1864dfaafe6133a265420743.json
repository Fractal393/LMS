{"ast":null,"code":"/**\r\n * DevExtreme (ui/action_sheet.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar window = require(\"../core/utils/window\").getWindow();\n\nvar noop = require(\"../core/utils/common\").noop;\n\nvar messageLocalization = require(\"../localization/message\");\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar Button = require(\"./button\");\n\nvar CollectionWidget = require(\"./collection/ui.collection_widget.edit\");\n\nvar Popup = require(\"./popup\");\n\nvar Popover = require(\"./popover\");\n\nvar BindableTemplate = require(\"../core/templates/bindable_template\").BindableTemplate;\n\nvar Deferred = require(\"../core/utils/deferred\").Deferred;\n\nvar ACTION_SHEET_CLASS = \"dx-actionsheet\";\nvar ACTION_SHEET_CONTAINER_CLASS = \"dx-actionsheet-container\";\nvar ACTION_SHEET_POPUP_WRAPPER_CLASS = \"dx-actionsheet-popup-wrapper\";\nvar ACTION_SHEET_POPOVER_WRAPPER_CLASS = \"dx-actionsheet-popover-wrapper\";\nvar ACTION_SHEET_CANCEL_BUTTON_CLASS = \"dx-actionsheet-cancel\";\nvar ACTION_SHEET_ITEM_CLASS = \"dx-actionsheet-item\";\nvar ACTION_SHEET_ITEM_DATA_KEY = \"dxActionSheetItemData\";\nvar ACTION_SHEET_WITHOUT_TITLE_CLASS = \"dx-actionsheet-without-title\";\nvar ActionSheet = CollectionWidget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      usePopover: false,\n      target: null,\n      title: \"\",\n      showTitle: true,\n      showCancelButton: true,\n      cancelText: messageLocalization.format(\"Cancel\"),\n      onCancelClick: null,\n      visible: false,\n      noDataText: \"\",\n      focusStateEnabled: false,\n      selectionByClick: false\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: {\n        platform: \"ios\",\n        tablet: true\n      },\n      options: {\n        usePopover: true\n      }\n    }]);\n  },\n  _initTemplates: function () {\n    this.callBase();\n\n    this._templateManager.addDefaultTemplates({\n      item: new BindableTemplate(function ($container, data) {\n        var button = new Button($(\"<div>\"), extend({\n          onClick: data && data.click\n        }, data));\n        $container.append(button.$element());\n      }, [\"disabled\", \"icon\", \"text\", \"type\", \"onClick\", \"click\"], this.option(\"integrationOptions.watchMethod\"))\n    });\n  },\n  _itemContainer: function () {\n    return this._$itemContainer;\n  },\n  _itemClass: function () {\n    return ACTION_SHEET_ITEM_CLASS;\n  },\n  _itemDataKey: function () {\n    return ACTION_SHEET_ITEM_DATA_KEY;\n  },\n  _toggleVisibility: noop,\n  _renderDimensions: noop,\n  _initMarkup: function () {\n    this.callBase();\n    this.$element().addClass(ACTION_SHEET_CLASS);\n\n    this._createItemContainer();\n  },\n  _render: function () {\n    this._renderPopup();\n  },\n  _createItemContainer: function () {\n    this._$itemContainer = $(\"<div>\").addClass(ACTION_SHEET_CONTAINER_CLASS);\n\n    this._renderDisabled();\n  },\n  _renderDisabled: function () {\n    this._$itemContainer.toggleClass(\"dx-state-disabled\", this.option(\"disabled\"));\n  },\n  _renderPopup: function () {\n    this._$popup = $(\"<div>\").appendTo(this.$element());\n    this._isPopoverMode() ? this._createPopover() : this._createPopup();\n\n    this._renderPopupTitle();\n\n    this._mapPopupOption(\"visible\");\n  },\n  _mapPopupOption: function (optionName) {\n    this._popup && this._popup.option(optionName, this.option(optionName));\n  },\n  _isPopoverMode: function () {\n    return this.option(\"usePopover\") && this.option(\"target\");\n  },\n  _renderPopupTitle: function () {\n    this._mapPopupOption(\"showTitle\");\n\n    this._popup && this._popup._wrapper().toggleClass(ACTION_SHEET_WITHOUT_TITLE_CLASS, !this.option(\"showTitle\"));\n  },\n  _clean: function () {\n    if (this._$popup) {\n      this._$popup.remove();\n    }\n\n    this.callBase();\n  },\n  _overlayConfig: function () {\n    return {\n      onInitialized: function (args) {\n        this._popup = args.component;\n      }.bind(this),\n      disabled: false,\n      showTitle: true,\n      title: this.option(\"title\"),\n      deferRendering: !window.angular,\n      onContentReady: this._popupContentReadyAction.bind(this),\n      onHidden: this.hide.bind(this)\n    };\n  },\n  _createPopover: function () {\n    this._createComponent(this._$popup, Popover, extend(this._overlayConfig(), {\n      width: this.option(\"width\") || 200,\n      height: this.option(\"height\") || \"auto\",\n      target: this.option(\"target\")\n    }));\n\n    this._popup._wrapper().addClass(ACTION_SHEET_POPOVER_WRAPPER_CLASS);\n  },\n  _createPopup: function () {\n    this._createComponent(this._$popup, Popup, extend(this._overlayConfig(), {\n      dragEnabled: false,\n      width: this.option(\"width\") || \"100%\",\n      height: this.option(\"height\") || \"auto\",\n      showCloseButton: false,\n      position: {\n        my: \"bottom\",\n        at: \"bottom\",\n        of: window\n      },\n      animation: {\n        show: {\n          type: \"slide\",\n          duration: 400,\n          from: {\n            position: {\n              my: \"top\",\n              at: \"bottom\",\n              of: window\n            }\n          },\n          to: {\n            position: {\n              my: \"bottom\",\n              at: \"bottom\",\n              of: window\n            }\n          }\n        },\n        hide: {\n          type: \"slide\",\n          duration: 400,\n          from: {\n            position: {\n              my: \"bottom\",\n              at: \"bottom\",\n              of: window\n            }\n          },\n          to: {\n            position: {\n              my: \"top\",\n              at: \"bottom\",\n              of: window\n            }\n          }\n        }\n      }\n    }));\n\n    this._popup._wrapper().addClass(ACTION_SHEET_POPUP_WRAPPER_CLASS);\n  },\n  _popupContentReadyAction: function () {\n    this._popup.$content().append(this._$itemContainer);\n\n    this._attachClickEvent();\n\n    this._attachHoldEvent();\n\n    this._prepareContent();\n\n    this._renderContent();\n\n    this._renderCancelButton();\n  },\n  _renderCancelButton: function () {\n    if (this._isPopoverMode()) {\n      return;\n    }\n\n    if (this._$cancelButton) {\n      this._$cancelButton.remove();\n    }\n\n    if (this.option(\"showCancelButton\")) {\n      var cancelClickAction = this._createActionByOption(\"onCancelClick\") || noop;\n      var that = this;\n      this._$cancelButton = $(\"<div>\").addClass(ACTION_SHEET_CANCEL_BUTTON_CLASS).appendTo(this._popup && this._popup.$content());\n\n      this._createComponent(this._$cancelButton, Button, {\n        disabled: false,\n        text: this.option(\"cancelText\"),\n        onClick: function (e) {\n          var hidingArgs = {\n            event: e,\n            cancel: false\n          };\n          cancelClickAction(hidingArgs);\n\n          if (!hidingArgs.cancel) {\n            that.hide();\n          }\n        },\n        integrationOptions: {}\n      });\n    }\n  },\n  _attachItemClickEvent: noop,\n  _itemClickHandler: function (e) {\n    this.callBase(e);\n\n    if (!$(e.target).is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      this.hide();\n    }\n  },\n  _itemHoldHandler: function (e) {\n    this.callBase(e);\n\n    if (!$(e.target).is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      this.hide();\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"width\":\n      case \"height\":\n      case \"visible\":\n      case \"title\":\n        this._mapPopupOption(args.name);\n\n        break;\n\n      case \"disabled\":\n        this._renderDisabled();\n\n        break;\n\n      case \"showTitle\":\n        this._renderPopupTitle();\n\n        break;\n\n      case \"showCancelButton\":\n      case \"onCancelClick\":\n      case \"cancelText\":\n        this._renderCancelButton();\n\n        break;\n\n      case \"target\":\n      case \"usePopover\":\n      case \"items\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  toggle: function (showing) {\n    var that = this;\n    var d = new Deferred();\n\n    that._popup.toggle(showing).done(function () {\n      that.option(\"visible\", showing);\n      d.resolveWith(that);\n    });\n\n    return d.promise();\n  },\n  show: function () {\n    return this.toggle(true);\n  },\n  hide: function () {\n    return this.toggle(false);\n  }\n});\nregisterComponent(\"dxActionSheet\", ActionSheet);\nmodule.exports = ActionSheet;\nmodule.exports.default = module.exports;","map":null,"metadata":{},"sourceType":"script"}
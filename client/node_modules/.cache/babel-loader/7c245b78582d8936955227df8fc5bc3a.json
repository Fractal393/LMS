{"ast":null,"code":"/**\n *\n * `Logger` class\n */\nimport { isNullOrUndefined, L10n, isUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil, DataManager } from '@syncfusion/ej2-data';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation/grid';\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/';\nvar WARNING = '[EJ2Grid.Warning]';\nvar ERROR = '[EJ2Grid.Error]';\nvar INFO = '[EJ2Grid.Info]';\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger(parent) {\n    this.parent = parent;\n    this.parent.on('initial-end', this.patchadaptor, this);\n  }\n\n  Logger.prototype.getModuleName = function () {\n    return 'logger';\n  };\n\n  Logger.prototype.log = function (types, args) {\n    if (!(types instanceof Array)) {\n      types = [types];\n    }\n\n    var type = types;\n\n    for (var i = 0; i < type.length; i++) {\n      var item = detailLists[type[i]];\n      var cOp = item.check(args, this.parent);\n\n      if (cOp.success) {\n        console[item.logType](item.generateMessage(args, this.parent, cOp.options));\n      }\n    }\n  };\n\n  Logger.prototype.patchadaptor = function () {\n    var adaptor = this.parent.getDataModule().dataManager.adaptor;\n    var original = adaptor.beforeSend;\n\n    if (original) {\n      adaptor.beforeSend = function (dm, request, settings) {\n        original.call(adaptor, dm, request, settings);\n      };\n    }\n  };\n\n  Logger.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('initial-end', this.patchadaptor);\n  };\n\n  return Logger;\n}();\n\nexport { Logger };\nexport var detailLists = {\n  module_missing: {\n    type: 'module_missing',\n    logType: 'warn',\n    check: function (args, parent) {\n      var injected = parent.getInjectedModules().map(function (m) {\n        return m.prototype.getModuleName();\n      });\n      /* tslint:disable-next-line:no-any */\n\n      var modules = parent.requiredModules().map(function (m) {\n        return m.member;\n      }).filter(function (name) {\n        return injected.indexOf(name) === -1;\n      });\n      return {\n        success: modules.filter(function (m) {\n          return m !== 'resize';\n        }).length > 0,\n        options: modules\n      };\n    },\n    generateMessage: function (args, parent, modules) {\n      modules = modules.filter(function (m) {\n        return m !== 'resize';\n      }).reduce(function (prev, cur) {\n        return prev + (\"* \" + cur + \"\\n\");\n      }, '');\n      return WARNING + ': MODULES MISSING\\n' + 'The following modules are not injected:.\\n' + (\"\" + modules) + (\"Refer to \" + BASE_DOC_URL + \"/module.html for documentation on importing feature modules.\");\n    }\n  },\n  promise_enabled: {\n    type: 'promise_enabled',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: typeof Promise === 'undefined'\n      };\n    },\n    generateMessage: function (args, parent) {\n      return ERROR + ': PROMISE UNDEFINED\\n' + 'Promise object is not present in the global environment,' + 'please use polyfil to support Promise object in your environment.\\n' + (\"Refer to \" + DOC_URL + \"/base/browser.html?#required-polyfills for more information.\");\n    }\n  },\n  primary_column_missing: {\n    type: 'primary_column_missing',\n    logType: 'warn',\n    check: function (args, parent) {\n      return {\n        success: parent.getColumns().filter(function (column) {\n          return column.isPrimaryKey;\n        }).length === 0\n      };\n    },\n    generateMessage: function (args, parent) {\n      return WARNING + ': PRIMARY KEY MISSING\\n' + 'Editing is enabled but primary key column is not specified.\\n' + (\"Refer to \" + BASE_DOC_URL + \"/api-column.html?#isprimarykey for documentation on providing primary key columns.\");\n    }\n  },\n  selection_key_missing: {\n    type: 'selection_key_missing',\n    logType: 'warn',\n    check: function (args, parent) {\n      return {\n        success: parent.selectionSettings.persistSelection && parent.getColumns().filter(function (column) {\n          return column.isPrimaryKey;\n        }).length === 0\n      };\n    },\n    generateMessage: function (args, parent) {\n      return WARNING + ': PRIMARY KEY MISSING\\n' + 'selectionSettings.persistSelection property is enabled. It requires one primary key column to persist selection.\\n' + (\"Refer to \" + BASE_DOC_URL + \"/api-column.html?#isprimarykey for documentation on providing primary key columns.\");\n    }\n  },\n  actionfailure: {\n    type: 'actionfailure',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: true\n      };\n    },\n    generateMessage: function (args, parent) {\n      var message = '';\n      var formatError = formatErrorHandler(args, parent);\n      var ajaxError = ajaxErrorHandler(args, parent);\n\n      if (ajaxError !== '') {\n        message = ajaxError;\n      } else if (formatError !== '') {\n        message = formatError;\n      } else {\n        message = args.error;\n      }\n\n      return WARNING + ': ' + message;\n    }\n  },\n  locale_missing: {\n    type: 'locale_missing',\n    logType: 'warn',\n    check: function (args, parent) {\n      var lObj = DataUtil.getObject(\"locale.\" + parent.locale + \".grid\", L10n);\n      return {\n        success: parent.locale !== 'en-US' && isNullOrUndefined(lObj)\n      };\n    },\n    generateMessage: function (args, parent) {\n      return WARNING + ': LOCALE CONFIG MISSING\\n' + (\"Locale configuration for '\" + parent.locale + \"' is not provided.\\n\") + (\"Refer to \" + BASE_DOC_URL + \"/globalization-and-localization.html?#localization \\n             for documentation on setting locale configuration.\");\n    }\n  },\n  limitation: {\n    type: 'limitation',\n    logType: 'warn',\n    check: function (args, parent) {\n      var name = args;\n      var opt;\n\n      switch (name) {\n        case 'freeze':\n          opt = {\n            success: parent.allowGrouping || !isUndefined(parent.detailTemplate) || !isUndefined(parent.childGrid) || !isUndefined(parent.rowTemplate) || parent.enableVirtualization,\n            options: {\n              name: 'freeze'\n            }\n          };\n          break;\n\n        case 'virtualization':\n          opt = {\n            success: !isUndefined(parent.detailTemplate) || !isUndefined(parent.childGrid) || parent.frozenRows !== 0 || parent.frozenColumns !== 0,\n            options: {\n              name: 'virtualization'\n            }\n          };\n          break;\n\n        default:\n          opt = {\n            success: false\n          };\n          break;\n      }\n\n      return opt;\n    },\n    generateMessage: function (args, parent, options) {\n      var name = options.name;\n      var opt;\n\n      switch (name) {\n        case 'freeze':\n          opt = 'Frozen rows and columns do not support the following features:\\n' + '* Virtualization\\n' + '* Row Template\\n' + '* Details Template\\n' + '* Hierarchy Grid\\n' + '* Grouping';\n          break;\n\n        case 'virtualization':\n          opt = 'Virtualization does not support the following features.\\n' + '* Freeze rows and columns.\\n' + '* Details Template.\\n' + '* Hierarchy Grid.\\n';\n          break;\n\n        default:\n          opt = '';\n          break;\n      }\n\n      return WARNING + (\": \" + name.toUpperCase() + \" LIMITATIONS\\n\") + opt;\n    }\n  },\n  check_datasource_columns: {\n    type: 'check_datasource_columns',\n    logType: 'warn',\n    check: function (args, parent) {\n      return {\n        success: !(parent.columns.length || parent.dataSource instanceof DataManager || parent.dataSource.length)\n      };\n    },\n    generateMessage: function (args, parent) {\n      return WARNING + ': GRID CONFIG MISSING\\n' + 'dataSource and columns are not provided in the grid. ' + 'At least one of either must be provided for grid configuration.\\n' + (\"Refer to \" + BASE_DOC_URL + \"/columns.html for documentation on configuring the grid data and columns.\");\n    }\n  },\n  virtual_height: {\n    type: 'virtual_height',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: isNullOrUndefined(parent.height) || parent.height === 'auto'\n      };\n    },\n    generateMessage: function (args, parent) {\n      return ERROR + ': GRID HEIGHT MISSING \\n' + 'height property is required to use virtualization.\\n' + (\"Refer to \" + BASE_DOC_URL + \"/virtual.html for documentation on configuring the virtual grid.\");\n    }\n  },\n  grid_remote_edit: {\n    type: 'grid_remote_edit',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: Array.isArray(args) || Array.isArray(args.result)\n      };\n    },\n    generateMessage: function (args, parent) {\n      return ERROR + ': RETRUN VALUE MISSING  \\n' + 'Remote service returns invalid data. \\n' + (\"Refer to \" + BASE_DOC_URL + \"/edit.html for documentation on configuring editing with remote data.\");\n    }\n  },\n  grid_sort_comparer: {\n    type: 'grid_sort_comparer',\n    logType: 'warn',\n    check: function (args, parent) {\n      return {\n        success: parent.getDataModule().isRemote()\n      };\n    },\n    generateMessage: function (args, parent) {\n      return WARNING + ': SORT COMPARER NOT WORKING  \\n' + 'Sort comparer will not work with remote data.' + (\"Refer to \" + BASE_DOC_URL + \"/sorting/#custom-sort-comparer for documentation on using the sort comparer.\");\n    }\n  },\n  resize_min_max: {\n    type: 'resize_min_max',\n    logType: 'info',\n    check: function (args, parent) {\n      return {\n        success: args.column.minWidth && args.column.minWidth >= args.width || args.column.maxWidth && args.column.maxWidth <= args.width\n      };\n    },\n    generateMessage: function (args, parent) {\n      return INFO + ': RESIZING COLUMN REACHED MIN OR MAX  \\n' + 'The column resizing width is at its min or max.';\n    }\n  },\n  action_disabled_column: {\n    type: 'action_disabled_column',\n    logType: 'info',\n    check: function (args, parent) {\n      var success = true;\n      var fn;\n\n      switch (args.moduleName) {\n        case 'reorder':\n          if (isNullOrUndefined(args.destColumn)) {\n            fn = \"reordering action is disabled for the \" + args.column.headerText + \" column\";\n          } else {\n            fn = \"reordering action is disabled for the \" + (args.column.allowReordering ? args.destColumn.headerText : args.column.headerText) + \" column\";\n          }\n\n          break;\n\n        case 'group':\n          fn = \"grouping action is disabled for the \" + args.columnName + \" column.\";\n          break;\n\n        case 'filter':\n          fn = \"filtering action is disabled for the \" + args.columnName + \" column.\";\n          break;\n\n        case 'sort':\n          fn = \"sorting action is disabled for the \" + args.columnName + \" column.\";\n          break;\n      }\n\n      return {\n        success: success,\n        options: {\n          fn: fn\n        }\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return INFO + (\": ACTION DISABLED \\n \" + options.fn);\n    }\n  },\n  exporting_begin: {\n    type: 'exporting_begin',\n    logType: 'info',\n    check: function (args, parent) {\n      return {\n        success: true,\n        options: {\n          args: args\n        }\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return INFO + (\": EXPORTNIG INPROGRESS \\n Grid \" + options.args + \"ing is in progress\");\n    }\n  },\n  exporting_complete: {\n    type: 'exporting_complete',\n    logType: 'info',\n    check: function (args, parent) {\n      return {\n        success: true,\n        options: {\n          args: args\n        }\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return INFO + (\": EXPORTNIG COMPLETED \\n Grid \" + options.args + \"ing is complete\");\n    }\n  },\n  foreign_key_failure: {\n    type: 'foreign_key_failure',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: true\n      };\n    },\n    generateMessage: function (args, parent) {\n      return ERROR + ': FOREIGNKEY CONFIG \\n  Grid foreign key column needs a valid data source/service.' + (\"Refer to \" + BASE_DOC_URL + \"/columns/#foreign-key-column for documentation on configuring foreign key columns.\");\n    }\n  },\n  initial_action: {\n    type: 'initial_action',\n    logType: 'error',\n    check: function (args, parent) {\n      var success = true;\n      var fn;\n\n      switch (args.moduleName) {\n        case 'group':\n          fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" + 'Please provide a valid field name to group the column';\n          break;\n\n        case 'filter':\n          fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" + 'Please provide a valid field name to filter the column.';\n          break;\n\n        case 'sort':\n          fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" + 'Please provide a valid field name to sort the column.';\n          break;\n      }\n\n      return {\n        success: success,\n        options: {\n          fn: fn\n        }\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return ERROR + (\": INITIAL ACTION FAILURE \\n \" + options.fn);\n    }\n  },\n  frozen_rows_columns: {\n    type: 'frozen_rows_columns',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: parent.getColumns().length <= parent.frozenColumns || parent.frozenRows >= parent.currentViewData.length\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return ERROR + (\": OUT OF RANGE ERROR-\\n \" + (parent.getColumns().length <= parent.frozenColumns ? 'FROZEN COLUMNS,' : '')) + ((parent.frozenRows >= parent.currentViewData.length ? 'FROZEN ROWS' : '') + \" invalid\");\n    }\n  },\n  column_type_missing: {\n    type: 'column_type_missing',\n    logType: 'error',\n    check: function (args, parent) {\n      return {\n        success: isNullOrUndefined(args.column.type),\n        options: args.column.headerText\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return ERROR + (\": COLUMN TYPE MISSING-\\n  \" + options + \" column type was invalid or not defined.\") + (\"Please go through below help link: \" + DOC_URL + \"/grid/columns/#column-type\");\n    }\n  },\n  datasource_syntax_mismatch: {\n    type: 'datasource_syntax_mismatch',\n    logType: 'warn',\n    check: function (args, parent) {\n      return {\n        success: (args.dataState.dataSource instanceof DataManager || args.dataState.dataSource instanceof Array) && !isNullOrUndefined(args.dataState.dataStateChange)\n      };\n    },\n    generateMessage: function (args, parent, options) {\n      return WARNING + ': DATASOURCE SYNTAX WARNING\\n' + 'DataSource should be in the form of {result: Object[], count: number}' + 'when dataStateChangeEvent used';\n    }\n  }\n};\n\nvar formatErrorHandler = function (args, parent) {\n  var error = args.error;\n\n  if (error.indexOf && error.indexOf('Format options') !== 0) {\n    return '';\n  }\n\n  return 'INVALID FORMAT\\n' + 'For more information, refer to the following documentation links:\\n' + (\"Number format: \" + DOC_URL + \"/base/intl.html?#supported-format-string.\\n\") + (\"Date format: \" + DOC_URL + \"/base/intl.html?#manipulating-datetime.\\n\") + (\"Message: \" + error);\n};\n\nvar ajaxErrorHandler = function (args, parent) {\n  var error = DataUtil.getObject('error.error', args);\n\n  if (isNullOrUndefined(error)) {\n    return '';\n  }\n\n  var jsonResult = '';\n\n  try {\n    jsonResult = JSON.parse(error.responseText);\n  } catch (_a) {\n    jsonResult = '';\n  }\n\n  return 'XMLHTTPREQUEST FAILED\\n' + (\"Url: \" + error.responseURL + \"\\n\") + (\"Status: \" + error.status + \" - \" + error.statusText + \"\\n\") + (\"\" + (jsonResult !== '' ? 'Message: ' + jsonResult : ''));\n};","map":null,"metadata":{},"sourceType":"module"}
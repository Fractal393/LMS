{"ast":null,"code":"import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\n\nvar PdfDestination =\n/** @class */\nfunction () {\n  function PdfDestination(arg1, arg2) {\n    // Fields\n\n    /**\n     * Internal variable for accessing fields from `DictionryProperties` class.\n     * @private\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\n     * Type of the `destination`.\n     * @private\n     */\n\n    this.destinationMode = PdfDestinationMode.Location;\n    /**\n     * `Zoom` factor.\n     * @private\n     * @default 0\n     */\n\n    this.zoomFactor = 0;\n    /**\n     * `Location` of the destination.\n     * @default new PointF() with 0 ,0 as co-ordinates\n     * @private\n     */\n\n    this.destinationLocation = new PointF(0, 0);\n    /**\n     * `Bounds` of the destination as RectangleF.\n     * @default RectangleF.Empty\n     * @private\n     */\n\n    this.bounds = new RectangleF();\n    /**\n     * Pdf primitive representing `this` object.\n     * @private\n     */\n\n    this.array = new PdfArray();\n    var angle = PdfPageRotateAngle.RotateAngle0;\n    this.destinationLocation = new PointF(0, this.destinationLocation.y);\n    this.pdfPage = arg1;\n\n    if (arg2 instanceof PointF) {\n      this.destinationLocation = arg2;\n    } else {\n      this.bounds = arg2;\n    }\n  }\n\n  Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n    // Properties\n\n    /**\n     * Gets and Sets the `zoom` factor.\n     * @private\n     */\n    get: function () {\n      return this.zoomFactor;\n    },\n    set: function (value) {\n      this.zoomFactor = value;\n      this.initializePrimitive();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"page\", {\n    /**\n     * Gets and Sets the `page` object.\n     * @private\n     */\n    get: function () {\n      return this.pdfPage;\n    },\n    set: function (value) {\n      this.pdfPage = value;\n      this.initializePrimitive();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"mode\", {\n    /**\n     * Gets and Sets the destination `mode`.\n     * @private\n     */\n    get: function () {\n      return this.destinationMode;\n    },\n    set: function (value) {\n      this.destinationMode = value;\n      this.initializePrimitive();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"location\", {\n    /**\n     * Gets and Sets the `location`.\n     * @private\n     */\n    get: function () {\n      return this.destinationLocation;\n    },\n    set: function (value) {\n      this.destinationLocation = value;\n      this.initializePrimitive();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n   * @private\n   */\n\n  PdfDestination.prototype.pointToNativePdf = function (page, point) {\n    var section = page.section;\n    return section.pointToNativePdf(page, point);\n  };\n  /**\n   * `In fills` array by correct values.\n   * @private\n   */\n\n\n  PdfDestination.prototype.initializePrimitive = function () {\n    this.array.clear();\n    this.array.add(new PdfReferenceHolder(this.pdfPage));\n\n    switch (this.destinationMode) {\n      case PdfDestinationMode.Location:\n        var simplePage = this.pdfPage;\n        var point = new PointF();\n        point = this.pointToNativePdf(simplePage, this.destinationLocation);\n        this.array.add(new PdfName(this.dictionaryProperties.xyz));\n        this.array.add(new PdfNumber(point.x));\n        this.array.add(new PdfNumber(point.y));\n        this.array.add(new PdfNumber(this.zoomFactor));\n        break;\n\n      case PdfDestinationMode.FitToPage:\n        this.array.add(new PdfName(this.dictionaryProperties.fit));\n        break;\n    }\n  };\n\n  Object.defineProperty(PdfDestination.prototype, \"element\", {\n    /**\n     * Gets the `element` representing this object.\n     * @private\n     */\n    get: function () {\n      this.initializePrimitive();\n      return this.array;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfDestination;\n}();\n\nexport { PdfDestination };","map":null,"metadata":{},"sourceType":"module"}
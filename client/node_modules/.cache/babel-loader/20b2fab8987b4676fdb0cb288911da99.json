{"ast":null,"code":"\"use strict\";\n\nvar toPosInt = require(\"../number/to-pos-integer\");\n\nvar test = function (arg1, arg2) {\n  return arg2;\n};\n\nvar desc, defineProperty, generate, mixin;\n\ntry {\n  Object.defineProperty(test, \"length\", {\n    configurable: true,\n    writable: false,\n    enumerable: false,\n    value: 1\n  });\n} catch (ignore) {}\n\nif (test.length === 1) {\n  // ES6\n  desc = {\n    configurable: true,\n    writable: false,\n    enumerable: false\n  };\n  defineProperty = Object.defineProperty;\n\n  module.exports = function (fn, length) {\n    length = toPosInt(length);\n    if (fn.length === length) return fn;\n    desc.value = length;\n    return defineProperty(fn, \"length\", desc);\n  };\n} else {\n  mixin = require(\"../object/mixin\");\n\n  generate = function () {\n    var cache = [];\n    return function (length) {\n      var args,\n          i = 0;\n      if (cache[length]) return cache[length];\n      args = [];\n\n      while (length--) args.push(\"a\" + (++i).toString(36)); // eslint-disable-next-line no-new-func\n\n\n      return new Function(\"fn\", \"return function (\" + args.join(\", \") + \") { return fn.apply(this, arguments); };\");\n    };\n  }();\n\n  module.exports = function (src, length) {\n    var target;\n    length = toPosInt(length);\n    if (src.length === length) return src;\n    target = generate(length)(src);\n\n    try {\n      mixin(target, src);\n    } catch (ignore) {}\n\n    return target;\n  };\n}","map":null,"metadata":{},"sourceType":"script"}
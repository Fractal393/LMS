{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * arc.ts class for EJ2-PDF\n */\n\n\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\n\nvar PdfArc =\n/** @class */\nfunction (_super) {\n  __extends(PdfArc, _super);\n  /* tslint:disable-next-line:max-line-length */\n\n\n  function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n    var _this = this;\n\n    if (typeof arg1 === 'undefined') {\n      _this = _super.call(this) || this;\n    } else if (arg1 instanceof RectangleF) {\n      _this = _super.call(this, arg1, arg2, arg3) || this;\n    } else if (arg1 instanceof PdfPen) {\n      if (arg2 instanceof RectangleF) {\n        _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n      } else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n        _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n      } else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n        _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n      }\n    } else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n      _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n    } else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n      _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n    }\n\n    return _this;\n  }\n\n  PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n    if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n      return this.drawHelper(argu1, arg2.x, arg2.y);\n    } else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n      return this.drawHelper(argu1, arg2, null);\n    } else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n      return this.drawHelper(argu1, arg2, arg3, null);\n    } else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n      return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n    } else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n      var widthValue = argu1.graphics.clientSize.width - arg2;\n      var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n      return this.drawHelper(argu1, layoutRect, arg4);\n    } else {\n      return this.drawHelper(argu1, arg2, arg3);\n    }\n  }; // Implementation\n\n  /**\n   * `drawInternal` Draws an element on the Graphics.\n   * @param graphics Graphics context where the element should be printed.\n   *\n   */\n\n\n  PdfArc.prototype.drawInternal = function (graphics) {\n    if (graphics == null) {\n      throw new Error('ArgumentNullException : graphics');\n    }\n\n    graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n  };\n\n  return PdfArc;\n}(PdfEllipsePart);\n\nexport { PdfArc };","map":null,"metadata":{},"sourceType":"module"}
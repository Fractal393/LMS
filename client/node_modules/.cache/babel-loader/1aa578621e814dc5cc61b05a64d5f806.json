{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\n\nvar PdfDocumentLinkAnnotation =\n/** @class */\nfunction (_super) {\n  __extends(PdfDocumentLinkAnnotation, _super);\n\n  function PdfDocumentLinkAnnotation(rectangle, destination) {\n    var _this = _super.call(this, rectangle) || this; // Fields\n\n    /**\n     * `Destination` of the annotation.\n     * @default null\n     * @private\n     */\n\n\n    _this.pdfDestination = null;\n\n    if (typeof destination !== 'undefined') {\n      _this.destination = destination;\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n    // Properties\n\n    /**\n     * Gets or sets the `destination` of the annotation.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create new pages\n     * let page1 : PdfPage = document.pages.add();\n     * let page2 : PdfPage = document.pages.add();\n     * // create a new rectangle\n     * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n     * //\n     * // create a new document link annotation\n     * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n     * // set the annotation text\n     * documentLinkAnnotation.text = 'Document link annotation';\n     * // set the destination\n     * documentLinkAnnotation.destination = new PdfDestination(page2);\n     * // set the documentlink annotation location\n     * documentLinkAnnotation.destination.location = new PointF(10, 0);\n     * // add this annotation to a new page\n     * page1.annotations.add(documentLinkAnnotation);\n     * //\n     * // save the document to disk\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @default null\n     */\n    get: function () {\n      return this.pdfDestination;\n    },\n    set: function (value) {\n      // if (this.pdfDestination !== value) {\n      this.pdfDestination = value; // }\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * `Saves` annotation object.\n   * @private\n   */\n\n  PdfDocumentLinkAnnotation.prototype.save = function () {\n    _super.prototype.save.call(this);\n\n    if (this.pdfDestination != null) {\n      this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n    }\n  };\n  /**\n   * `Clone` the document link annotation.\n   * @private\n   */\n\n\n  PdfDocumentLinkAnnotation.prototype.clone = function () {\n    var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n    annot.color = this.color;\n    annot.brush = this.brush;\n    annot.destination = this.destination;\n    annot.font = this.font;\n    return annot;\n  };\n\n  return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation);\n\nexport { PdfDocumentLinkAnnotation };","map":null,"metadata":{},"sourceType":"module"}
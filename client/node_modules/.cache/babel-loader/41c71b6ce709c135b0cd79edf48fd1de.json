{"ast":null,"code":"\"use strict\";\n/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChonkyPresentationLayer = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar recoil_1 = require(\"recoil\");\n\nvar drag_and_drop_recoil_1 = require(\"../../recoil/drag-and-drop.recoil\");\n\nvar file_actions_recoil_1 = require(\"../../recoil/file-actions.recoil\");\n\nvar selection_recoil_1 = require(\"../../recoil/selection.recoil\");\n\nvar hooks_helpers_1 = require(\"../../util/hooks-helpers\");\n\nvar DnDFileListDragLayer_1 = require(\"../file-entry/DnDFileListDragLayer\");\n\nvar ErrorMessage_1 = require(\"./ErrorMessage\");\n\nvar HotkeyListener_1 = require(\"./HotkeyListener\");\n\nexports.ChonkyPresentationLayer = function (props) {\n  var validationErrors = props.validationErrors,\n      children = props.children;\n  var fileActions = recoil_1.useRecoilValue(file_actions_recoil_1.fileActionsState);\n  var selectionModifiers = recoil_1.useRecoilValue(selection_recoil_1.selectionModifiersState);\n  var enableDragAndDrop = recoil_1.useRecoilValue(drag_and_drop_recoil_1.enableDragAndDropState); // Deal with clicks outside of Chonky\n\n  var chonkyRootRef = hooks_helpers_1.useClickListener({\n    // We only clear out the selection on outside click if the click target was\n    // not a button. We don't want to clear out the selection when a button is\n    // clicked because Chonky users might want to trigger some\n    // selection-related action on that button click.\n    onOutsideClick: function (event, targetIsAButton) {\n      return targetIsAButton ? null : selectionModifiers.clearSelection();\n    }\n  }); // Generate necessary components\n\n  var hotkeyListenerComponents = react_1.useMemo(function () {\n    return fileActions.map(function (action) {\n      return react_1.default.createElement(HotkeyListener_1.HotkeyListener, {\n        key: \"file-action-listener-\" + action.id,\n        fileActionId: action.id\n      });\n    });\n  }, [fileActions]);\n  var validationErrorComponents = react_1.useMemo(function () {\n    return validationErrors.map(function (data, index) {\n      return react_1.default.createElement(ErrorMessage_1.ErrorMessage, {\n        key: \"error-message-\" + index,\n        message: data.message,\n        bullets: data.bullets\n      });\n    });\n  }, [validationErrors]);\n  return react_1.default.createElement(\"div\", {\n    ref: chonkyRootRef,\n    className: \"chonky-root chonky-no-select\"\n  }, enableDragAndDrop && react_1.default.createElement(DnDFileListDragLayer_1.DnDFileListDragLayer, null), hotkeyListenerComponents, validationErrorComponents, children ? children : null);\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/collection/ui.collection_widget.base.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _dom_adapter = require(\"../../core/dom_adapter\");\n\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _action = require(\"../../core/action\");\n\nvar _action2 = _interopRequireDefault(_action);\n\nvar _guid = require(\"../../core/guid\");\n\nvar _guid2 = _interopRequireDefault(_guid);\n\nvar _ui = require(\"../widget/ui.widget\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _utils = require(\"../../events/utils\");\n\nvar eventUtils = _interopRequireWildcard(_utils);\n\nvar _pointer = require(\"../../events/pointer\");\n\nvar _pointer2 = _interopRequireDefault(_pointer);\n\nvar _data_helper = require(\"../../data_helper\");\n\nvar _data_helper2 = _interopRequireDefault(_data_helper);\n\nvar _item = require(\"./item\");\n\nvar _item2 = _interopRequireDefault(_item);\n\nvar _selectors = require(\"../widget/selectors\");\n\nvar _selectors2 = _interopRequireDefault(_selectors);\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _hold = require(\"../../events/hold\");\n\nvar _hold2 = _interopRequireDefault(_hold);\n\nvar _data = require(\"../../core/utils/data\");\n\nvar _click = require(\"../../events/click\");\n\nvar _click2 = _interopRequireDefault(_click);\n\nvar _contextmenu = require(\"../../events/contextmenu\");\n\nvar _contextmenu2 = _interopRequireDefault(_contextmenu);\n\nvar _bindable_template = require(\"../../core/templates/bindable_template\");\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar COLLECTION_CLASS = \"dx-collection\";\nvar ITEM_CLASS = \"dx-item\";\nvar CONTENT_CLASS_POSTFIX = \"-content\";\nvar ITEM_CONTENT_PLACEHOLDER_CLASS = \"dx-item-content-placeholder\";\nvar ITEM_DATA_KEY = \"dxItemData\";\nvar ITEM_INDEX_KEY = \"dxItemIndex\";\nvar ITEM_TEMPLATE_ID_PREFIX = \"tmpl-\";\nvar ITEMS_SELECTOR = \"[data-options*='dxItem']\";\nvar SELECTED_ITEM_CLASS = \"dx-item-selected\";\nvar ITEM_RESPONSE_WAIT_CLASS = \"dx-item-response-wait\";\nvar EMPTY_COLLECTION = \"dx-empty-collection\";\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\nvar ITEM_PATH_REGEX = /^([^.]+\\[\\d+\\]\\.)+([\\w.]+)$/;\nvar ANONYMOUS_TEMPLATE_NAME = \"item\";\nvar FOCUS_UP = \"up\";\nvar FOCUS_DOWN = \"down\";\nvar FOCUS_LEFT = \"left\";\nvar FOCUS_RIGHT = \"right\";\nvar FOCUS_PAGE_UP = \"pageup\";\nvar FOCUS_PAGE_DOWN = \"pagedown\";\nvar FOCUS_LAST = \"last\";\nvar FOCUS_FIRST = \"first\";\n\nvar CollectionWidget = _ui2.default.inherit({\n  _activeStateUnit: \".\" + ITEM_CLASS,\n  _supportedKeys: function () {\n    var enter = function (e) {\n      var $itemElement = (0, _renderer2.default)(this.option(\"focusedElement\"));\n\n      if (!$itemElement.length) {\n        return;\n      }\n\n      this._itemClickHandler((0, _extend.extend)({}, e, {\n        target: $itemElement,\n        currentTarget: $itemElement\n      }));\n    };\n\n    var space = function (e) {\n      e.preventDefault();\n      enter.call(this, e);\n    };\n\n    var move = function (location, e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this._moveFocus(location, e);\n    };\n\n    return (0, _extend.extend)(this.callBase(), {\n      space: space,\n      enter: enter,\n      leftArrow: move.bind(this, FOCUS_LEFT),\n      rightArrow: move.bind(this, FOCUS_RIGHT),\n      upArrow: move.bind(this, FOCUS_UP),\n      downArrow: move.bind(this, FOCUS_DOWN),\n      pageUp: move.bind(this, FOCUS_UP),\n      pageDown: move.bind(this, FOCUS_DOWN),\n      home: move.bind(this, FOCUS_FIRST),\n      end: move.bind(this, FOCUS_LAST)\n    });\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      selectOnFocus: false,\n      loopItemFocus: true,\n      items: [],\n      itemTemplate: \"item\",\n      onItemRendered: null,\n      onItemClick: null,\n      onItemHold: null,\n      itemHoldTimeout: 750,\n      onItemContextMenu: null,\n      onFocusedItemChanged: null,\n      noDataText: _message2.default.format(\"dxCollectionWidget-noDataText\"),\n      dataSource: null,\n      _itemAttributes: {},\n      itemTemplateProperty: \"template\",\n      focusOnSelectedItem: true,\n      focusedElement: null,\n      displayExpr: void 0,\n      disabledExpr: function (data) {\n        return data ? data.disabled : void 0;\n      },\n      visibleExpr: function (data) {\n        return data ? data.visible : void 0;\n      }\n    });\n  },\n  _init: function () {\n    this._compileDisplayGetter();\n\n    this.callBase();\n\n    this._cleanRenderedItems();\n\n    this._refreshDataSource();\n  },\n  _compileDisplayGetter: function () {\n    var displayExpr = this.option(\"displayExpr\");\n    this._displayGetter = displayExpr ? (0, _data.compileGetter)(this.option(\"displayExpr\")) : void 0;\n  },\n  _initTemplates: function () {\n    this._initItemsFromMarkup();\n\n    this._initDefaultItemTemplate();\n\n    this.callBase();\n  },\n  _getAnonymousTemplateName: function () {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n  _initDefaultItemTemplate: function () {\n    var fieldsMap = this._getFieldsMap();\n\n    this._templateManager.addDefaultTemplates({\n      item: new _bindable_template.BindableTemplate(function ($container, data) {\n        if ((0, _type.isPlainObject)(data)) {\n          this._prepareDefaultItemTemplate(data, $container);\n        } else {\n          if (fieldsMap && (0, _type.isFunction)(fieldsMap.text)) {\n            data = fieldsMap.text(data);\n          }\n\n          $container.text(String(_common2.default.ensureDefined(data, \"\")));\n        }\n      }.bind(this), this._getBindableFields(), this.option(\"integrationOptions.watchMethod\"), fieldsMap)\n    });\n  },\n  _getBindableFields: function () {\n    return [\"text\", \"html\"];\n  },\n  _getFieldsMap: function () {\n    if (this._displayGetter) {\n      return {\n        text: this._displayGetter\n      };\n    }\n  },\n  _prepareDefaultItemTemplate: function (data, $container) {\n    if ((0, _type.isDefined)(data.text)) {\n      $container.text(data.text);\n    }\n\n    if ((0, _type.isDefined)(data.html)) {\n      $container.html(data.html);\n    }\n  },\n  _initItemsFromMarkup: function () {\n    var _this = this;\n\n    var $items = this.$element().contents().filter(ITEMS_SELECTOR);\n\n    if (!$items.length || this.option(\"items\").length) {\n      return;\n    }\n\n    var items = [].slice.call($items).map(function (item) {\n      var $item = (0, _renderer2.default)(item);\n      var result = (0, _dom.getElementOptions)(item).dxItem;\n      var isTemplateRequired = $item.html().trim() && !result.template;\n\n      if (isTemplateRequired) {\n        result.template = _this._prepareItemTemplate($item);\n      } else {\n        $item.remove();\n      }\n\n      return result;\n    });\n    this.option(\"items\", items);\n  },\n  _prepareItemTemplate: function ($item) {\n    var templateId = ITEM_TEMPLATE_ID_PREFIX + new _guid2.default();\n    var $template = $item.detach().clone().removeAttr(\"data-options\").addClass(TEMPLATE_WRAPPER_CLASS);\n\n    this._saveTemplate(templateId, $template);\n\n    return templateId;\n  },\n  _dataSourceOptions: function () {\n    return {\n      paginate: false\n    };\n  },\n  _cleanRenderedItems: function () {\n    this._renderedItemsCount = 0;\n  },\n  _focusTarget: function () {\n    return this.$element();\n  },\n  _focusInHandler: function (e) {\n    this.callBase.apply(this, arguments);\n\n    if ((0, _array.inArray)(e.target, this._focusTarget()) === -1) {\n      return;\n    }\n\n    var $focusedElement = (0, _renderer2.default)(this.option(\"focusedElement\"));\n\n    if ($focusedElement.length) {\n      this._setFocusedItem($focusedElement);\n    } else {\n      var $activeItem = this._getActiveItem();\n\n      if ($activeItem.length) {\n        this.option(\"focusedElement\", (0, _dom.getPublicElement)($activeItem));\n      }\n    }\n  },\n  _focusOutHandler: function () {\n    this.callBase.apply(this, arguments);\n    var $target = (0, _renderer2.default)(this.option(\"focusedElement\"));\n\n    this._updateFocusedItemState($target, false);\n  },\n  _getActiveItem: function (last) {\n    var $focusedElement = (0, _renderer2.default)(this.option(\"focusedElement\"));\n\n    if ($focusedElement.length) {\n      return $focusedElement;\n    }\n\n    var index = this.option(\"focusOnSelectedItem\") ? this.option(\"selectedIndex\") : 0;\n\n    var activeElements = this._getActiveElement();\n\n    var lastIndex = activeElements.length - 1;\n\n    if (index < 0) {\n      index = last ? lastIndex : 0;\n    }\n\n    return activeElements.eq(index);\n  },\n  _moveFocus: function (location) {\n    var $items = this._getAvailableItems();\n\n    var $newTarget;\n\n    switch (location) {\n      case FOCUS_PAGE_UP:\n      case FOCUS_UP:\n        $newTarget = this._prevItem($items);\n        break;\n\n      case FOCUS_PAGE_DOWN:\n      case FOCUS_DOWN:\n        $newTarget = this._nextItem($items);\n        break;\n\n      case FOCUS_RIGHT:\n        $newTarget = this.option(\"rtlEnabled\") ? this._prevItem($items) : this._nextItem($items);\n        break;\n\n      case FOCUS_LEFT:\n        $newTarget = this.option(\"rtlEnabled\") ? this._nextItem($items) : this._prevItem($items);\n        break;\n\n      case FOCUS_FIRST:\n        $newTarget = $items.first();\n        break;\n\n      case FOCUS_LAST:\n        $newTarget = $items.last();\n        break;\n\n      default:\n        return false;\n    }\n\n    if (0 !== $newTarget.length) {\n      this.option(\"focusedElement\", (0, _dom.getPublicElement)($newTarget));\n    }\n  },\n  _getVisibleItems: function ($itemElements) {\n    $itemElements = $itemElements || this._itemElements();\n    return $itemElements.filter(\":visible\");\n  },\n  _getAvailableItems: function ($itemElements) {\n    return this._getVisibleItems($itemElements).not(\".dx-state-disabled\");\n  },\n  _prevItem: function ($items) {\n    var $target = this._getActiveItem();\n\n    var targetIndex = $items.index($target);\n    var $last = $items.last();\n    var $item = (0, _renderer2.default)($items[targetIndex - 1]);\n    var loop = this.option(\"loopItemFocus\");\n\n    if (0 === $item.length && loop) {\n      $item = $last;\n    }\n\n    return $item;\n  },\n  _nextItem: function ($items) {\n    var $target = this._getActiveItem(true);\n\n    var targetIndex = $items.index($target);\n    var $first = $items.first();\n    var $item = (0, _renderer2.default)($items[targetIndex + 1]);\n    var loop = this.option(\"loopItemFocus\");\n\n    if (0 === $item.length && loop) {\n      $item = $first;\n    }\n\n    return $item;\n  },\n  _selectFocusedItem: function ($target) {\n    this.selectItem($target);\n  },\n  _updateFocusedItemState: function (target, isFocused, needCleanItemId) {\n    var $target = (0, _renderer2.default)(target);\n\n    if ($target.length) {\n      this._refreshActiveDescendant();\n\n      this._refreshItemId($target, needCleanItemId);\n\n      this._toggleFocusClass(isFocused, $target);\n    }\n  },\n  _refreshActiveDescendant: function ($target) {\n    this.setAria(\"activedescendant\", (0, _type.isDefined)(this.option(\"focusedElement\")) ? this.getFocusedItemId() : null, $target);\n  },\n  _refreshItemId: function ($target, needCleanItemId) {\n    if (!needCleanItemId && this.option(\"focusedElement\")) {\n      this.setAria(\"id\", this.getFocusedItemId(), $target);\n    } else {\n      this.setAria(\"id\", null, $target);\n    }\n  },\n  _setFocusedItem: function ($target) {\n    if (!$target || !$target.length) {\n      return;\n    }\n\n    this._updateFocusedItemState($target, true);\n\n    this.onFocusedItemChanged(this.getFocusedItemId());\n\n    if (this.option(\"selectOnFocus\")) {\n      this._selectFocusedItem($target);\n    }\n  },\n  _findItemElementByItem: function (item) {\n    var result = (0, _renderer2.default)();\n    var that = this;\n    this.itemElements().each(function () {\n      var $item = (0, _renderer2.default)(this);\n\n      if ($item.data(that._itemDataKey()) === item) {\n        result = $item;\n        return false;\n      }\n    });\n    return result;\n  },\n  _getIndexByItem: function (item) {\n    return this.option(\"items\").indexOf(item);\n  },\n  _itemOptionChanged: function (item, property, value, oldValue) {\n    var $item = this._findItemElementByItem(item);\n\n    if (!$item.length) {\n      return;\n    }\n\n    if (!this.constructor.ItemClass.getInstance($item).setDataField(property, value)) {\n      this._refreshItem($item, item);\n    }\n\n    var isDisabling = \"disabled\" === property && value;\n\n    if (isDisabling) {\n      this._resetItemFocus($item);\n    }\n  },\n  _resetItemFocus: function ($item) {\n    if ($item.is(this.option(\"focusedElement\"))) {\n      this.option(\"focusedElement\", null);\n    }\n  },\n  _refreshItem: function ($item) {\n    var itemData = this._getItemData($item);\n\n    var index = $item.data(this._itemIndexKey());\n\n    this._renderItem(this._renderedItemsCount + index, itemData, null, $item);\n  },\n  _optionChanged: function (args) {\n    if (\"items\" === args.name) {\n      var matches = args.fullName.match(ITEM_PATH_REGEX);\n\n      if (matches && matches.length) {\n        var property = matches[matches.length - 1];\n        var itemPath = args.fullName.replace(\".\" + property, \"\");\n        var item = this.option(itemPath);\n\n        this._itemOptionChanged(item, property, args.value, args.previousValue);\n\n        return;\n      }\n    }\n\n    switch (args.name) {\n      case \"items\":\n      case \"_itemAttributes\":\n      case \"itemTemplateProperty\":\n      case \"showItemDataTitle\":\n        this._cleanRenderedItems();\n\n        this._invalidate();\n\n        break;\n\n      case \"dataSource\":\n        this._refreshDataSource();\n\n        this._renderEmptyMessage();\n\n        break;\n\n      case \"noDataText\":\n        this._renderEmptyMessage();\n\n        break;\n\n      case \"itemTemplate\":\n        this._invalidate();\n\n        break;\n\n      case \"onItemRendered\":\n        this._createItemRenderAction();\n\n        break;\n\n      case \"onItemClick\":\n        break;\n\n      case \"onItemHold\":\n      case \"itemHoldTimeout\":\n        this._attachHoldEvent();\n\n        break;\n\n      case \"onItemContextMenu\":\n        this._attachContextMenuEvent();\n\n        break;\n\n      case \"onFocusedItemChanged\":\n        this.onFocusedItemChanged = this._createActionByOption(\"onFocusedItemChanged\");\n        break;\n\n      case \"selectOnFocus\":\n      case \"loopItemFocus\":\n      case \"focusOnSelectedItem\":\n        break;\n\n      case \"focusedElement\":\n        this._updateFocusedItemState(args.previousValue, false, true);\n\n        this._setFocusedItem((0, _renderer2.default)(args.value));\n\n        break;\n\n      case \"displayExpr\":\n        this._compileDisplayGetter();\n\n        this._initDefaultItemTemplate();\n\n        this._invalidate();\n\n        break;\n\n      case \"visibleExpr\":\n      case \"disabledExpr\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _invalidate: function () {\n    this.option(\"focusedElement\", null);\n    return this.callBase.apply(this, arguments);\n  },\n  _loadNextPage: function () {\n    var dataSource = this._dataSource;\n\n    this._expectNextPageLoading();\n\n    dataSource.pageIndex(1 + dataSource.pageIndex());\n    return dataSource.load();\n  },\n  _expectNextPageLoading: function () {\n    this._startIndexForAppendedItems = 0;\n  },\n  _expectLastItemLoading: function () {\n    this._startIndexForAppendedItems = -1;\n  },\n  _forgetNextPageLoading: function () {\n    this._startIndexForAppendedItems = null;\n  },\n  _dataSourceChangedHandler: function (newItems) {\n    var items = this.option(\"items\");\n\n    if (this._initialized && items && this._shouldAppendItems()) {\n      this._renderedItemsCount = items.length;\n\n      if (!this._isLastPage() || this._startIndexForAppendedItems !== -1) {\n        this.option().items = items.concat(newItems.slice(this._startIndexForAppendedItems));\n      }\n\n      this._forgetNextPageLoading();\n\n      this._refreshContent();\n    } else {\n      this.option(\"items\", newItems.slice());\n    }\n  },\n  _refreshContent: function () {\n    this._prepareContent();\n\n    this._renderContent();\n  },\n  _dataSourceLoadErrorHandler: function () {\n    this._forgetNextPageLoading();\n\n    this.option(\"items\", this.option(\"items\"));\n  },\n  _shouldAppendItems: function () {\n    return null != this._startIndexForAppendedItems && this._allowDynamicItemsAppend();\n  },\n  _allowDynamicItemsAppend: function () {\n    return false;\n  },\n  _clean: function () {\n    this._cleanFocusState();\n\n    this._cleanItemContainer();\n  },\n  _cleanItemContainer: function () {\n    (0, _renderer2.default)(this._itemContainer()).empty();\n  },\n  _dispose: function () {\n    this.callBase();\n    clearTimeout(this._itemFocusTimeout);\n  },\n  _refresh: function () {\n    this._cleanRenderedItems();\n\n    this.callBase.apply(this, arguments);\n  },\n  _itemContainer: function () {\n    return this.$element();\n  },\n  _itemClass: function () {\n    return ITEM_CLASS;\n  },\n  _itemContentClass: function () {\n    return this._itemClass() + CONTENT_CLASS_POSTFIX;\n  },\n  _selectedItemClass: function () {\n    return SELECTED_ITEM_CLASS;\n  },\n  _itemResponseWaitClass: function () {\n    return ITEM_RESPONSE_WAIT_CLASS;\n  },\n  _itemSelector: function () {\n    return \".\" + this._itemClass();\n  },\n  _itemDataKey: function () {\n    return ITEM_DATA_KEY;\n  },\n  _itemIndexKey: function () {\n    return ITEM_INDEX_KEY;\n  },\n  _itemElements: function () {\n    return this._itemContainer().find(this._itemSelector());\n  },\n  _initMarkup: function () {\n    this.callBase();\n    this.onFocusedItemChanged = this._createActionByOption(\"onFocusedItemChanged\");\n    this.$element().addClass(COLLECTION_CLASS);\n\n    this._prepareContent();\n  },\n  _prepareContent: _common2.default.deferRenderer(function () {\n    this._renderContentImpl();\n  }),\n  _renderContent: function () {\n    this._fireContentReadyAction();\n  },\n  _render: function () {\n    this.callBase();\n\n    this._attachClickEvent();\n\n    this._attachHoldEvent();\n\n    this._attachContextMenuEvent();\n  },\n  _attachClickEvent: function () {\n    var itemSelector = this._itemSelector();\n\n    var clickEventNamespace = eventUtils.addNamespace(_click2.default.name, this.NAME);\n    var pointerDownEventNamespace = eventUtils.addNamespace(_pointer2.default.down, this.NAME);\n    var that = this;\n    var pointerDownAction = new _action2.default(function (args) {\n      var event = args.event;\n\n      that._itemPointerDownHandler(event);\n    });\n\n    _events_engine2.default.off(this._itemContainer(), clickEventNamespace, itemSelector);\n\n    _events_engine2.default.off(this._itemContainer(), pointerDownEventNamespace, itemSelector);\n\n    _events_engine2.default.on(this._itemContainer(), clickEventNamespace, itemSelector, function (e) {\n      this._itemClickHandler(e);\n    }.bind(this));\n\n    _events_engine2.default.on(this._itemContainer(), pointerDownEventNamespace, itemSelector, function (e) {\n      pointerDownAction.execute({\n        element: (0, _renderer2.default)(e.target),\n        event: e\n      });\n    });\n  },\n  _itemClickHandler: function (e, args, config) {\n    this._itemDXEventHandler(e, \"onItemClick\", args, config);\n  },\n  _itemPointerDownHandler: function (e) {\n    if (!this.option(\"focusStateEnabled\")) {\n      return;\n    }\n\n    this._itemFocusHandler = function () {\n      clearTimeout(this._itemFocusTimeout);\n      this._itemFocusHandler = null;\n\n      if (e.isDefaultPrevented()) {\n        return;\n      }\n\n      var $target = (0, _renderer2.default)(e.target);\n      var $closestItem = $target.closest(this._itemElements());\n\n      var $closestFocusable = this._closestFocusable($target);\n\n      if ($closestItem.length && $closestFocusable && (0, _array.inArray)($closestFocusable.get(0), this._focusTarget()) !== -1) {\n        this.option(\"focusedElement\", (0, _dom.getPublicElement)($closestItem));\n      }\n    }.bind(this);\n\n    this._itemFocusTimeout = setTimeout(this._forcePointerDownFocus.bind(this));\n  },\n  _closestFocusable: function ($target) {\n    if ($target.is(_selectors2.default.focusable)) {\n      return $target;\n    } else {\n      $target = $target.parent();\n\n      while ($target.length && !_dom_adapter2.default.isDocument($target.get(0))) {\n        if ($target.is(_selectors2.default.focusable)) {\n          return $target;\n        }\n\n        $target = $target.parent();\n      }\n    }\n  },\n  _forcePointerDownFocus: function () {\n    this._itemFocusHandler && this._itemFocusHandler();\n  },\n  _updateFocusState: function () {\n    this.callBase.apply(this, arguments);\n\n    this._forcePointerDownFocus();\n  },\n  _attachHoldEvent: function () {\n    var $itemContainer = this._itemContainer();\n\n    var itemSelector = this._itemSelector();\n\n    var eventName = eventUtils.addNamespace(_hold2.default.name, this.NAME);\n\n    _events_engine2.default.off($itemContainer, eventName, itemSelector);\n\n    _events_engine2.default.on($itemContainer, eventName, itemSelector, {\n      timeout: this._getHoldTimeout()\n    }, this._itemHoldHandler.bind(this));\n  },\n  _getHoldTimeout: function () {\n    return this.option(\"itemHoldTimeout\");\n  },\n  _shouldFireHoldEvent: function () {\n    return this.hasActionSubscription(\"onItemHold\");\n  },\n  _itemHoldHandler: function (e) {\n    if (this._shouldFireHoldEvent()) {\n      this._itemDXEventHandler(e, \"onItemHold\");\n    } else {\n      e.cancel = true;\n    }\n  },\n  _attachContextMenuEvent: function () {\n    var $itemContainer = this._itemContainer();\n\n    var itemSelector = this._itemSelector();\n\n    var eventName = eventUtils.addNamespace(_contextmenu2.default.name, this.NAME);\n\n    _events_engine2.default.off($itemContainer, eventName, itemSelector);\n\n    _events_engine2.default.on($itemContainer, eventName, itemSelector, this._itemContextMenuHandler.bind(this));\n  },\n  _shouldFireContextMenuEvent: function () {\n    return this.hasActionSubscription(\"onItemContextMenu\");\n  },\n  _itemContextMenuHandler: function (e) {\n    if (this._shouldFireContextMenuEvent()) {\n      this._itemDXEventHandler(e, \"onItemContextMenu\");\n    } else {\n      e.cancel = true;\n    }\n  },\n  _renderContentImpl: function () {\n    var items = this.option(\"items\") || [];\n\n    if (this._renderedItemsCount) {\n      this._renderItems(items.slice(this._renderedItemsCount));\n    } else {\n      this._renderItems(items);\n    }\n  },\n  _renderItems: function (items) {\n    if (items.length) {\n      _iterator2.default.each(items, function (index, itemData) {\n        this._renderItem(this._renderedItemsCount + index, itemData);\n      }.bind(this));\n    }\n\n    this._renderEmptyMessage();\n  },\n  _renderItem: function (index, itemData, $container, $itemToReplace) {\n    $container = $container || this._itemContainer();\n\n    var $itemFrame = this._renderItemFrame(index, itemData, $container, $itemToReplace);\n\n    this._setElementData($itemFrame, itemData, index);\n\n    $itemFrame.attr(this.option(\"_itemAttributes\"));\n\n    this._attachItemClickEvent(itemData, $itemFrame);\n\n    var $itemContent = this._getItemContent($itemFrame);\n\n    var renderContentPromise = this._renderItemContent({\n      index: index,\n      itemData: itemData,\n      container: (0, _dom.getPublicElement)($itemContent),\n      contentClass: this._itemContentClass(),\n      defaultTemplateName: this.option(\"itemTemplate\")\n    });\n\n    var that = this;\n    (0, _deferred.when)(renderContentPromise).done(function ($itemContent) {\n      that._postprocessRenderItem({\n        itemElement: $itemFrame,\n        itemContent: $itemContent,\n        itemData: itemData,\n        itemIndex: index\n      });\n\n      that._executeItemRenderAction(index, itemData, (0, _dom.getPublicElement)($itemFrame));\n    });\n    return $itemFrame;\n  },\n  _getItemContent: function ($itemFrame) {\n    var $itemContent = $itemFrame.find(\".\" + ITEM_CONTENT_PLACEHOLDER_CLASS);\n    $itemContent.removeClass(ITEM_CONTENT_PLACEHOLDER_CLASS);\n    return $itemContent;\n  },\n  _attachItemClickEvent: function (itemData, $itemElement) {\n    if (!itemData || !itemData.onClick) {\n      return;\n    }\n\n    _events_engine2.default.on($itemElement, _click2.default.name, function (e) {\n      this._itemEventHandlerByHandler($itemElement, itemData.onClick, {\n        event: e\n      });\n    }.bind(this));\n  },\n  _renderItemContent: function (args) {\n    var itemTemplateName = this._getItemTemplateName(args);\n\n    var itemTemplate = this._getTemplate(itemTemplateName);\n\n    this._addItemContentClasses(args);\n\n    var $templateResult = (0, _renderer2.default)(this._createItemByTemplate(itemTemplate, args));\n\n    if (!$templateResult.hasClass(TEMPLATE_WRAPPER_CLASS)) {\n      return args.container;\n    }\n\n    return this._renderItemContentByNode(args, $templateResult);\n  },\n  _renderItemContentByNode: function (args, $node) {\n    (0, _renderer2.default)(args.container).replaceWith($node);\n    args.container = (0, _dom.getPublicElement)($node);\n\n    this._addItemContentClasses(args);\n\n    return $node;\n  },\n  _addItemContentClasses: function (args) {\n    var classes = [ITEM_CLASS + CONTENT_CLASS_POSTFIX, args.contentClass];\n    (0, _renderer2.default)(args.container).addClass(classes.join(\" \"));\n  },\n  _appendItemToContainer: function ($container, $itemFrame, index) {\n    $itemFrame.appendTo($container);\n  },\n  _renderItemFrame: function (index, itemData, $container, $itemToReplace) {\n    var $itemFrame = (0, _renderer2.default)(\"<div>\");\n    new this.constructor.ItemClass($itemFrame, this._itemOptions(), itemData || {});\n\n    if ($itemToReplace && $itemToReplace.length) {\n      $itemToReplace.replaceWith($itemFrame);\n    } else {\n      this._appendItemToContainer.call(this, $container, $itemFrame, index);\n    }\n\n    if (this.option(\"showItemDataTitle\")) {\n      var displayValue = this._displayGetter ? this._displayGetter(itemData) : itemData;\n      $itemFrame.attr(\"title\", displayValue);\n    }\n\n    return $itemFrame;\n  },\n  _itemOptions: function () {\n    var that = this;\n    return {\n      watchMethod: function () {\n        return that.option(\"integrationOptions.watchMethod\");\n      },\n      owner: that,\n      fieldGetter: function (field) {\n        var expr = that.option(field + \"Expr\");\n        var getter = (0, _data.compileGetter)(expr);\n        return getter;\n      }\n    };\n  },\n  _postprocessRenderItem: _common2.default.noop,\n  _executeItemRenderAction: function (index, itemData, itemElement) {\n    this._getItemRenderAction()({\n      itemElement: itemElement,\n      itemIndex: index,\n      itemData: itemData\n    });\n  },\n  _setElementData: function (element, data, index) {\n    element.addClass([ITEM_CLASS, this._itemClass()].join(\" \")).data(this._itemDataKey(), data).data(this._itemIndexKey(), index);\n  },\n  _createItemRenderAction: function () {\n    return this._itemRenderAction = this._createActionByOption(\"onItemRendered\", {\n      element: this.element(),\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n  },\n  _getItemRenderAction: function () {\n    return this._itemRenderAction || this._createItemRenderAction();\n  },\n  _getItemTemplateName: function (args) {\n    var data = args.itemData;\n    var templateProperty = args.templateProperty || this.option(\"itemTemplateProperty\");\n    var template = data && data[templateProperty];\n    return template || args.defaultTemplateName;\n  },\n  _createItemByTemplate: function (itemTemplate, renderArgs) {\n    return itemTemplate.render({\n      model: renderArgs.itemData,\n      container: renderArgs.container,\n      index: renderArgs.index\n    });\n  },\n  _emptyMessageContainer: function () {\n    return this._itemContainer();\n  },\n  _renderEmptyMessage: function (items) {\n    items = items || this.option(\"items\");\n    var noDataText = this.option(\"noDataText\");\n\n    var hideNoData = !noDataText || items && items.length || this._isDataSourceLoading();\n\n    if (hideNoData && this._$noData) {\n      this._$noData.remove();\n\n      this._$noData = null;\n      this.setAria(\"label\", void 0);\n    }\n\n    if (!hideNoData) {\n      this._$noData = this._$noData || (0, _renderer2.default)(\"<div>\").addClass(\"dx-empty-message\");\n\n      this._$noData.appendTo(this._emptyMessageContainer()).html(noDataText);\n\n      this.setAria(\"label\", noDataText);\n    }\n\n    this.$element().toggleClass(EMPTY_COLLECTION, !hideNoData);\n  },\n  _itemDXEventHandler: function (dxEvent, handlerOptionName, actionArgs, actionConfig) {\n    this._itemEventHandler(dxEvent.target, handlerOptionName, (0, _extend.extend)(actionArgs, {\n      event: dxEvent\n    }), actionConfig);\n  },\n  _itemEventHandler: function (initiator, handlerOptionName, actionArgs, actionConfig) {\n    var action = this._createActionByOption(handlerOptionName, (0, _extend.extend)({\n      validatingTargetName: \"itemElement\"\n    }, actionConfig));\n\n    return this._itemEventHandlerImpl(initiator, action, actionArgs);\n  },\n  _itemEventHandlerByHandler: function (initiator, handler, actionArgs, actionConfig) {\n    var action = this._createAction(handler, (0, _extend.extend)({\n      validatingTargetName: \"itemElement\"\n    }, actionConfig));\n\n    return this._itemEventHandlerImpl(initiator, action, actionArgs);\n  },\n  _itemEventHandlerImpl: function (initiator, action, actionArgs) {\n    var $itemElement = this._closestItemElement((0, _renderer2.default)(initiator));\n\n    var args = (0, _extend.extend)({}, actionArgs);\n    return action((0, _extend.extend)(actionArgs, this._extendActionArgs($itemElement), args));\n  },\n  _extendActionArgs: function ($itemElement) {\n    return {\n      itemElement: (0, _dom.getPublicElement)($itemElement),\n      itemIndex: this._itemElements().index($itemElement),\n      itemData: this._getItemData($itemElement)\n    };\n  },\n  _closestItemElement: function ($element) {\n    return (0, _renderer2.default)($element).closest(this._itemSelector());\n  },\n  _getItemData: function (itemElement) {\n    return (0, _renderer2.default)(itemElement).data(this._itemDataKey());\n  },\n  _getSummaryItemsWidth: function (items, includeMargin) {\n    var result = 0;\n\n    if (items) {\n      _iterator2.default.each(items, function (_, item) {\n        result += (0, _renderer2.default)(item).outerWidth(includeMargin || false);\n      });\n    }\n\n    return result;\n  },\n  getFocusedItemId: function () {\n    if (!this._focusedItemId) {\n      this._focusedItemId = \"dx-\" + new _guid2.default();\n    }\n\n    return this._focusedItemId;\n  },\n  itemElements: function () {\n    return this._itemElements();\n  },\n  itemsContainer: function () {\n    return this._itemContainer();\n  }\n}).include(_data_helper2.default);\n\nCollectionWidget.ItemClass = _item2.default;\nmodule.exports = CollectionWidget;","map":null,"metadata":{},"sourceType":"script"}
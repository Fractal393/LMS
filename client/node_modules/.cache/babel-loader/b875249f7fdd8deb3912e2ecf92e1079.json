{"ast":null,"code":"/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n\nvar ArabicShapeRenderer =\n/** @class */\nfunction () {\n  //#endregion\n  //#region Constructor\n  function ArabicShapeRenderer() {\n    //#region Constants\n    this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'], ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'], ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'], ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'], ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'], ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'], ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'], ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'], ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'], ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'], ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'], ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'], ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'], ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'], ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'], ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'], ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'], ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'], ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'], ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'], ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'], ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'], ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'], ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'], ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'], ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'], ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'], ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'], ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'], ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'], ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'], ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']];\n    this.alef = '\\u0627';\n    this.alefHamza = '\\u0623';\n    this.alefHamzaBelow = '\\u0625';\n    this.alefMadda = '\\u0622';\n    this.lam = '\\u0644';\n    this.hamza = '\\u0621';\n    this.zeroWidthJoiner = '\\u200D';\n    this.hamzaAbove = '\\u0654';\n    this.hamzaBelow = '\\u0655';\n    this.wawHamza = '\\u0624';\n    this.yehHamza = '\\u0626';\n    this.waw = '\\u0648';\n    this.alefMaksura = '\\u0649';\n    this.yeh = '\\u064A';\n    this.farsiYeh = '\\u06CC';\n    this.shadda = '\\u0651';\n    this.madda = '\\u0653';\n    this.lwa = '\\uFEFB';\n    this.lwawh = '\\uFEF7';\n    this.lwawhb = '\\uFEF9';\n    this.lwawm = '\\uFEF5';\n    this.bwhb = '\\u06D3';\n    this.fathatan = '\\u064B';\n    this.superScriptalef = '\\u0670';\n    this.vowel = 0x1; // #endregion\n    //#region Fields\n\n    this.arabicMapTable = new Dictionary();\n\n    for (var i = 0; i < this.arabicCharTable.length; i++) {\n      this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n    }\n  } //#endregion\n  //#region implementation\n\n\n  ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n    if (input >= this.hamza && input <= this.bwhb) {\n      var value = [];\n\n      if (this.arabicMapTable.getValue(input)) {\n        value = this.arabicMapTable.getValue(input);\n        return value[index + 1];\n      }\n    } else if (input >= this.lwawm && input <= this.lwa) {\n      return input;\n    }\n\n    return input;\n  };\n\n  ArabicShapeRenderer.prototype.shape = function (text, level) {\n    var builder = '';\n    var str2 = '';\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c >= '؀' && c <= 'ۿ') {\n        //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n        str2 = str2 + c;\n      } else {\n        if (str2.length > 0) {\n          var st = this.doShape(str2.toString(), 0);\n          builder = builder + st;\n          str2 = '';\n        }\n\n        builder = builder + c;\n      }\n    }\n\n    if (str2.length > 0) {\n      var st = this.doShape(str2.toString(), 0);\n      builder = builder + st;\n    }\n\n    return builder.toString();\n  };\n\n  ArabicShapeRenderer.prototype.doShape = function (input, level) {\n    var str = '';\n    var ligature = 0;\n    var len = 0;\n    var i = 0;\n    var next = '';\n    var previous = new ArabicShape();\n    var present = new ArabicShape();\n\n    while (i < input.length) {\n      next = input[i++];\n      ligature = this.ligature(next, present);\n\n      if (ligature === 0) {\n        var shapeCount = this.getShapeCount(next);\n        len = shapeCount === 1 ? 0 : 2;\n\n        if (previous.Shapes > 2) {\n          len += 1;\n        }\n\n        len = len % present.Shapes;\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        previous = present;\n        present = new ArabicShape();\n        present.Value = next;\n        present.Shapes = shapeCount;\n        present.Ligature++;\n      }\n    }\n\n    len = previous.Shapes > 2 ? 1 : 0;\n    len = len % present.Shapes;\n    present.Value = this.getCharacterShape(present.Value, len);\n    str = this.append(str, previous, level);\n    str = this.append(str, present, level);\n    return str.toString();\n  };\n\n  ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n    if (shape.Value !== '') {\n      builder = builder + shape.Value;\n      shape.Ligature -= 1;\n\n      if (shape.Type !== '') {\n        if ((level & this.vowel) === 0) {\n          builder = builder + shape.Type;\n          shape.Ligature -= 1;\n        } else {\n          shape.Ligature -= 1;\n        }\n      }\n\n      if (shape.vowel !== '') {\n        if ((level & this.vowel) === 0) {\n          builder = builder + shape.vowel;\n          shape.Ligature -= 1;\n        } else {\n          shape.Ligature -= 1;\n        }\n      }\n    }\n\n    return builder;\n  };\n\n  ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n    if (shape.Value !== '') {\n      var result = 0;\n\n      if (value >= this.fathatan && value <= this.hamzaBelow || value === this.superScriptalef) {\n        result = 1;\n\n        if (shape.vowel !== '' && value !== this.shadda) {\n          result = 2;\n        }\n\n        if (value === this.shadda) {\n          if (shape.Type == null) {\n            shape.Type = this.shadda;\n          } else {\n            return 0;\n          }\n        } else if (value === this.hamzaBelow) {\n          if (shape.Value === this.alef) {\n            shape.Value = this.alefHamzaBelow;\n            result = 2;\n          } else if (value === this.lwa) {\n            shape.Value = this.lwawhb;\n            result = 2;\n          } else {\n            shape.Type = this.hamzaBelow;\n          }\n        } else if (value === this.hamzaAbove) {\n          if (shape.Value === this.alef) {\n            shape.Value = this.alefHamza;\n            result = 2;\n          } else if (shape.Value === this.lwa) {\n            shape.Value = this.lwawh;\n            result = 2;\n          } else if (shape.Value === this.waw) {\n            shape.Value = this.wawHamza;\n            result = 2;\n          } else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n            shape.Value = this.yehHamza;\n            result = 2;\n          } else {\n            shape.Type = this.hamzaAbove;\n          }\n        } else if (value === this.madda) {\n          if (shape.Value === this.alef) {\n            shape.Value = this.alefMadda;\n            result = 2;\n          }\n        } else {\n          shape.vowel = value;\n        }\n\n        if (result === 1) {\n          shape.Ligature++;\n        }\n\n        return result;\n      }\n\n      if (shape.vowel !== '') {\n        return 0;\n      }\n\n      if (shape.Value === this.lam) {\n        if (value === this.alef) {\n          shape.Value = this.lwa;\n          shape.Shapes = 2;\n          result = 3;\n        } else if (value === this.alefHamza) {\n          shape.Value = this.lwawh;\n          shape.Shapes = 2;\n          result = 3;\n        } else if (value === this.alefHamzaBelow) {\n          shape.Value = this.lwawhb;\n          shape.Shapes = 2;\n          result = 3;\n        } else if (value === this.alefMadda) {\n          shape.Value = this.lwawm;\n          shape.Shapes = 2;\n          result = 3;\n        }\n      } // else if (shape.Value === '') {\n      //     shape.Value = value;\n      //     shape.Shapes = this.getShapeCount(value);\n      //     result = 1;\n      // }\n\n\n      return result;\n    } else {\n      return 0;\n    }\n  };\n\n  ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n    if (shape >= this.hamza && shape <= this.bwhb && !(shape >= this.fathatan && shape <= this.hamzaBelow || shape === this.superScriptalef)) {\n      var c = [];\n\n      if (this.arabicMapTable.getValue(shape)) {\n        c = this.arabicMapTable.getValue(shape);\n        return c.length - 1;\n      }\n    } else if (shape === this.zeroWidthJoiner) {\n      return 4;\n    }\n\n    return 1;\n  };\n\n  return ArabicShapeRenderer;\n}();\n\nexport { ArabicShapeRenderer }; //#endregion\n//#region Internals\n\nvar ArabicShape =\n/** @class */\nfunction () {\n  function ArabicShape() {\n    //#region Fields\n    this.shapeValue = '';\n    this.shapeType = '';\n    this.shapeVowel = '';\n    this.shapeLigature = 0;\n    this.shapeShapes = 1; //#endregion\n  }\n\n  Object.defineProperty(ArabicShape.prototype, \"Value\", {\n    //#endregion\n    //#region Properties \n\n    /**\n     * Gets or sets the values.\n     * @private\n     */\n    get: function () {\n      return this.shapeValue;\n    },\n    set: function (value) {\n      this.shapeValue = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArabicShape.prototype, \"Type\", {\n    /**\n     * Gets or sets the values.\n     * @private\n     */\n    get: function () {\n      return this.shapeType;\n    },\n    set: function (value) {\n      this.shapeType = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n    /**\n     * Gets or sets the values.\n     * @private\n     */\n    get: function () {\n      return this.shapeVowel;\n    },\n    set: function (value) {\n      this.shapeVowel = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n    /**\n     * Gets or sets the values.\n     * @private\n     */\n    get: function () {\n      return this.shapeLigature;\n    },\n    set: function (value) {\n      this.shapeLigature = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n    /**\n     * Gets or sets the values.\n     * @private\n     */\n    get: function () {\n      return this.shapeShapes;\n    },\n    set: function (value) {\n      this.shapeShapes = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ArabicShape;\n}();\n\nexport { ArabicShape }; //#endregion","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (data/data_source/utils.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeDataSourceOptions = exports.normalizeLoadResult = exports.mapDataRespectingGrouping = exports.normalizeStoreLoadOptionAccessorArguments = exports.isPending = exports.CANCELED_TOKEN = void 0;\n\nvar _ajax = require(\"../../core/utils/ajax\");\n\nvar _abstract_store = require(\"../abstract_store\");\n\nvar _abstract_store2 = _interopRequireDefault(_abstract_store);\n\nvar _array_store = require(\"../array_store\");\n\nvar _array_store2 = _interopRequireDefault(_array_store);\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _custom_store = require(\"../custom_store\");\n\nvar _custom_store2 = _interopRequireDefault(_custom_store);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar CANCELED_TOKEN = exports.CANCELED_TOKEN = \"canceled\";\n\nvar isPending = exports.isPending = function (deferred) {\n  return \"pending\" === deferred.state();\n};\n\nvar normalizeStoreLoadOptionAccessorArguments = exports.normalizeStoreLoadOptionAccessorArguments = function (originalArguments) {\n  switch (originalArguments.length) {\n    case 0:\n      return;\n\n    case 1:\n      return originalArguments[0];\n  }\n\n  return [].slice.call(originalArguments);\n};\n\nvar mapGroup = function (group, level, mapper) {\n  return (0, _iterator.map)(group, function (item) {\n    var result = {\n      key: item.key,\n      items: mapRecursive(item.items, level - 1, mapper)\n    };\n\n    if (\"aggregates\" in item) {\n      result.aggregates = item.aggregates;\n    }\n\n    return result;\n  });\n};\n\nvar mapRecursive = function (items, level, mapper) {\n  if (!Array.isArray(items)) {\n    return items;\n  }\n\n  return level ? mapGroup(items, level, mapper) : (0, _iterator.map)(items, mapper);\n};\n\nvar mapDataRespectingGrouping = exports.mapDataRespectingGrouping = function (items, mapper, groupInfo) {\n  var level = groupInfo ? (0, _utils.normalizeSortingInfo)(groupInfo).length : 0;\n  return mapRecursive(items, level, mapper);\n};\n\nvar normalizeLoadResult = exports.normalizeLoadResult = function (data, extra) {\n  var _data;\n\n  if (null === (_data = data) || void 0 === _data ? void 0 : _data.data) {\n    extra = data;\n    data = data.data;\n  }\n\n  if (!Array.isArray(data)) {\n    data = [data];\n  }\n\n  return {\n    data: data,\n    extra: extra\n  };\n};\n\nvar createCustomStoreFromLoadFunc = function (options) {\n  var storeConfig = {};\n  (0, _iterator.each)([\"useDefaultSearch\", \"key\", \"load\", \"loadMode\", \"cacheRawData\", \"byKey\", \"lookup\", \"totalCount\", \"insert\", \"update\", \"remove\"], function () {\n    storeConfig[this] = options[this];\n    delete options[this];\n  });\n  return new _custom_store2.default(storeConfig);\n};\n\nvar createStoreFromConfig = function (storeConfig) {\n  var alias = storeConfig.type;\n  delete storeConfig.type;\n  return _abstract_store2.default.create(alias, storeConfig);\n};\n\nvar createCustomStoreFromUrl = function (url, normalizationOptions) {\n  return new _custom_store2.default({\n    load: function () {\n      return (0, _ajax.sendRequest)({\n        url: url,\n        dataType: \"json\"\n      });\n    },\n    loadMode: null === normalizationOptions || void 0 === normalizationOptions ? void 0 : normalizationOptions.fromUrlLoadMode\n  });\n};\n\nvar normalizeDataSourceOptions = exports.normalizeDataSourceOptions = function (options, normalizationOptions) {\n  var store;\n\n  if (\"string\" === typeof options) {\n    options = {\n      paginate: false,\n      store: createCustomStoreFromUrl(options, normalizationOptions)\n    };\n  }\n\n  if (void 0 === options) {\n    options = [];\n  }\n\n  if (Array.isArray(options) || options instanceof _abstract_store2.default) {\n    options = {\n      store: options\n    };\n  } else {\n    options = (0, _extend.extend)({}, options);\n  }\n\n  if (void 0 === options.store) {\n    options.store = [];\n  }\n\n  store = options.store;\n\n  if (\"load\" in options) {\n    store = createCustomStoreFromLoadFunc(options);\n  } else {\n    if (Array.isArray(store)) {\n      store = new _array_store2.default(store);\n    } else {\n      if ((0, _type.isPlainObject)(store)) {\n        store = createStoreFromConfig((0, _extend.extend)({}, store));\n      }\n    }\n  }\n\n  options.store = store;\n  return options;\n};","map":null,"metadata":{},"sourceType":"script"}
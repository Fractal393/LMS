{"ast":null,"code":"import { createElement, remove, isBlazor } from '@syncfusion/ej2-base';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n/**\n * `PagerDropDown` module handles selected pageSize from DropDownList.\n */\n\nvar PagerDropDown =\n/** @class */\nfunction () {\n  /**\n   * Constructor for pager module\n   * @hidden\n   */\n  function PagerDropDown(pagerModule) {\n    this.pagerModule = pagerModule;\n  }\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   * @hidden\n   */\n\n\n  PagerDropDown.prototype.getModuleName = function () {\n    return 'pagerdropdown';\n  };\n  /**\n   * The function is used to render pager dropdown\n   * @hidden\n   */\n\n\n  PagerDropDown.prototype.render = function () {\n    var pagerObj = this.pagerModule;\n    this.pagerDropDownDiv = createElement('div', {\n      className: 'e-pagesizes'\n    });\n    var dropDownDiv = createElement('div', {\n      className: 'e-pagerdropdown'\n    });\n    var defaultTextDiv = createElement('div', {\n      className: 'e-pagerconstant'\n    });\n    var input = createElement('input', {\n      attrs: {\n        type: 'text',\n        tabindex: '1'\n      }\n    });\n    this.pagerCons = createElement('span', {\n      className: 'e-constant',\n      innerHTML: isBlazor() ? this.pagerModule.getLocalizedLabel('PagerDropDown') : this.pagerModule.getLocalizedLabel('pagerDropDown')\n    });\n    dropDownDiv.appendChild(input);\n    defaultTextDiv.appendChild(this.pagerCons);\n    this.pagerDropDownDiv.appendChild(dropDownDiv);\n    this.pagerDropDownDiv.appendChild(defaultTextDiv);\n    this.pagerModule.element.appendChild(this.pagerDropDownDiv);\n    var pageSizesModule = this.pagerModule.pageSizes;\n    var pageSizesArray = pageSizesModule.length ? this.convertValue(pageSizesModule) : [this.pagerModule.getLocalizedLabel('All'), '5', '10', '12', '20'];\n    var defaultValue = this.pagerModule.pageSize;\n    this.dropDownListObject = new DropDownList({\n      dataSource: pageSizesArray,\n      value: defaultValue.toString(),\n      change: this.onChange.bind(this),\n      cssClass: 'e-alldrop'\n    });\n    this.dropDownListObject.appendTo(input);\n\n    if (pageSizesModule.length) {\n      this.dropDownListObject.element.value = this.pagerModule.pageSize.toString();\n    }\n\n    pagerObj.pageSize = defaultValue;\n    pagerObj.dataBind();\n    pagerObj.trigger('dropDownChanged', {\n      pageSize: defaultValue\n    });\n    this.addEventListener();\n  };\n  /**\n   * For internal use only - Get the pagesize.\n   * @private\n   * @hidden\n   */\n\n\n  PagerDropDown.prototype.onChange = function (e) {\n    if (this.dropDownListObject.value === this.pagerModule.getLocalizedLabel('All')) {\n      this.pagerModule.pageSize = this.pagerModule.totalRecordsCount;\n      this.pagerCons.innerHTML = isBlazor() ? this.pagerModule.getLocalizedLabel('PagerAllDropDown') : this.pagerModule.getLocalizedLabel('pagerAllDropDown');\n      e.value = this.pagerModule.pageSize;\n\n      if (document.getElementsByClassName('e-popup-open e-alldrop').length) {\n        document.getElementsByClassName('e-popup-open e-alldrop')[0].style.display = 'none';\n      }\n    } else {\n      this.pagerModule.pageSize = parseInt(this.dropDownListObject.value, 10);\n\n      if (this.pagerCons.innerHTML !== this.pagerModule.getLocalizedLabel('pagerDropDown')) {\n        this.pagerCons.innerHTML = isBlazor() ? this.pagerModule.getLocalizedLabel('PagerDropDown') : this.pagerModule.getLocalizedLabel('pagerDropDown');\n      }\n    }\n\n    this.pagerModule.dataBind();\n    this.pagerModule.trigger('dropDownChanged', {\n      pageSize: parseInt(this.dropDownListObject.value, 10)\n    });\n  };\n\n  PagerDropDown.prototype.beforeValueChange = function (prop) {\n    if (typeof prop.newProp.value === 'number') {\n      var val = prop.newProp.value.toString();\n      prop.newProp.value = val;\n    }\n  };\n\n  PagerDropDown.prototype.convertValue = function (pageSizeValue) {\n    var item = pageSizeValue;\n\n    for (var i = 0; i < item.length; i++) {\n      item[i] = typeof item[i] === 'number' ? item[i].toString() : item[i];\n    }\n\n    return item;\n  };\n\n  PagerDropDown.prototype.setDropDownValue = function (prop, value) {\n    if (this.dropDownListObject) {\n      this.dropDownListObject[prop] = value;\n    }\n  };\n\n  PagerDropDown.prototype.addEventListener = function () {\n    this.dropDownListObject.on('beforeValueChange', this.beforeValueChange, this);\n  };\n\n  PagerDropDown.prototype.removeEventListener = function () {\n    this.dropDownListObject.off('beforeValueChange', this.beforeValueChange);\n  };\n  /**\n   * To destroy the Pagerdropdown\n   * @method destroy\n   * @return {void}\n   * @hidden\n   */\n\n\n  PagerDropDown.prototype.destroy = function (args) {\n    if (this.dropDownListObject && !this.dropDownListObject.isDestroyed) {\n      this.removeEventListener();\n      this.dropDownListObject.destroy();\n      remove(this.pagerDropDownDiv);\n    }\n  };\n\n  return PagerDropDown;\n}();\n\nexport { PagerDropDown };","map":null,"metadata":{},"sourceType":"module"}
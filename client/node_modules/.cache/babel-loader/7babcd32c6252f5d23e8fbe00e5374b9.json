{"ast":null,"code":"/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF =\n/** @class */\nfunction () {\n  function PointF(x, y) {\n    if (typeof x === 'undefined') {\n      this.x = 0;\n      this.y = 0;\n    } else {\n      if (x !== null) {\n        this.x = x;\n      } else {\n        this.x = 0;\n      }\n\n      if (y !== null) {\n        this.y = y;\n      } else {\n        this.y = 0;\n      }\n    }\n  }\n\n  return PointF;\n}();\n\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\n\nvar SizeF =\n/** @class */\nfunction () {\n  function SizeF(width, height) {\n    if (typeof height === 'undefined') {\n      this.height = 0;\n      this.width = 0;\n    } else {\n      if (height !== null) {\n        this.height = height;\n      } else {\n        this.height = 0;\n      }\n\n      if (width !== null) {\n        this.width = width;\n      } else {\n        this.width = 0;\n      }\n    }\n  }\n\n  return SizeF;\n}();\n\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\n\nvar RectangleF =\n/** @class */\nfunction () {\n  function RectangleF(arg1, arg2, arg3, arg4) {\n    if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n      this.x = 0;\n      this.y = 0;\n      this.height = 0;\n      this.width = 0;\n    } else {\n      if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n        var pointf = arg1;\n        this.x = pointf.x;\n        this.y = pointf.y;\n        var sizef = arg2;\n        this.height = sizef.height;\n        this.width = sizef.width;\n      } else {\n        var x = arg1;\n        var y = arg2;\n        var width = arg3;\n        var height = arg4;\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n      }\n    }\n  }\n\n  return RectangleF;\n}();\n\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\n\nvar Rectangle =\n/** @class */\nfunction () {\n  /**\n   * Instance of `RectangleF` class with X, Y, Width and Height.\n   * @private\n   */\n  function Rectangle(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  Object.defineProperty(Rectangle.prototype, \"width\", {\n    /**\n     * Gets a value of width\n     */\n    get: function () {\n      return this.right - this.left;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Rectangle.prototype, \"height\", {\n    /**\n     * Gets a value of height\n     */\n    get: function () {\n      return this.bottom - this.top;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n    /**\n     * Gets a value of Top and Left\n     */\n    get: function () {\n      return new PointF(this.left, this.top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Rectangle.prototype, \"size\", {\n    /**\n     * Gets a value of size\n     */\n    get: function () {\n      return new SizeF(this.width, this.height);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Rectangle.prototype.toString = function () {\n    return this.topLeft + 'x' + this.size;\n  };\n\n  return Rectangle;\n}();\n\nexport { Rectangle };","map":null,"metadata":{},"sourceType":"module"}
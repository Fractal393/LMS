{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\n\nvar PdfEllipsePart =\n/** @class */\nfunction (_super) {\n  __extends(PdfEllipsePart, _super);\n  /* tslint:disable-next-line:max-line-length */\n\n\n  function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n    var _this = _super.call(this) || this; // Fields\n\n    /**\n     * public variable to store the start angle.\n     * @public\n     */\n\n\n    _this.startAngle = 0;\n    /**\n     * public variable to store the sweep angle.\n     * @public\n     */\n\n    _this.sweepAngle = 0;\n\n    if (typeof arg1 === 'undefined') {//\n    } else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n      _this = _super.call(this, arg1) || this;\n      _this.startAngle = arg2;\n      _this.sweepAngle = arg3;\n    } else if (arg1 instanceof PdfPen) {\n      if (arg3 instanceof RectangleF) {\n        _this = _super.call(this, arg1, arg2, arg3) || this;\n        _this.startAngle = arg4;\n        _this.sweepAngle = arg5;\n      } else {\n        _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        _this.startAngle = arg7;\n        _this.sweepAngle = arg8;\n      }\n    } else {\n      _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n      _this.startAngle = arg5;\n      _this.sweepAngle = arg6;\n    }\n\n    return _this;\n  }\n\n  return PdfEllipsePart;\n}(PdfRectangleArea);\n\nexport { PdfEllipsePart };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/* eslint max-statements: 0 */\n\"use strict\";\n\nvar indexOf = require(\"es5-ext/array/#/e-index-of\");\n\nvar create = Object.create;\n\nmodule.exports = function () {\n  var lastId = 0,\n      map = [],\n      cache = create(null);\n  return {\n    get: function (args) {\n      var index = 0,\n          set = map,\n          i,\n          length = args.length;\n      if (length === 0) return set[length] || null;\n\n      if (set = set[length]) {\n        while (index < length - 1) {\n          i = indexOf.call(set[0], args[index]);\n          if (i === -1) return null;\n          set = set[1][i];\n          ++index;\n        }\n\n        i = indexOf.call(set[0], args[index]);\n        if (i === -1) return null;\n        return set[1][i] || null;\n      }\n\n      return null;\n    },\n    set: function (args) {\n      var index = 0,\n          set = map,\n          i,\n          length = args.length;\n\n      if (length === 0) {\n        set[length] = ++lastId;\n      } else {\n        if (!set[length]) {\n          set[length] = [[], []];\n        }\n\n        set = set[length];\n\n        while (index < length - 1) {\n          i = indexOf.call(set[0], args[index]);\n\n          if (i === -1) {\n            i = set[0].push(args[index]) - 1;\n            set[1].push([[], []]);\n          }\n\n          set = set[1][i];\n          ++index;\n        }\n\n        i = indexOf.call(set[0], args[index]);\n\n        if (i === -1) {\n          i = set[0].push(args[index]) - 1;\n        }\n\n        set[1][i] = ++lastId;\n      }\n\n      cache[lastId] = args;\n      return lastId;\n    },\n    delete: function (id) {\n      var index = 0,\n          set = map,\n          i,\n          args = cache[id],\n          length = args.length,\n          path = [];\n\n      if (length === 0) {\n        delete set[length];\n      } else if (set = set[length]) {\n        while (index < length - 1) {\n          i = indexOf.call(set[0], args[index]);\n\n          if (i === -1) {\n            return;\n          }\n\n          path.push(set, i);\n          set = set[1][i];\n          ++index;\n        }\n\n        i = indexOf.call(set[0], args[index]);\n\n        if (i === -1) {\n          return;\n        }\n\n        id = set[1][i];\n        set[0].splice(i, 1);\n        set[1].splice(i, 1);\n\n        while (!set[0].length && path.length) {\n          i = path.pop();\n          set = path.pop();\n          set[0].splice(i, 1);\n          set[1].splice(i, 1);\n        }\n      }\n\n      delete cache[id];\n    },\n    clear: function () {\n      map = [];\n      cache = create(null);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\n\nvar PdfSectionCollection =\n/** @class */\nfunction () {\n  //constructor\n\n  /**\n   * Initializes a new instance of the `PdfSectionCollection` class.\n   * @private\n   */\n  function PdfSectionCollection(document) {\n    /**\n     * @hidden\n     * @private\n     */\n    this.sections = [];\n    /**\n     * @hidden\n     * @private\n     */\n\n    this.dictionaryProperties = new DictionaryProperties(); // if (document === null) {\n    //     throw new Error('ArgumentNullException : document');\n    // }\n\n    this.pdfDocument = document.clone();\n    this.initialize();\n  }\n\n  Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n    //Properties\n\n    /**\n     * Gets the `Section` collection.\n     */\n    get: function () {\n      return this.sections;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n    /**\n     * Gets a parent `document`.\n     * @private\n     */\n    get: function () {\n      return this.pdfDocument;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n    /**\n     * Gets the `number of sections` in a document.\n     * @private\n     */\n    get: function () {\n      return this.sections.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n    /**\n     * Gets the wrapped `element`.\n     * @private\n     */\n    get: function () {\n      return this.pages;\n    },\n    enumerable: true,\n    configurable: true\n  }); //Methods\n\n  /**\n   * `Initializes the object`.\n   * @private\n   */\n\n  PdfSectionCollection.prototype.initialize = function () {\n    this.sectionCount = new PdfNumber(0);\n    this.sectionCollection = new PdfArray();\n    this.pages = new PdfDictionary();\n    this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n    this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n    this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n    this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n    this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n    this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n  };\n  /**\n   * Initializes a new instance of the `PdfSectionCollection` class.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n    if (index < 0 || index >= this.count) {\n      throw new Error('IndexOutOfRangeException()');\n    }\n\n    return this.sections[index];\n  };\n  /**\n   * In fills dictionary by the data from `Page settings`.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n    // if (container === null) {\n    //     throw new Error('ArgumentNullException : container');\n    // }\n    // if (pageSettings === null) {\n    //     throw new Error('ArgumentNullException : pageSettings');\n    // }\n    var bounds = new RectangleF(new PointF(), pageSettings.size);\n    container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n  };\n  /**\n   * `Adds` the specified section.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.add = function (section) {\n    if (typeof section === 'undefined') {\n      var section_1 = new PdfSection(this.pdfDocument);\n      this.add(section_1);\n      return section_1;\n    } else {\n      // if (section === null) {\n      //     throw new Error('ArgumentNullException : section');\n      // }\n      var r = this.checkSection(section);\n      this.sections.push(section);\n      section.parent = this;\n      this.sectionCollection.add(r);\n      return this.sections.indexOf(section);\n    }\n  };\n  /**\n   * `Checks` if the section is within the collection.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.checkSection = function (section) {\n    var r = new PdfReferenceHolder(section);\n    var contains = this.sectionCollection.contains(r); // if (contains) {\n    //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n    // }\n\n    return r;\n  };\n  /**\n   * Catches the Save event of the dictionary to `count the pages`.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.countPages = function () {\n    var count = 0;\n    this.sections.forEach(function (n) {\n      return count += n.count;\n    });\n    return count;\n  };\n  /**\n   * Catches the Save event of the dictionary to `count the pages`.\n   * @hidden\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.beginSave = function () {\n    this.sectionCount.intValue = this.countPages();\n  }; //Fields\n\n  /**\n   * Rotate factor for page `rotation`.\n   * @default 90\n   * @private\n   */\n\n\n  PdfSectionCollection.rotateFactor = 90;\n  return PdfSectionCollection;\n}();\n\nexport { PdfSectionCollection };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (data/data_source/operation_manager.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar OperationManager = function () {\n  function OperationManager() {\n    _classCallCheck(this, OperationManager);\n\n    this._counter = -1;\n    this._deferreds = {};\n  }\n\n  _createClass(OperationManager, [{\n    key: \"add\",\n    value: function (deferred) {\n      this._counter++;\n      this._deferreds[this._counter] = deferred;\n      return this._counter;\n    }\n  }, {\n    key: \"remove\",\n    value: function (operationId) {\n      return delete this._deferreds[operationId];\n    }\n  }, {\n    key: \"cancel\",\n    value: function (operationId) {\n      if (operationId in this._deferreds) {\n        this._deferreds[operationId].reject(_utils.CANCELED_TOKEN);\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"cancelAll\",\n    value: function () {\n      while (this._counter > -1) {\n        this.cancel(this._counter);\n        this._counter--;\n      }\n    }\n  }]);\n\n  return OperationManager;\n}();\n\nexports.default = OperationManager;","map":null,"metadata":{},"sourceType":"script"}
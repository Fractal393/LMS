{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger() {}\n\n  Logger.error = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    } // eslint-disable-next-line no-console\n\n\n    console.error.apply(console, __spreadArrays(['[Chonky runtime error]'], args));\n  };\n\n  Logger.warn = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    } // eslint-disable-next-line no-console\n\n\n    console.warn.apply(console, __spreadArrays(['[Chonky runtime warning]'], args));\n  };\n\n  Logger.debug = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    } // eslint-disable-next-line no-console\n\n\n    console.debug.apply(console, __spreadArrays(['[Chonky runtime debug]'], args));\n  };\n\n  Logger.formatBullets = function (bullets) {\n    return \"\\n- \" + bullets.join('\\n- ');\n  };\n\n  return Logger;\n}();\n\nexports.Logger = Logger;","map":null,"metadata":{},"sourceType":"script"}
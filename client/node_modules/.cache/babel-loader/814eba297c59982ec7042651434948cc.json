{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { addClass, removeClass, attributes, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { CellRenderer } from './cell-renderer';\nimport { appendChildren } from '../base/util';\n/**\n * `CommandColumn` used to render command column in grid\n * @hidden\n */\n\nvar CommandColumnRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CommandColumnRenderer, _super);\n\n  function CommandColumnRenderer(parent, locator) {\n    var _this = _super.call(this, parent, locator) || this;\n\n    _this.buttonElement = _this.parent.createElement('button', {});\n    _this.unbounDiv = _this.parent.createElement('div', {\n      className: 'e-unboundcelldiv',\n      styles: 'display: inline-block'\n    });\n    _this.element = _this.parent.createElement('TD', {\n      className: 'e-rowcell e-unboundcell',\n      attrs: {\n        role: 'gridcell',\n        tabindex: '-1'\n      }\n    });\n    return _this;\n  }\n  /**\n   * Function to render the cell content based on Column object.\n   * @param  {Column} column\n   * @param  {Object} data\n   * @param  {{[x:string]:Object}} attributes?\n   * @param  {Element}\n   */\n\n\n  CommandColumnRenderer.prototype.render = function (cell, data, attributes) {\n    var node = this.element.cloneNode();\n    var uid = 'uid';\n    node.appendChild(this.unbounDiv.cloneNode());\n    node.setAttribute('aria-label', 'is Command column column header ' + cell.column.headerText);\n\n    if (cell.column.commandsTemplate) {\n      appendChildren(node.firstElementChild, cell.column.getColumnTemplate()(data));\n    } else {\n      for (var _i = 0, _a = cell.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        node = this.renderButton(node, command, attributes.index, command[uid]);\n      }\n    }\n\n    this.setAttributes(node, cell, attributes);\n\n    if (this.parent.isEdit) {\n      addClass(node.querySelectorAll('.e-edit-delete'), 'e-hide');\n      removeClass(node.querySelectorAll('.e-save-cancel'), 'e-hide');\n    } else {\n      addClass(node.querySelectorAll('.e-save-cancel'), 'e-hide');\n      removeClass(node.querySelectorAll('.e-edit-delete'), 'e-hide');\n    }\n\n    return node;\n  };\n\n  CommandColumnRenderer.prototype.renderButton = function (node, buttonOption, index, uid) {\n    var button = this.buttonElement.cloneNode();\n    attributes(button, {\n      'id': this.parent.element.id + (buttonOption.type || '') + '_' + index + '_' + uid,\n      'type': 'button',\n      title: !isNullOrUndefined(buttonOption.title) ? buttonOption.title : buttonOption.buttonOption.content || this.localizer.getConstant(buttonOption.type) || buttonOption.type,\n      'data-uid': uid\n    });\n    button.onclick = buttonOption.buttonOption.click;\n    var buttonObj = new Button(buttonOption.buttonOption, button);\n    buttonObj.commandType = buttonOption.type;\n    node.firstElementChild.appendChild(buttonObj.element);\n\n    switch (buttonOption.type) {\n      case 'Edit':\n      case 'Delete':\n        addClass([button], ['e-edit-delete', 'e-' + buttonOption.type.toLowerCase() + 'button']);\n        break;\n\n      case 'Cancel':\n      case 'Save':\n        addClass([button], ['e-save-cancel', 'e-' + buttonOption.type.toLowerCase() + 'button']);\n        break;\n    }\n\n    return node;\n  };\n\n  return CommandColumnRenderer;\n}(CellRenderer);\n\nexport { CommandColumnRenderer };","map":null,"metadata":{},"sourceType":"module"}
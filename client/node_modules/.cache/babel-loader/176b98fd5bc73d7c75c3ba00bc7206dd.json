{"ast":null,"code":"/**\r\n * DevExtreme (core/element_data.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _weak_map = require(\"./polyfills/weak_map\");\n\nvar _weak_map2 = _interopRequireDefault(_weak_map);\n\nvar _dom_adapter = require(\"./dom_adapter\");\n\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\n\nvar _events_engine = require(\"../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _memorized_callbacks = require(\"./memorized_callbacks\");\n\nvar _memorized_callbacks2 = _interopRequireDefault(_memorized_callbacks);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar dataMap = new _weak_map2.default();\nvar strategy;\nvar strategyChanging = new _memorized_callbacks2.default();\n\nvar beforeCleanData = function () {};\n\nvar afterCleanData = function () {};\n\nvar setDataStrategy = exports.setDataStrategy = function (value) {\n  strategyChanging.fire(value);\n  strategy = value;\n  var cleanData = strategy.cleanData;\n\n  strategy.cleanData = function (nodes) {\n    beforeCleanData(nodes);\n    var result = cleanData.call(this, nodes);\n    afterCleanData(nodes);\n    return result;\n  };\n};\n\nsetDataStrategy({\n  data: function () {\n    var element = arguments[0];\n    var key = arguments[1];\n    var value = arguments[2];\n\n    if (!element) {\n      return;\n    }\n\n    var elementData = dataMap.get(element);\n\n    if (!elementData) {\n      elementData = {};\n      dataMap.set(element, elementData);\n    }\n\n    if (void 0 === key) {\n      return elementData;\n    }\n\n    if (2 === arguments.length) {\n      return elementData[key];\n    }\n\n    elementData[key] = value;\n    return value;\n  },\n  removeData: function (element, key) {\n    if (!element) {\n      return;\n    }\n\n    if (void 0 === key) {\n      dataMap.delete(element);\n    } else {\n      var elementData = dataMap.get(element);\n\n      if (elementData) {\n        delete elementData[key];\n      }\n    }\n  },\n  cleanData: function (elements) {\n    for (var i = 0; i < elements.length; i++) {\n      _events_engine2.default.off(elements[i]);\n\n      dataMap.delete(elements[i]);\n    }\n  }\n});\nexports.setDataStrategy = setDataStrategy;\n\nexports.getDataStrategy = function () {\n  return strategy;\n};\n\nexports.data = function () {\n  return strategy.data.apply(this, arguments);\n};\n\nexports.strategyChanging = strategyChanging;\n\nexports.beforeCleanData = function (callback) {\n  beforeCleanData = callback;\n};\n\nexports.afterCleanData = function (callback) {\n  afterCleanData = callback;\n};\n\nexports.cleanData = function (nodes) {\n  return strategy.cleanData.call(this, nodes);\n};\n\nexports.removeData = function (element, key) {\n  return strategy.removeData.call(this, element, key);\n};\n\nexports.cleanDataRecursive = function (element, cleanSelf) {\n  if (!_dom_adapter2.default.isElementNode(element)) {\n    return;\n  }\n\n  var childElements = element.getElementsByTagName(\"*\");\n  strategy.cleanData(childElements);\n\n  if (cleanSelf) {\n    strategy.cleanData([element]);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
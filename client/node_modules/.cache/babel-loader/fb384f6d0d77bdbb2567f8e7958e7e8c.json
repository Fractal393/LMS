{"ast":null,"code":"import { AutoComplete } from '@syncfusion/ej2-dropdowns';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { Browser, isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { getZIndexCalcualtion, eventPromise } from '../base/util';\nimport * as events from '../base/constant';\n/**\n * `string filterui` render string column.\n * @hidden\n */\n\nvar StringFilterUI =\n/** @class */\nfunction () {\n  function StringFilterUI(parent, serviceLocator, filterSettings) {\n    this.parent = parent;\n    this.serLocator = serviceLocator;\n    this.filterSettings = filterSettings;\n  }\n\n  StringFilterUI.prototype.create = function (args) {\n    var data;\n    var floptr;\n    this.instance = this.parent.createElement('input', {\n      className: 'e-flmenu-input',\n      id: 'strui-' + args.column.uid\n    });\n    args.target.appendChild(this.instance);\n    this.dialogObj = args.dialogObj;\n    this.actObj = this.getAutoCompleteOptions(args);\n    this.actObj.appendTo(this.instance);\n  };\n\n  StringFilterUI.prototype.getAutoCompleteOptions = function (args) {\n    var _this = this;\n\n    var isForeignColumn = args.column.isForeignColumn();\n    var dataSource = isForeignColumn ? args.column.dataSource : this.parent.dataSource;\n    var fields = {\n      value: isForeignColumn ? args.column.foreignKeyValue : args.column.field\n    };\n    var autoComplete = new AutoComplete(extend({\n      dataSource: dataSource instanceof DataManager ? dataSource : new DataManager(dataSource),\n      fields: fields,\n      locale: this.parent.locale,\n      enableRtl: this.parent.enableRtl,\n      query: this.parent.query.clone(),\n      sortOrder: 'Ascending',\n      open: this.openPopup.bind(this),\n      cssClass: 'e-popup-flmenu',\n      focus: function () {\n        _this.actObj.filterType = args.getOptrInstance.getFlOperator();\n      },\n      autofill: true,\n      placeholder: args.localizeText.getConstant('EnterValue'),\n      actionComplete: function (e) {\n        e.result = e.result.filter(function (obj, index, arr) {\n          return arr.map(function (mapObj) {\n            return getValue(_this.actObj.fields.value, mapObj);\n          }).indexOf(getValue(_this.actObj.fields.value, obj)) === index;\n        });\n      }\n    }, args.column.filter.params));\n\n    if (dataSource && 'result' in dataSource) {\n      var query = this.parent.getQuery ? this.parent.getQuery().clone() : new Query();\n      var defObj = eventPromise({\n        requestType: 'stringfilterrequest'\n      }, query);\n      this.parent.trigger(events.dataStateChange, defObj.state);\n      var def = defObj.deffered;\n      def.promise.then(function (e) {\n        autoComplete.dataSource = new DataManager(e);\n      });\n    }\n\n    return autoComplete;\n  };\n\n  StringFilterUI.prototype.write = function (args) {\n    var columns = this.filterSettings.columns;\n\n    if (args.filteredValue !== '' && !isNullOrUndefined(args.filteredValue)) {\n      var struiObj = document.querySelector('#strui-' + args.column.uid).ej2_instances[0];\n      struiObj.value = args.filteredValue;\n    }\n  };\n\n  StringFilterUI.prototype.read = function (element, column, filterOptr, filterObj) {\n    var actuiObj = document.querySelector('#strui-' + column.uid).ej2_instances[0];\n\n    if (Browser.isDevice) {\n      actuiObj.hidePopup();\n      actuiObj.focusOut();\n    }\n\n    var filterValue = actuiObj.value;\n\n    if (isNullOrUndefined(filterValue) || filterValue === '') {\n      filterValue = null;\n    }\n\n    filterObj.filterByColumn(column.field, filterOptr, filterValue, 'and', this.parent.filterSettings.enableCaseSensitivity);\n  };\n\n  StringFilterUI.prototype.openPopup = function (args) {\n    getZIndexCalcualtion(args, this.dialogObj);\n  };\n\n  return StringFilterUI;\n}();\n\nexport { StringFilterUI };","map":null,"metadata":{},"sourceType":"module"}
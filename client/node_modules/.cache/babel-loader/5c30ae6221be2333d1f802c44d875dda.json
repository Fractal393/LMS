{"ast":null,"code":"import { classList, isBlazor } from '@syncfusion/ej2-base';\n/**\n * Edit render module is used to render grid edit row.\n * @hidden\n */\n\nvar BatchEditRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for render module\n   */\n  function BatchEditRender(parent) {\n    this.parent = parent;\n  }\n\n  BatchEditRender.prototype.update = function (elements, args) {\n    if (isBlazor() && this.parent.isServerRendered) {\n      var cloneCell = 'cloneCell';\n      args[cloneCell].innerHTML = '';\n      args[cloneCell].appendChild(this.getEditElement(elements, args));\n      args[cloneCell].classList.remove('e-ellipsistooltip');\n      args[cloneCell].classList.add('e-editedbatchcell');\n      classList(args.row, ['e-editedrow', 'e-batchrow'], []);\n    } else {\n      args.cell.innerHTML = '';\n      args.cell.appendChild(this.getEditElement(elements, args));\n      args.cell.classList.remove('e-ellipsistooltip');\n      args.cell.classList.add('e-editedbatchcell');\n      classList(args.row, ['e-editedrow', 'e-batchrow'], []);\n    }\n  };\n\n  BatchEditRender.prototype.getEditElement = function (elements, args) {\n    var gObj = this.parent;\n    var form = this.parent.createElement('form', {\n      id: gObj.element.id + 'EditForm',\n      className: 'e-gridform'\n    });\n    form.appendChild(elements[args.columnObject.uid]);\n\n    if (args.columnObject.editType === 'booleanedit') {\n      args.cell.classList.add('e-boolcell');\n    }\n\n    if (!args.columnObject.editType) {\n      args.cell.classList.add('e-inputbox');\n    }\n\n    return form;\n  };\n\n  BatchEditRender.prototype.removeEventListener = function () {//To destroy the renderer\n  };\n\n  return BatchEditRender;\n}();\n\nexport { BatchEditRender };","map":null,"metadata":{},"sourceType":"module"}
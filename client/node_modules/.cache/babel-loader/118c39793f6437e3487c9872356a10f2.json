{"ast":null,"code":"\"use strict\";\n/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClickableWrapper = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar ClickableWrapper_hooks_1 = require(\"./ClickableWrapper-hooks\");\n\nexports.ClickableWrapper = function (props) {\n  var children = props.children,\n      WrapperTag = props.wrapperTag,\n      passthroughProps = props.passthroughProps,\n      onSingleClick = props.onSingleClick,\n      onDoubleClick = props.onDoubleClick,\n      onKeyboardClick = props.onKeyboardClick;\n  var handleClick = ClickableWrapper_hooks_1.useClickHandler(onSingleClick, onDoubleClick);\n  var handleKeyDown = ClickableWrapper_hooks_1.useKeyDownHandler(onKeyboardClick);\n  var compProps = {};\n\n  if (onSingleClick || onDoubleClick || onKeyboardClick) {\n    compProps.onClick = handleClick;\n    compProps.onKeyDown = handleKeyDown;\n    compProps.tabIndex = 0;\n  }\n\n  var mergedProps = __assign(__assign({}, compProps), passthroughProps);\n\n  return react_1.default.createElement(WrapperTag, __assign({}, mergedProps), children);\n};","map":null,"metadata":{},"sourceType":"script"}
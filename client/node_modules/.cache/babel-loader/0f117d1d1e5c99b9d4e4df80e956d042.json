{"ast":null,"code":"/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.reorder.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _utils = require(\"../../events/utils\");\n\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\n\nvar _uiListEdit2 = require(\"./ui.list.edit.decorator\");\n\nvar _uiListEdit3 = _interopRequireDefault(_uiListEdit2);\n\nvar _sortable = require(\"../sortable\");\n\nvar _sortable2 = _interopRequireDefault(_sortable);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar REORDER_HANDLE_CONTAINER_CLASS = \"dx-list-reorder-handle-container\";\nvar REORDER_HANDLE_CLASS = \"dx-list-reorder-handle\";\nvar REORDERING_ITEM_GHOST_CLASS = \"dx-list-item-ghost-reordering\";\nvar STATE_HOVER_CLASS = \"dx-state-hover\";\n(0, _uiListEdit.register)(\"reorder\", \"default\", _uiListEdit3.default.inherit({\n  _init: function () {\n    var list = this._list;\n    this._groupedEnabled = this._list.option(\"grouped\");\n    this._lockedDrag = false;\n    var filter = this._groupedEnabled ? \"> .dx-list-group > .dx-list-group-body > .dx-list-item\" : \"> .dx-list-item\";\n    this._sortable = list._createComponent(list._scrollView.content(), _sortable2.default, (0, _extend.extend)({\n      component: list,\n      contentTemplate: null,\n      allowReordering: false,\n      filter: filter,\n      container: list.$element(),\n      dragDirection: list.option(\"itemDragging.group\") ? \"both\" : \"vertical\",\n      handle: \".\".concat(REORDER_HANDLE_CLASS),\n      dragTemplate: this._dragTemplate,\n      onDragStart: this._dragStartHandler.bind(this),\n      onDragChange: this._dragChangeHandler.bind(this),\n      onReorder: this._reorderHandler.bind(this)\n    }, list.option(\"itemDragging\")));\n  },\n  _dragTemplate: function (e) {\n    return (0, _renderer2.default)(e.itemElement).clone().width((0, _renderer2.default)(e.itemElement).width()).addClass(REORDERING_ITEM_GHOST_CLASS).addClass(STATE_HOVER_CLASS);\n  },\n  _dragStartHandler: function (e) {\n    if (this._lockedDrag) {\n      e.cancel = true;\n      return;\n    }\n  },\n  _dragChangeHandler: function (e) {\n    if (this._groupedEnabled && !this._sameParent(e.fromIndex, e.toIndex)) {\n      e.cancel = true;\n      return;\n    }\n  },\n  _sameParent: function (fromIndex, toIndex) {\n    var $dragging = this._list.getItemElementByFlatIndex(fromIndex);\n\n    var $over = this._list.getItemElementByFlatIndex(toIndex);\n\n    return $over.parent().get(0) === $dragging.parent().get(0);\n  },\n  _reorderHandler: function (e) {\n    var $targetElement = this._list.getItemElementByFlatIndex(e.toIndex);\n\n    this._list.reorderItem((0, _renderer2.default)(e.itemElement), $targetElement);\n  },\n  afterBag: function (config) {\n    var _this = this;\n\n    var $handle = (0, _renderer2.default)(\"<div>\").addClass(REORDER_HANDLE_CLASS);\n\n    _events_engine2.default.on($handle, \"dxpointerdown\", function (e) {\n      _this._lockedDrag = !(0, _utils.isMouseEvent)(e);\n    });\n\n    _events_engine2.default.on($handle, \"dxhold\", {\n      timeout: 30\n    }, function (e) {\n      e.cancel = true;\n      _this._lockedDrag = false;\n    });\n\n    config.$container.addClass(REORDER_HANDLE_CONTAINER_CLASS).append($handle);\n  }\n}));","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (events/short.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboard = exports.click = exports.dxClick = exports.focus = exports.visibility = exports.hover = exports.resize = exports.active = void 0;\n\nvar _dom_adapter = require(\"../core/dom_adapter\");\n\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\n\nvar _events_engine = require(\"./core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _keyboard_processor = require(\"./core/keyboard_processor\");\n\nvar _keyboard_processor2 = _interopRequireDefault(_keyboard_processor);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction addNamespace(event, namespace) {\n  return namespace ? (0, _utils.addNamespace)(event, namespace) : event;\n}\n\nvar active = exports.active = {\n  on: function ($el, active, inactive, opts) {\n    var selector = opts.selector,\n        showTimeout = opts.showTimeout,\n        hideTimeout = opts.hideTimeout,\n        namespace = opts.namespace;\n\n    _events_engine2.default.on($el, addNamespace(\"dxactive\", namespace), selector, {\n      timeout: showTimeout\n    }, function (event) {\n      return active.execute({\n        event: event,\n        element: event.currentTarget\n      });\n    });\n\n    _events_engine2.default.on($el, addNamespace(\"dxinactive\", namespace), selector, {\n      timeout: hideTimeout\n    }, function (event) {\n      return inactive.execute({\n        event: event,\n        element: event.currentTarget\n      });\n    });\n  },\n  off: function ($el, _ref) {\n    var namespace = _ref.namespace,\n        selector = _ref.selector;\n\n    _events_engine2.default.off($el, addNamespace(\"dxactive\", namespace), selector);\n\n    _events_engine2.default.off($el, addNamespace(\"dxinactive\", namespace), selector);\n  }\n};\nvar resize = exports.resize = {\n  on: function ($el, resize) {\n    var _ref2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n        namespace = _ref2.namespace;\n\n    _events_engine2.default.on($el, addNamespace(\"dxresize\", namespace), resize);\n  },\n  off: function ($el) {\n    var _ref3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n        namespace = _ref3.namespace;\n\n    _events_engine2.default.off($el, addNamespace(\"dxresize\", namespace));\n  }\n};\nvar hover = exports.hover = {\n  on: function ($el, start, end, _ref4) {\n    var selector = _ref4.selector,\n        namespace = _ref4.namespace;\n\n    _events_engine2.default.on($el, addNamespace(\"dxhoverend\", namespace), selector, function (event) {\n      return end(event);\n    });\n\n    _events_engine2.default.on($el, addNamespace(\"dxhoverstart\", namespace), selector, function (event) {\n      start.execute({\n        element: event.target,\n        event: event\n      });\n    });\n  },\n  off: function ($el, _ref5) {\n    var selector = _ref5.selector,\n        namespace = _ref5.namespace;\n\n    _events_engine2.default.off($el, addNamespace(\"dxhoverstart\", namespace), selector);\n\n    _events_engine2.default.off($el, addNamespace(\"dxhoverend\", namespace), selector);\n  }\n};\nvar visibility = exports.visibility = {\n  on: function ($el, shown, hiding, _ref6) {\n    var namespace = _ref6.namespace;\n\n    _events_engine2.default.on($el, addNamespace(\"dxhiding\", namespace), hiding);\n\n    _events_engine2.default.on($el, addNamespace(\"dxshown\", namespace), shown);\n  },\n  off: function ($el, _ref7) {\n    var namespace = _ref7.namespace;\n\n    _events_engine2.default.off($el, addNamespace(\"dxhiding\", namespace));\n\n    _events_engine2.default.off($el, addNamespace(\"dxshown\", namespace));\n  }\n};\nvar focus = exports.focus = {\n  on: function ($el, focusIn, focusOut, _ref8) {\n    var namespace = _ref8.namespace,\n        isFocusable = _ref8.isFocusable;\n\n    _events_engine2.default.on($el, addNamespace(\"focusin\", namespace), focusIn);\n\n    _events_engine2.default.on($el, addNamespace(\"focusout\", namespace), focusOut);\n\n    if (_dom_adapter2.default.hasDocumentProperty(\"onbeforeactivate\")) {\n      _events_engine2.default.on($el, addNamespace(\"beforeactivate\", namespace), function (e) {\n        return isFocusable(e.target) || e.preventDefault();\n      });\n    }\n  },\n  off: function ($el, _ref9) {\n    var namespace = _ref9.namespace;\n\n    _events_engine2.default.off($el, addNamespace(\"focusin\", namespace));\n\n    _events_engine2.default.off($el, addNamespace(\"focusout\", namespace));\n\n    if (_dom_adapter2.default.hasDocumentProperty(\"onbeforeactivate\")) {\n      _events_engine2.default.off($el, addNamespace(\"beforeactivate\", namespace));\n    }\n  },\n  trigger: function ($el) {\n    return _events_engine2.default.trigger($el, \"focus\");\n  }\n};\nvar dxClick = exports.dxClick = {\n  on: function ($el, click) {\n    var _ref10 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n        namespace = _ref10.namespace;\n\n    _events_engine2.default.on($el, addNamespace(\"dxclick\", namespace), click);\n  },\n  off: function ($el) {\n    var _ref11 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n        namespace = _ref11.namespace;\n\n    _events_engine2.default.off($el, addNamespace(\"dxclick\", namespace));\n  }\n};\nvar click = exports.click = {\n  on: function ($el, click) {\n    var _ref12 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n        namespace = _ref12.namespace;\n\n    _events_engine2.default.on($el, addNamespace(\"click\", namespace), click);\n  },\n  off: function ($el) {\n    var _ref13 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n        namespace = _ref13.namespace;\n\n    _events_engine2.default.off($el, addNamespace(\"click\", namespace));\n  }\n};\nvar index = 0;\nvar keyboardProcessors = {};\n\nvar generateListenerId = function () {\n  return \"keyboardProcessorId\".concat(index++);\n};\n\nvar keyboard = exports.keyboard = {\n  on: function (element, focusTarget, handler) {\n    var listenerId = generateListenerId();\n    keyboardProcessors[listenerId] = new _keyboard_processor2.default({\n      element: element,\n      focusTarget: focusTarget,\n      handler: handler\n    });\n    return listenerId;\n  },\n  off: function (listenerId) {\n    if (listenerId && keyboardProcessors[listenerId]) {\n      keyboardProcessors[listenerId].dispose();\n      delete keyboardProcessors[listenerId];\n    }\n  },\n  _getProcessor: function (listenerId) {\n    return keyboardProcessors[listenerId];\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
{"version":3,"file":"types.js","sourceRoot":"../src/","sources":["utils/types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { ISvgIconProps } from './SvgIcon.types';\n\nexport type SvgIconFuncArg<TProps = ISvgIconProps> = {\n  classes: { [iconSlot: string]: string }; // renamed from classes\n  // rtl: boolean; // how do we support this?\n  props: TProps;\n};\n\nexport type SvgIconChildrenFn<TProps = ISvgIconProps> = (svgIcon: SvgIconFuncArg<TProps>) => React.ReactNode;\n\nexport type SvgIconCreateFnParams<TProps> = {\n  svg: SvgIconChildrenFn<TProps & ISvgIconProps>;\n  displayName: string;\n  // handledProps?: (keyof TProps)[];\n};\n\nexport type SvgIconFuncWithRootArg<TProps = ISvgIconProps> = {\n  classes: { [iconSlot: string]: string }; // renamed from classes\n  // rtl: boolean; // how do we support this?\n  props: TProps;\n  processedRootProps: React.HTMLAttributes<HTMLElement>;\n};\n\nexport type SvgIconChildrenFnWithRoot<TProps = ISvgIconProps> = (\n  svgIcon: SvgIconFuncWithRootArg<TProps>,\n) => React.ReactElement;\n\nexport type SvgIconCreateFnWithRootParams<TProps> = {\n  children: SvgIconChildrenFnWithRoot<TProps & ISvgIconProps>;\n  displayName: string;\n  // handledProps?: (keyof TProps)[];\n};\n"]}
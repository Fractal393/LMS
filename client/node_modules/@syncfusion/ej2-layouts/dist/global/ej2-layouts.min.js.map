{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function () {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","this_4","localPanel","pan"],"mappings":"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"}
{"version":3,"file":"Panel.LightDismissCustom.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.LightDismissCustom.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AACjF,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AACrF,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,IAAM,WAAW,GACf,8GAA8G,CAAC;AACjH,IAAM,kBAAkB,GAAG;IACzB,IAAI,EAAE,UAAU,CAAC,MAAM;IACvB,KAAK,EAAE,2CAA2C;CACnD,CAAC;AACF,IAAM,gBAAgB,GAAG;IACvB,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,IAAM,8BAA8B,GAA4B;IAC/D,IAAA,0BAAqD,EAApD,mBAAW,EAAE,sBAAuC,CAAC;IACtD,IAAA,0BAA6D,EAA5D,uBAAe,EAAE,0BAA2C,CAAC;IAEpE,IAAM,SAAS,GAAG,gBAAgB,CAAC,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC,CAAC;IAC/D,IAAM,YAAY,GAAG,gBAAgB,CAAC,cAAM,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;IACnE,IAAM,UAAU,GAAG,gBAAgB,CAAC,cAAM,OAAA,kBAAkB,CAAC,IAAI,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACpE,IAAM,UAAU,GAAG,gBAAgB,CAAC,UAAA,EAAE;QACpC,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IACH,IAAM,kBAAkB,GAAG,gBAAgB,CAAC;QAC1C,cAAc,CAAC,KAAK,CAAC,CAAC;QACtB,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,OAAO,CACL;QACG,WAAW;QACZ,+BAAM;QACN,+BAAM;QACN,oBAAC,aAAa,IAAC,IAAI,EAAC,YAAY,EAAC,OAAO,EAAE,SAAS,GAAI;QACvD,oBAAC,KAAK,IACJ,MAAM,EAAE,WAAW,EACnB,cAAc,EAAE,IAAI;YACpB,iEAAiE;YACjE,+EAA+E;YAC/E,mBAAmB,EAAE,UAAU,EAC/B,SAAS,EAAE,YAAY,EACvB,UAAU,EAAC,0CAA0C,EACrD,oBAAoB,EAAC,OAAO;YAE5B,+BAAI,WAAW,CAAK,CACd;QACR,oBAAC,MAAM,IACL,MAAM,EAAE,CAAC,eAAe,EACxB,SAAS,EAAE,UAAU,EACrB,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,gBAAgB;YAE5B,oBAAC,YAAY;gBACX,oBAAC,aAAa,IAAC,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAC,KAAK,GAAG;gBACzD,oBAAC,aAAa,IAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,IAAI,GAAG,CACnC,CACR,CACL,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { useConstCallback } from '@uifabric/react-hooks';\n\nconst explanation =\n  'If this panel is closed using light dismiss (clicking outside the panel), a confirmation dialog will appear.';\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Are you sure you want to close the panel?',\n};\nconst dialogModalProps = {\n  isBlocking: true,\n  styles: { main: { maxWidth: 450 } },\n};\n\nexport const PanelLightDismissCustomExample: React.FunctionComponent = () => {\n  const [isPanelOpen, setIsPanelOpen] = React.useState(false);\n  const [isDialogVisible, setIsDialogVisible] = React.useState(false);\n\n  const openPanel = useConstCallback(() => setIsPanelOpen(true));\n  const dismissPanel = useConstCallback(() => setIsPanelOpen(false));\n  const showDialog = useConstCallback(() => setIsDialogVisible(true));\n  const hideDialog = useConstCallback(ev => {\n    ev.preventDefault();\n    setIsDialogVisible(false);\n  });\n  const hideDialogAndPanel = useConstCallback(() => {\n    setIsPanelOpen(false);\n    setIsDialogVisible(false);\n  });\n\n  return (\n    <div>\n      {explanation}\n      <br />\n      <br />\n      <DefaultButton text=\"Open panel\" onClick={openPanel} />\n      <Panel\n        isOpen={isPanelOpen}\n        isLightDismiss={true}\n        // Use this prop to do special handling *only* for light dismiss.\n        // If you provide this, the normal onDismiss won't be called for light dismiss.\n        onLightDismissClick={showDialog}\n        onDismiss={dismissPanel}\n        headerText=\"Panel with custom light dismiss behavior\"\n        closeButtonAriaLabel=\"Close\"\n      >\n        <p>{explanation}</p>\n      </Panel>\n      <Dialog\n        hidden={!isDialogVisible}\n        onDismiss={hideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={dialogModalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={hideDialogAndPanel} text=\"Yes\" />\n          <DefaultButton onClick={hideDialog} text=\"No\" />\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n"]}
{"version":3,"file":"SpinButton.Stateful.Example.js","sourceRoot":"../src/","sources":["components/SpinButton/examples/SpinButton.Stateful.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,uCAAuC,CAAC;AAEnE,IAAM,SAAS,GAAG,UAAC,KAAa,EAAE,UAAkB;IAClD,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;IACjE,OAAO,SAAS,KAAK,UAAU,CAAC;AAClC,CAAC,CAAC;AAEF,IAAM,YAAY,GAAG,UAAC,KAAa,EAAE,UAAkB;IACrD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;QACjC,OAAO,KAAK,CAAC;KACd;IACD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF,IAAM,MAAM,GAAG,KAAK,CAAC;AAErB,IAAM,qBAAqB,GAAG,UAAC,KAAa;IAC1C,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;QAC3B,OAAO,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;KAChC;SAAM;QACL,OAAO,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;KACpC;AACH,CAAC,CAAC;AAEF,IAAM,qBAAqB,GAAG,UAAC,KAAa;IAC1C,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACzB,OAAO,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;KAChC;SAAM;QACL,OAAO,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;KACpC;AACH,CAAC,CAAC;AAEF,IAAM,oBAAoB,GAAG,UAAC,KAAa;IACzC,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;QAC1F,OAAO,GAAG,GAAG,MAAM,CAAC;KACrB;IAED,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;AAChC,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,yBAAyB,GAAa,cAAM,OAAA,CACvD,6BAAK,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;IAC5B,oBAAC,UAAU,IACT,KAAK,EAAE,wCAAwC,EAC/C,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,GAAG,GAAG,MAAM,EACnB,UAAU,EAAE,oBAAoB,EAChC,WAAW,EAAE,qBAAqB,EAClC,WAAW,EAAE,qBAAqB,EAClC,wBAAwB,EAAE,qBAAqB,EAC/C,wBAAwB,EAAE,qBAAqB,GAC/C,CACE,CACP,EAdwD,CAcxD,CAAC","sourcesContent":["import * as React from 'react';\nimport { SpinButton } from 'office-ui-fabric-react/lib/SpinButton';\n\nconst hasSuffix = (value: string, unitSuffix: string): Boolean => {\n  const subString = value.substr(value.length - unitSuffix.length);\n  return subString === unitSuffix;\n};\n\nconst removeSuffix = (value: string, unitSuffix: string): string => {\n  if (!hasSuffix(value, unitSuffix)) {\n    return value;\n  }\n  return value.substr(0, value.length - suffix.length);\n};\n\nconst suffix = ' cm';\n\nconst onSpinButtonIncrement = (value: string) => {\n  value = removeSuffix(value, suffix);\n  if (Number(value) + 2 > 100) {\n    return String(+value) + suffix;\n  } else {\n    return String(+value + 2) + suffix;\n  }\n};\n\nconst onSpinButtonDecrement = (value: string) => {\n  value = removeSuffix(value, suffix);\n  if (Number(value) - 2 < 0) {\n    return String(+value) + suffix;\n  } else {\n    return String(+value - 2) + suffix;\n  }\n};\n\nconst onSpinButtonValidate = (value: string) => {\n  value = removeSuffix(value, suffix);\n  if (Number(value) > 100 || Number(value) < 0 || value.trim().length === 0 || isNaN(+value)) {\n    return '0' + suffix;\n  }\n\n  return String(value) + suffix;\n};\n\nexport const SpinButtonStatefulExample: React.FC = () => (\n  <div style={{ width: '400px' }}>\n    <SpinButton\n      label={'SpinButton with custom implementation:'}\n      min={0}\n      max={100}\n      value={'7' + suffix}\n      onValidate={onSpinButtonValidate}\n      onIncrement={onSpinButtonIncrement}\n      onDecrement={onSpinButtonDecrement}\n      incrementButtonAriaLabel={'Increase value by 2'}\n      decrementButtonAriaLabel={'Decrease value by 2'}\n    />\n  </div>\n);\n"]}
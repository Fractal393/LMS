{"version":3,"file":"HoverCard.InstantDismiss.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.InstantDismiss.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAA+B,aAAa,EAAE,MAAM,sCAAsC,CAAC;AAC7G,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,IAAM,UAAU,GAAG,cAAc,CAAC;IAChC,SAAS,EAAE;QACT,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,MAAM;QACf,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,QAAQ;KACzB;IACD,MAAM,EAAE;QACN,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,cAAc;QACvB,MAAM,EAAE,oBAAoB;QAC5B,OAAO,EAAE,CAAC;QACV,YAAY,EAAE,CAAC;KAChB;CACF,CAAC,CAAC;AAEH,IAAM,UAAU,GAAG;IACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,8BAA8B,GAA4B;IACrE,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAa,IAAI,CAAC,CAAC;IACjD,IAAM,kBAAkB,GAAG;QACzB,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC7B;IACH,CAAC,CAAC;IACF,IAAM,iBAAiB,GAAG;QACxB,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,SAAS;YAClC,oBAAC,aAAa;YACZ,6CAA6C;;gBAA7C,6CAA6C;gBAC7C,OAAO,EAAE,kBAAkB,EAC3B,IAAI,EAAC,iBAAiB,GACtB,CACE,CACP,CAAC;IACJ,CAAC,CAAC;IACF,IAAM,cAAc,GAAoB;QACtC,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACF,OAAO,CACL,oBAAC,MAAM;QACL;;YAEE,2CAAgB;;YAAyB,8CAAmB;qBAC1D;QACJ,oBAAC,SAAS,IACR,gBAAgB,EAAE,IAAI,EACtB,IAAI,EAAE,aAAa,CAAC,KAAK,EACzB,cAAc,EAAE,cAAc,EAC9B,YAAY,EAAE,SAAS,EACvB,UAAU,EAAE,UAAU;YAEtB,8BAAM,SAAS,EAAE,UAAU,CAAC,MAAM,oBAAsB,CAC9C,CACL,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { HoverCard, IHoverCard, IPlainCardProps, HoverCardType } from 'office-ui-fabric-react/lib/HoverCard';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\n\nconst classNames = mergeStyleSets({\n  plainCard: {\n    width: 200,\n    height: 200,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  target: {\n    fontWeight: '600',\n    display: 'inline-block',\n    border: '1px dashed #605e5c',\n    padding: 5,\n    borderRadius: 2,\n  },\n});\n\nconst onCardHide = (): void => {\n  console.log('I am now hidden');\n};\n\nexport const HoverCardInstantDismissExample: React.FunctionComponent = () => {\n  const hoverCard = React.useRef<IHoverCard>(null);\n  const instantDismissCard = (): void => {\n    if (hoverCard.current) {\n      hoverCard.current.dismiss();\n    }\n  };\n  const onRenderPlainCard = (): JSX.Element => {\n    return (\n      <div className={classNames.plainCard}>\n        <DefaultButton\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={instantDismissCard}\n          text=\"Instant Dismiss\"\n        />\n      </div>\n    );\n  };\n  const plainCardProps: IPlainCardProps = {\n    onRenderPlainCard: onRenderPlainCard,\n  };\n  return (\n    <Fabric>\n      <p>\n        In cases where an instant dismiss of the card is needed, public method\n        <i>dismiss()</i> can be used through its <i>componentRef</i> prop.\n      </p>\n      <HoverCard\n        cardDismissDelay={2000}\n        type={HoverCardType.plain}\n        plainCardProps={plainCardProps}\n        componentRef={hoverCard}\n        onCardHide={onCardHide}\n      >\n        <span className={classNames.target}>Hover Over Me</span>\n      </HoverCard>\n    </Fabric>\n  );\n};\n"]}
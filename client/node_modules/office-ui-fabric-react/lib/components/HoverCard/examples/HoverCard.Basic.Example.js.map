{"version":3,"file":"HoverCard.Basic.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.Basic.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAuB,MAAM,sCAAsC,CAAC;AACtF,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,EAAE,WAAW,EAAE,YAAY,EAAW,MAAM,wCAAwC,CAAC;AAC5F,OAAO,EAAE,eAAe,EAAgB,MAAM,wBAAwB,CAAC;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,IAAM,UAAU,GAAG,cAAc,CAAC;IAChC,WAAW,EAAE;QACX,OAAO,EAAE,MAAM;QACf,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,QAAQ;QACxB,MAAM,EAAE,MAAM;KACf;IACD,YAAY,EAAE;QACZ,OAAO,EAAE,WAAW;KACrB;IACD,IAAI,EAAE;QACJ,SAAS,EAAE;YACT,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,MAAM,EAAE,SAAS;aAClB;SACF;KACF;CACF,CAAC,CAAC;AAEH,IAAM,KAAK,GAAmB,eAAe,CAAC,EAAE,CAAC,CAAC;AAElD,IAAM,WAAW,GAAG;IAClB,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAnD,CAAmD,CAAC,CAAC;AACnG,CAAC,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAAC,IAAkB;IAC7C,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW;QACpC,2BAAG,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAE,+BAA6B,IAAI,CAAC,QAAU,IAClE,IAAI,CAAC,QAAQ,CACZ,CACA,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,OAAO,GAAc,WAAW,EAAE,CAAC;AAEzC,IAAM,oBAAoB,GAAG,UAAC,IAAkB;IAC9C,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,YAAY;QACpC,IAAI,CAAC,WAAW;QACjB,oBAAC,WAAW,IAAC,MAAM,EAAC,iBAAiB,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,GAAI,CACpE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,IAAkB,EAAE,KAAa,EAAE,MAAe;IAC5E,IAAM,kBAAkB,GAAwB;QAC9C,mBAAmB,EAAE,mBAAmB;QACxC,oBAAoB,EAAE,oBAAoB;QAC1C,UAAU,EAAE,IAAI;KACjB,CAAC;IACF,IAAI,MAAM,CAAC,GAAG,KAAK,UAAU,EAAE;QAC7B,OAAO,CACL,oBAAC,SAAS,IAAC,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,IAAI;YACzE,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI,IAAG,IAAI,CAAC,QAAQ,CAAO,CAC5C,CACb,CAAC;KACH;IACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAyB,CAAC,CAAC;AAChD,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,qBAAqB,GAA4B,cAAM,OAAA,CAClE,oBAAC,MAAM;IACL;;QACiB,0CAAe;qFAC5B;IACJ,6IAAkH;IAClH,oBAAC,WAAW,IAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,GAAI,CAClG,CACV,EARmE,CAQnE,CAAC","sourcesContent":["import * as React from 'react';\nimport { HoverCard, IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\n\nconst classNames = mergeStyleSets({\n  compactCard: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  expandedCard: {\n    padding: '16px 24px',\n  },\n  item: {\n    selectors: {\n      '&:hover': {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n      },\n    },\n  },\n});\n\nconst items: IExampleItem[] = createListItems(10);\n\nconst buildColumn = (): IColumn[] => {\n  return buildColumns(items).filter(column => column.name === 'location' || column.name === 'key');\n};\n\nconst onRenderCompactCard = (item: IExampleItem): JSX.Element => {\n  return (\n    <div className={classNames.compactCard}>\n      <a target=\"_blank\" href={`http://wikipedia.org/wiki/${item.location}`}>\n        {item.location}\n      </a>\n    </div>\n  );\n};\n\nconst columns: IColumn[] = buildColumn();\n\nconst onRenderExpandedCard = (item: IExampleItem): JSX.Element => {\n  return (\n    <div className={classNames.expandedCard}>\n      {item.description}\n      <DetailsList setKey=\"expandedCardSet\" items={items} columns={columns} />\n    </div>\n  );\n};\n\nconst onRenderItemColumn = (item: IExampleItem, index: number, column: IColumn): JSX.Element | React.ReactText => {\n  const expandingCardProps: IExpandingCardProps = {\n    onRenderCompactCard: onRenderCompactCard,\n    onRenderExpandedCard: onRenderExpandedCard,\n    renderData: item,\n  };\n  if (column.key === 'location') {\n    return (\n      <HoverCard expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n        <div className={classNames.item}>{item.location}</div>\n      </HoverCard>\n    );\n  }\n  return item[column.key as keyof IExampleItem];\n};\n\nexport const HoverCardBasicExample: React.FunctionComponent = () => (\n  <Fabric>\n    <p>\n      Hover over the <i>location</i> cell of a row item to see the card or use the keyboard to navigate to it.\n    </p>\n    <p>When using the keyboard to tab to it, the card will open but navigation inside of it will not be available.</p>\n    <DetailsList setKey=\"hoverSet\" items={items} columns={columns} onRenderItemColumn={onRenderItemColumn} />\n  </Fabric>\n);\n"]}
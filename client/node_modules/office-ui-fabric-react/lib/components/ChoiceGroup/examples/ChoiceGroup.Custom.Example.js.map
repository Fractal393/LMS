{"version":3,"file":"ChoiceGroup.Custom.Example.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/examples/ChoiceGroup.Custom.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAsB,MAAM,wCAAwC,CAAC;AACzF,OAAO,EAAE,QAAQ,EAAoC,MAAM,qCAAqC,CAAC;AACjG,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AAEjE,MAAM,CAAC,IAAM,wBAAwB,GAA4B;IAC/D,OAAO,oBAAC,WAAW,IAAC,kBAAkB,EAAC,GAAG,EAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC,UAAU,GAAG,CAAC;AACnF,CAAC,CAAC;AAEF,IAAM,eAAe,GAAG,WAAW,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AACjF,IAAM,cAAc,GAA6B;IAC/C,IAAI,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;CACzC,CAAC;AACF,IAAM,eAAe,GAAsB;IACzC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE;IAC/B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;IAChC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;CACjC,CAAC;AAEF,IAAM,OAAO,GAAyB;IACpC;QACE,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,oCAAoC;QAC1C,SAAS,EAAE,mEAAmE;QAC9E,aAAa,EAAE,UAAC,KAAK,EAAE,MAAM;YAC3B,OAAO,CACL,6BAAK,SAAS,EAAE,eAAe;gBAC5B,MAAO,CAAC,KAAK,CAAC;gBACf,oBAAC,QAAQ,IACP,kBAAkB,EAAC,GAAG,EACtB,MAAM,EAAE,cAAc,EACtB,OAAO,EAAE,eAAe;oBACxB,mDAAmD;oBACnD,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EACxC,SAAS,EAAC,oBAAoB,GAC9B,CACE,CACP,CAAC;QACJ,CAAC;KACF;IACD,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,EAAE,EAAE;IAC/E,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;CAC/B,CAAC","sourcesContent":["import * as React from 'react';\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { Dropdown, IDropdownStyles, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nexport const ChoiceGroupCustomExample: React.FunctionComponent = () => {\n  return <ChoiceGroup defaultSelectedKey=\"B\" options={options} label=\"Pick one\" />;\n};\n\nconst optionRootClass = mergeStyles({ display: 'flex', alignItems: 'baseline' });\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  root: { marginBottom: 0, marginLeft: 5 },\n};\nconst dropdownOptions: IDropdownOption[] = [\n  { key: 'A', text: '5 seconds' },\n  { key: 'B', text: '10 seconds' },\n  { key: 'C', text: '20 seconds' },\n];\n\nconst options: IChoiceGroupOption[] = [\n  {\n    key: 'A',\n    text: 'Mark displayed items as read after',\n    ariaLabel: 'Mark displayed items as read after - Press tab for further action',\n    onRenderField: (props, render) => {\n      return (\n        <div className={optionRootClass}>\n          {render!(props)}\n          <Dropdown\n            defaultSelectedKey=\"A\"\n            styles={dropdownStyles}\n            options={dropdownOptions}\n            // eslint-disable-next-line deprecation/deprecation\n            disabled={props ? !props.checked : false}\n            ariaLabel=\"Select a time span\"\n          />\n        </div>\n      );\n    },\n  },\n  { key: 'B', text: 'Option B', styles: { root: { border: '1px solid green' } } },\n  { key: 'C', text: 'Option C', disabled: true },\n  { key: 'D', text: 'Option D' },\n];\n"]}
{"version":3,"file":"ComboBox.Toggles.Example.js","sourceRoot":"../src/","sources":["components/ComboBox/examples/ComboBox.Toggles.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,QAAQ,EACR,MAAM,EAEN,WAAW,EACX,4BAA4B,EAC5B,MAAM,GACP,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,IAAM,eAAe,GAAsB;IACzC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,4BAA4B,CAAC,MAAM,EAAE;IACxF,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,4BAA4B,CAAC,OAAO,EAAE;IAC7E,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,4BAA4B,CAAC,MAAM,EAAE;IACzF,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;CAC/B,CAAC;AAEF,IAAM,gBAAgB,GAAG,WAAW,CAAC;IACnC,OAAO,EAAE,MAAM;IACf,SAAS,EAAE;QACT,OAAO,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE;QAChC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE;KACxC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,IAAM,sBAAsB,GAAa;IACxC,IAAA,sBAAkE,EAAjE,oBAAY,EAAI,iCAAiD,CAAC;IACnE,IAAA,qBAAmE,EAAlE,qBAAa,EAAI,kCAAiD,CAAC;IAE1E,OAAO,CACL,oBAAC,MAAM,IAAC,SAAS,EAAE,gBAAgB;QACjC,oBAAC,QAAQ,IACP,KAAK,EAAC,iDAAiD,EACvD,GAAG,EAAE,EAAE,GAAG,YAAY,GAAG,aAAa,EACtC,aAAa,EAAE,aAAa,EAC5B,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EACzC,OAAO,EAAE,eAAe,GACxB;QACF,oBAAC,MAAM,IAAC,KAAK,EAAC,gBAAgB,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,mBAAmB,GAAI;QACxF,oBAAC,MAAM,IAAC,KAAK,EAAC,eAAe,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,kBAAkB,GAAI,CAC9E,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  ComboBox,\n  Fabric,\n  IComboBoxOption,\n  mergeStyles,\n  SelectableOptionMenuItemType,\n  Toggle,\n} from 'office-ui-fabric-react/lib/index';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst INITIAL_OPTIONS: IComboBoxOption[] = [\n  { key: 'Header1', text: 'First heading', itemType: SelectableOptionMenuItemType.Header },\n  { key: 'A', text: 'Option A' },\n  { key: 'B', text: 'Option B' },\n  { key: 'C', text: 'Option C' },\n  { key: 'D', text: 'Option D' },\n  { key: 'divider', text: '-', itemType: SelectableOptionMenuItemType.Divider },\n  { key: 'Header2', text: 'Second heading', itemType: SelectableOptionMenuItemType.Header },\n  { key: 'E', text: 'Option E' },\n  { key: 'F', text: 'Option F', disabled: true },\n  { key: 'G', text: 'Option G' },\n  { key: 'H', text: 'Option H' },\n  { key: 'I', text: 'Option I' },\n  { key: 'J', text: 'Option J' },\n];\n\nconst wrapperClassName = mergeStyles({\n  display: 'flex',\n  selectors: {\n    '& > *': { marginRight: '20px' },\n    '& .ms-ComboBox': { maxWidth: '300px' },\n  },\n});\n\nexport const ComboBoxTogglesExample: React.FC = () => {\n  const [autoComplete, { toggle: ToggleAutoComplete }] = useBoolean(false);\n  const [allowFreeform, { toggle: ToggleAllowFreeform }] = useBoolean(true);\n\n  return (\n    <Fabric className={wrapperClassName}>\n      <ComboBox\n        label=\"ComboBox with toggleable freeform/auto-complete\"\n        key={'' + autoComplete + allowFreeform}\n        allowFreeform={allowFreeform}\n        autoComplete={autoComplete ? 'on' : 'off'}\n        options={INITIAL_OPTIONS}\n      />\n      <Toggle label=\"Allow freeform\" checked={allowFreeform} onChange={ToggleAllowFreeform} />\n      <Toggle label=\"Auto-complete\" checked={autoComplete} onChange={ToggleAutoComplete} />\n    </Fabric>\n  );\n};\n"]}
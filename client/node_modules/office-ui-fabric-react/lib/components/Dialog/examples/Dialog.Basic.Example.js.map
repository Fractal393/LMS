{"version":3,"file":"Dialog.Basic.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AACjF,OAAO,EAAE,kBAAkB,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AACrF,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,2CAA2C,CAAC;AAC3E,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAE1D,IAAM,YAAY,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;AACjD,IAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE,MAAM;IACxB,iBAAiB,EAAE,OAAO;IAC1B,IAAI,EAAE,cAAc;CACrB,CAAC;AACF,IAAM,gBAAgB,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAC;AACzD,IAAM,kBAAkB,GAAG;IACzB,IAAI,EAAE,UAAU,CAAC,MAAM;IACvB,KAAK,EAAE,iBAAiB;IACxB,oBAAoB,EAAE,OAAO;IAC7B,OAAO,EAAE,qDAAqD;CAC/D,CAAC;AAEF,MAAM,CAAC,IAAM,kBAAkB,GAA4B;IACnD,IAAA,qBAA6D,EAA5D,kBAAU,EAAI,+BAA8C,CAAC;IAC9D,IAAA,sBAAgE,EAA/D,mBAAW,EAAI,gCAAgD,CAAC;IACvE,IAAM,OAAO,GAAW,KAAK,CAAC,aAAa,CAAC,CAAC;IAC7C,IAAM,SAAS,GAAW,KAAK,CAAC,cAAc,CAAC,CAAC;IAEhD,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAC9B,cAAM,OAAA,CAAC;QACL,WAAW,EAAE,OAAO;QACpB,cAAc,EAAE,SAAS;QACzB,UAAU,EAAE,KAAK;QACjB,MAAM,EAAE,YAAY;QACpB,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS;KACnD,CAAC,EANI,CAMJ,EACF,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC,CAClC,CAAC;IAEF,OAAO,CACL;QACE,oBAAC,MAAM,IAAC,KAAK,EAAC,cAAc,EAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,WAAW,GAAI;QAClF,oBAAC,aAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,aAAa,GAAG;QACvG,+BAAO,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,sBAEvC;QACR,+BAAO,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,gBAAgB,4BAEzC;QAER,oBAAC,MAAM,IACL,MAAM,EAAE,UAAU,EAClB,SAAS,EAAE,gBAAgB,EAC3B,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,UAAU;YAEtB,oBAAC,YAAY;gBACX,oBAAC,aAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,MAAM,GAAG;gBACxD,oBAAC,aAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,YAAY,GAAG,CACjD,CACR,CACR,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { hiddenContentStyle, mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { useId, useBoolean } from '@uifabric/react-hooks';\n\nconst dialogStyles = { main: { maxWidth: 450 } };\nconst dragOptions = {\n  moveMenuItemText: 'Move',\n  closeMenuItemText: 'Close',\n  menu: ContextualMenu,\n};\nconst screenReaderOnly = mergeStyles(hiddenContentStyle);\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Missing Subject',\n  closeButtonAriaLabel: 'Close',\n  subText: 'Do you want to send this message without a subject?',\n};\n\nexport const DialogBasicExample: React.FunctionComponent = () => {\n  const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n  const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false);\n  const labelId: string = useId('dialogLabel');\n  const subTextId: string = useId('subTextLabel');\n\n  const modalProps = React.useMemo(\n    () => ({\n      titleAriaId: labelId,\n      subtitleAriaId: subTextId,\n      isBlocking: false,\n      styles: dialogStyles,\n      dragOptions: isDraggable ? dragOptions : undefined,\n    }),\n    [isDraggable, labelId, subTextId],\n  );\n\n  return (\n    <>\n      <Toggle label=\"Is draggable\" onChange={toggleIsDraggable} checked={isDraggable} />\n      <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={toggleHideDialog} text=\"Open Dialog\" />\n      <label id={labelId} className={screenReaderOnly}>\n        My sample label\n      </label>\n      <label id={subTextId} className={screenReaderOnly}>\n        My sample description\n      </label>\n\n      <Dialog\n        hidden={hideDialog}\n        onDismiss={toggleHideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={toggleHideDialog} text=\"Send\" />\n          <DefaultButton onClick={toggleHideDialog} text=\"Don't send\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n"]}
{"version":3,"file":"Dropdown.Controlled.Example.js","sourceRoot":"../src/","sources":["components/Dropdown/examples/Dropdown.Controlled.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,oBAAoB,EAAoC,MAAM,qCAAqC,CAAC;AAEvH,IAAM,cAAc,GAA6B,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;AAE9E,IAAM,gCAAgC,GAAG;IACvC,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,oBAAoB,CAAC,MAAM,EAAE;IAC9E,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;IAC/B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;IACjC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;IACjD,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;IAC/B,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,oBAAoB,CAAC,OAAO,EAAE;IACvE,EAAE,GAAG,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,oBAAoB,CAAC,MAAM,EAAE;IACtF,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE;IACrC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;IACjC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,IAAM,yBAAyB,GAA4B;IAC1D,IAAA,qBAAmE,EAAlE,oBAAY,EAAE,uBAAoD,CAAC;IAE1E,IAAM,QAAQ,GAAG,UAAC,KAAsC,EAAE,IAAqB;QAC7E,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,QAAQ,IACP,KAAK,EAAC,oBAAoB,EAC1B,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;QACxD,6CAA6C;QAC7C,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAC,kBAAkB,EAC9B,OAAO,EAAE,gCAAgC,EACzC,MAAM,EAAE,cAAc,GACtB,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\n\nconst dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 300 } };\n\nconst dropdownControlledExampleOptions = [\n  { key: 'fruitsHeader', text: 'Fruits', itemType: DropdownMenuItemType.Header },\n  { key: 'apple', text: 'Apple' },\n  { key: 'banana', text: 'Banana' },\n  { key: 'orange', text: 'Orange', disabled: true },\n  { key: 'grape', text: 'Grape' },\n  { key: 'divider_1', text: '-', itemType: DropdownMenuItemType.Divider },\n  { key: 'vegetablesHeader', text: 'Vegetables', itemType: DropdownMenuItemType.Header },\n  { key: 'broccoli', text: 'Broccoli' },\n  { key: 'carrot', text: 'Carrot' },\n  { key: 'lettuce', text: 'Lettuce' },\n];\n\nexport const DropdownControlledExample: React.FunctionComponent = () => {\n  const [selectedItem, setSelectedItem] = React.useState<IDropdownOption>();\n\n  const onChange = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption): void => {\n    setSelectedItem(item);\n  };\n\n  return (\n    <Dropdown\n      label=\"Controlled example\"\n      selectedKey={selectedItem ? selectedItem.key : undefined}\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={onChange}\n      placeholder=\"Select an option\"\n      options={dropdownControlledExampleOptions}\n      styles={dropdownStyles}\n    />\n  );\n};\n"]}
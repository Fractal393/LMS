{"version":3,"file":"Calendar.Button.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Calendar, DayOfWeek } from 'office-ui-fabric-react/lib/Calendar';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst DayPickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  goToToday: 'Go to today',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close',\n};\n\nexport interface ICalendarButtonExampleProps {\n  isDayPickerVisible?: boolean;\n  isMonthPickerVisible?: boolean;\n  highlightCurrentMonth?: boolean;\n  highlightSelectedMonth?: boolean;\n  buttonString?: string;\n  showMonthPickerAsOverlay?: boolean;\n  showGoToToday?: boolean;\n}\n\nlet calendarButtonElement: HTMLElement;\n\nexport const CalendarButtonExample: React.FunctionComponent<ICalendarButtonExampleProps> = (\n  props: ICalendarButtonExampleProps,\n) => {\n  const [showCalendar, { toggle: toggleShowCalendar }] = useBoolean(false);\n  const [selectedDate, setSelectedDate] = React.useState<Date>();\n\n  const {\n    showMonthPickerAsOverlay = false,\n    isDayPickerVisible = true,\n    isMonthPickerVisible = true,\n    showGoToToday = true,\n    buttonString = 'Click for Calendar',\n    highlightCurrentMonth,\n    highlightSelectedMonth,\n  } = props;\n  const onSelectDate = (date: Date): void => {\n    toggleShowCalendar();\n    setSelectedDate(date);\n  };\n\n  return (\n    <div>\n      <div ref={calendarBtn => (calendarButtonElement = calendarBtn!)}>\n        <DefaultButton\n          onClick={toggleShowCalendar}\n          text={!selectedDate ? buttonString : selectedDate.toLocaleDateString()}\n        />\n      </div>\n      {showCalendar && (\n        <Callout\n          isBeakVisible={false}\n          className=\"ms-DatePicker-callout\"\n          gapSpace={0}\n          doNotLayer={false}\n          target={calendarButtonElement}\n          directionalHint={DirectionalHint.bottomLeftEdge}\n          onDismiss={toggleShowCalendar}\n          setInitialFocus\n        >\n          <FocusTrapZone firstFocusableSelector=\"ms-DatePicker-day--today\" isClickableOutsideFocusTrap>\n            <Calendar\n              // eslint-disable-next-line react/jsx-no-bind\n              onSelectDate={onSelectDate}\n              onDismiss={toggleShowCalendar}\n              isMonthPickerVisible={isMonthPickerVisible}\n              value={selectedDate!}\n              firstDayOfWeek={DayOfWeek.Sunday}\n              strings={DayPickerStrings}\n              isDayPickerVisible={isDayPickerVisible}\n              highlightCurrentMonth={highlightCurrentMonth}\n              highlightSelectedMonth={highlightSelectedMonth}\n              showMonthPickerAsOverlay={showMonthPickerAsOverlay}\n              showGoToToday={showGoToToday}\n            />\n          </FocusTrapZone>\n        </Callout>\n      )}\n    </div>\n  );\n};\n"]}
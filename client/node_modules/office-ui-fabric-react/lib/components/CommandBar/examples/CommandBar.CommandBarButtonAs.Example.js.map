{"version":3,"file":"CommandBar.CommandBarButtonAs.Example.js","sourceRoot":"../src/","sources":["components/CommandBar/examples/CommandBar.CommandBarButtonAs.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBar, ICommandBarItemProps } from 'office-ui-fabric-react/lib/CommandBar';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Coachmark } from 'office-ui-fabric-react/lib/Coachmark';\nimport { IComponentAsProps, IComponentAs } from 'office-ui-fabric-react/lib/Utilities';\nimport { TeachingBubbleContent } from 'office-ui-fabric-react/lib/TeachingBubble';\nimport { CommandBarButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\n\ninterface IIndividualCommandBarButtonAsExampleProps {\n  onDismissCoachmark: () => void;\n  isCoachmarkVisible: boolean;\n}\n\ninterface ICoachmarkCommandBarButtonProps extends IComponentAsProps<ICommandBarItemProps> {\n  onDismiss: () => void;\n  isCoachmarkVisible?: boolean;\n}\n\n/** Command bar button with a coachmark and teaching bubble */\nconst CoachmarkCommandBarButton: React.FunctionComponent<ICoachmarkCommandBarButtonProps> = props => {\n  const targetButton = React.useRef<HTMLDivElement | null>(null);\n  const { defaultRender, isCoachmarkVisible, onDismiss, ...buttonProps } = props;\n  const ButtonComponent = defaultRender || CommandBarButton;\n\n  return (\n    <>\n      <div ref={targetButton}>\n        <ButtonComponent {...(buttonProps as any)} />\n      </div>\n      {isCoachmarkVisible && (\n        <Coachmark\n          target={targetButton.current}\n          positioningContainerProps={{\n            directionalHint: DirectionalHint.bottomCenter,\n          }}\n          ariaAlertText=\"A Coachmark has appeared\"\n          ariaDescribedBy=\"coachmark-desc1\"\n          ariaLabelledBy=\"coachmark-label1\"\n          ariaLabelledByText=\"Coachmark notification\"\n        >\n          <TeachingBubbleContent\n            headline=\"Example Title\"\n            hasCloseButton={true}\n            closeButtonAriaLabel=\"Close\"\n            onDismiss={onDismiss}\n            ariaDescribedBy=\"example-description1\"\n            ariaLabelledBy=\"example-label1\"\n          >\n            Welcome to the land of Coachmarks!\n          </TeachingBubbleContent>\n        </Coachmark>\n      )}\n    </>\n  );\n};\n\nconst overflowButtonProps: IButtonProps = {\n  ariaLabel: 'More commands',\n};\n\n/** Command bar which renders the Share button with a coachmark */\n// eslint-disable-next-line @fluentui/max-len\nconst IndividualCommandBarButtonAsExample: React.FunctionComponent<IIndividualCommandBarButtonAsExampleProps> = props => {\n  const { onDismissCoachmark, isCoachmarkVisible } = props;\n  const items: ICommandBarItemProps[] = React.useMemo(() => {\n    const CoachmarkButtonWrapper: IComponentAs<ICommandBarItemProps> = (p: IComponentAsProps<ICommandBarItemProps>) => {\n      return (\n        <CoachmarkCommandBarButton {...p} isCoachmarkVisible={isCoachmarkVisible} onDismiss={onDismissCoachmark} />\n      );\n    };\n\n    return [\n      { key: 'newItem', text: 'New', iconProps: { iconName: 'Add' }, onClick: () => console.log('New') },\n      { key: 'upload', text: 'Upload', iconProps: { iconName: 'Upload' }, onClick: () => console.log('Upload') },\n      {\n        key: 'share',\n        text: 'Share',\n        iconProps: { iconName: 'Share' },\n        // The Share button will have a coachmark\n        commandBarButtonAs: CoachmarkButtonWrapper,\n        onClick: () => console.log('Share'),\n      },\n      {\n        key: 'download',\n        text: 'Download',\n        iconProps: { iconName: 'Download' },\n        onClick: () => console.log('Download'),\n      },\n    ];\n  }, [onDismissCoachmark, isCoachmarkVisible]);\n\n  return (\n    <CommandBar\n      overflowButtonProps={overflowButtonProps}\n      items={items}\n      ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n    />\n  );\n};\n\nexport const IndividualCommandBarButtonAsExampleWrapper: React.FunctionComponent = () => {\n  const [isCoachmarkVisible, setIsCoachmarkVisible] = React.useState(true);\n\n  const onDismissCoachmark = React.useCallback(() => setIsCoachmarkVisible(false), []);\n\n  return (\n    <IndividualCommandBarButtonAsExample\n      onDismissCoachmark={onDismissCoachmark}\n      isCoachmarkVisible={isCoachmarkVisible}\n    />\n  );\n};\n"]}
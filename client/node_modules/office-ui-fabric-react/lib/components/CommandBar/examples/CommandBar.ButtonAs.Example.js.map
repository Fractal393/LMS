{"version":3,"file":"CommandBar.ButtonAs.Example.js","sourceRoot":"../src/","sources":["components/CommandBar/examples/CommandBar.ButtonAs.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBar, ICommandBarItemProps } from 'office-ui-fabric-react/lib/CommandBar';\nimport { CommandBarButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport {\n  IContextualMenuItemProps,\n  ContextualMenuItem,\n  IContextualMenuItemStyles,\n  IContextualMenuStyles,\n} from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { getTheme, concatStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\n\nconst theme = getTheme();\n// Styles for both command bar and overflow/menu items\nconst itemStyles: Partial<IContextualMenuItemStyles> = {\n  label: { fontSize: 18 },\n  icon: { color: theme.palette.red },\n  iconHovered: { color: theme.palette.redDark },\n};\n// For passing the styles through to the context menus\nconst menuStyles: Partial<IContextualMenuStyles> = {\n  subComponentStyles: { menuItem: itemStyles, callout: {} },\n};\n\nconst getCommandBarButtonStyles = memoizeFunction(\n  (originalStyles: IButtonStyles | undefined): Partial<IContextualMenuItemStyles> => {\n    if (!originalStyles) {\n      return itemStyles;\n    }\n\n    return concatStyleSets(originalStyles, itemStyles);\n  },\n);\n\n// Custom renderer for main command bar items\nconst CustomButton: React.FunctionComponent<IButtonProps> = props => {\n  const buttonOnMouseClick = () => alert(`${props.text} clicked`);\n  // eslint-disable-next-line react/jsx-no-bind\n  return <CommandBarButton {...props} onClick={buttonOnMouseClick} styles={getCommandBarButtonStyles(props.styles)} />;\n};\n\n// Custom renderer for menu items (these must have a separate custom renderer because it's unlikely\n// that the same component could be rendered properly as both a command bar item and menu item).\n// It's also okay to custom render only the command bar items without changing the menu items.\nconst CustomMenuItem: React.FunctionComponent<IContextualMenuItemProps> = props => {\n  const buttonOnMouseClick = () => alert(`${props.item.text} clicked`);\n  // Due to ContextualMenu implementation quirks, passing styles here doesn't work\n  // eslint-disable-next-line react/jsx-no-bind\n  return <ContextualMenuItem {...props} onClick={buttonOnMouseClick} />;\n};\n\nconst overflowProps: IButtonProps = {\n  ariaLabel: 'More commands',\n  menuProps: {\n    contextualMenuItemAs: CustomMenuItem,\n    // Styles are passed through to menu items here\n    styles: menuStyles,\n    items: [], // CommandBar will determine items rendered in overflow\n    isBeakVisible: true,\n    beakWidth: 20,\n    gapSpace: 10,\n    directionalHint: DirectionalHint.topCenter,\n  },\n};\n\nexport const CommandBarButtonAsExample: React.FunctionComponent = () => {\n  return (\n    <CommandBar\n      overflowButtonProps={overflowProps}\n      // Custom render all buttons\n      buttonAs={CustomButton}\n      items={_items}\n      overflowItems={_overflowItems}\n      farItems={_farItems}\n      ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n    />\n  );\n};\n\nconst _items: ICommandBarItemProps[] = [\n  {\n    key: 'newItem',\n    text: 'New',\n    iconProps: { iconName: 'Add' },\n    subMenuProps: {\n      // Must specify the menu item type for submenus too!\n      contextualMenuItemAs: CustomMenuItem,\n      // Styles are passed through to menu items here\n      styles: menuStyles,\n      items: [\n        { key: 'emailMessage', text: 'Email message', iconProps: { iconName: 'Mail' } },\n        { key: 'calendarEvent', text: 'Calendar event', iconProps: { iconName: 'Calendar' } },\n      ],\n    },\n  },\n  {\n    key: 'upload',\n    text: 'Upload',\n    iconProps: { iconName: 'Upload' },\n    href: 'https://developer.microsoft.com/en-us/fluentui',\n  },\n  { key: 'share', text: 'Share', iconProps: { iconName: 'Share' }, onClick: () => console.log('Share') },\n  { key: 'download', text: 'Download', iconProps: { iconName: 'Download' }, onClick: () => console.log('Download') },\n];\n\nconst _overflowItems: ICommandBarItemProps[] = [\n  { key: 'move', text: 'Move to...', onClick: () => console.log('Move to'), iconProps: { iconName: 'MoveToFolder' } },\n  { key: 'copy', text: 'Copy to...', onClick: () => console.log('Copy to'), iconProps: { iconName: 'Copy' } },\n  { key: 'rename', text: 'Rename...', onClick: () => console.log('Rename'), iconProps: { iconName: 'Edit' } },\n];\n\nconst _farItems: ICommandBarItemProps[] = [\n  {\n    key: 'tile',\n    text: 'Grid view',\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: 'Grid view',\n    iconOnly: true,\n    iconProps: { iconName: 'Tiles' },\n    onClick: () => console.log('Tiles'),\n  },\n  {\n    key: 'info',\n    text: 'Info',\n    ariaLabel: 'Info',\n    iconOnly: true,\n    iconProps: { iconName: 'Info' },\n    onClick: () => console.log('Info'),\n  },\n];\n"]}
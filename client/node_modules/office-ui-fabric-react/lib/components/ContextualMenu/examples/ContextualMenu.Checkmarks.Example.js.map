{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ContextualMenuItemType,\n  DirectionalHint,\n  IContextualMenuItem,\n  IContextualMenuProps,\n} from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nconst keys: string[] = [\n  'newItem',\n  'share',\n  'mobile',\n  'enablePrint',\n  'enableMusic',\n  'newSub',\n  'emailMessage',\n  'calendarEvent',\n  'disabledNewSub',\n  'disabledEmailMessage',\n  'disabledCalendarEvent',\n  'splitButtonSubMenuLeftDirection',\n  'emailMessageLeft',\n  'calendarEventLeft',\n  'disabledPrimarySplit',\n];\n\nexport const ContextualMenuCheckmarksExample: React.FunctionComponent = () => {\n  const [selection, setSelection] = React.useState<{ [key: string]: boolean }>({});\n\n  const onToggleSelect = React.useCallback(\n    (ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem): void => {\n      ev && ev.preventDefault();\n\n      if (item) {\n        setSelection({ ...selection, [item.key]: selection[item.key] === undefined ? true : !selection[item.key] });\n      }\n    },\n    [selection],\n  );\n\n  const menuItems: IContextualMenuItem[] = React.useMemo(\n    () => [\n      {\n        key: keys[0],\n        text: 'New',\n        canCheck: true,\n        isChecked: selection[keys[0]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[1],\n        text: 'Share',\n        canCheck: true,\n        isChecked: selection[keys[1]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[2],\n        text: 'Mobile',\n        canCheck: true,\n        isChecked: selection[keys[2]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: 'divider_1',\n        itemType: ContextualMenuItemType.Divider,\n      },\n\n      {\n        key: keys[3],\n        text: 'Print',\n        canCheck: true,\n        isChecked: selection[keys[3]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[4],\n        text: 'Music',\n        canCheck: true,\n        isChecked: selection[keys[4]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[5],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          items: [\n            {\n              key: keys[6],\n              text: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[6]],\n              onClick: onToggleSelect,\n            },\n            {\n              key: keys[7],\n              text: 'Calendar event',\n              canCheck: true,\n              isChecked: selection[keys[7]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        text: 'Split Button',\n        canCheck: true,\n        isChecked: selection[keys[5]],\n        split: true,\n        onClick: onToggleSelect,\n        ariaLabel: 'Split Button. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[8],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          items: [\n            {\n              key: keys[9],\n              text: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[9]],\n              onClick: onToggleSelect,\n            },\n            {\n              key: keys[10],\n              text: 'Calendar event',\n              canCheck: true,\n              isChecked: selection[keys[10]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        text: 'Split Button',\n        canCheck: true,\n        isChecked: selection[keys[8]],\n        split: true,\n        onClick: onToggleSelect,\n        disabled: true,\n        ariaLabel: 'Split Button. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[11],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          directionalHint: DirectionalHint.leftCenter,\n          items: [\n            {\n              key: keys[12],\n              text: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[12]],\n              onClick: onToggleSelect,\n            },\n            {\n              key: keys[13],\n              text: 'Calendar event',\n              canCheck: true,\n              isChecked: selection[keys[13]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        text: 'Split Button Left Menu',\n        canCheck: true,\n        isChecked: selection[keys[11]],\n        split: true,\n        onClick: onToggleSelect,\n        ariaLabel: 'Split Button Left Menu. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[12],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          items: [\n            {\n              key: keys[12],\n              name: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[12]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        name: 'Split Button Disabled Primary',\n        split: true,\n        primaryDisabled: true,\n        ariaLabel: 'Split Button Disabled Primary. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[13],\n        iconProps: {\n          iconName: selection![keys[13]] ? 'SingleBookmarkSolid' : 'SingleBookmark',\n        },\n        name: selection![keys[13]] ? 'Toogled command no checkmark' : 'Toogle command no checkmark',\n        canCheck: false,\n        isChecked: selection![keys[13]],\n        onClick: onToggleSelect,\n      },\n    ],\n    [selection, onToggleSelect],\n  );\n\n  const menuProps: IContextualMenuProps = React.useMemo(\n    () => ({\n      shouldFocusOnMount: true,\n      items: menuItems,\n    }),\n    [menuItems],\n  );\n\n  return <DefaultButton text=\"Click for ContextualMenu\" menuProps={menuProps} />;\n};\n"]}
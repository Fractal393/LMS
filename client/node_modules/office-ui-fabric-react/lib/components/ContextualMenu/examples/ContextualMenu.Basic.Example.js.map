{"version":3,"file":"ContextualMenu.Basic.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Basic.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,sBAAsB,EAAuB,MAAM,2CAA2C,CAAC;AACxH,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,MAAM,CAAC,IAAM,0BAA0B,GAA4B;IACjE,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAA,0BAAmE,EAAlE,0BAAkB,EAAE,6BAA8C,CAAC;IAC1E,IAAM,oBAAoB,GAAG,gBAAgB,CAAC,cAAM,OAAA,qBAAqB,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;IACjF,IAAM,oBAAoB,GAAG,gBAAgB,CAAC,cAAM,OAAA,qBAAqB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;IAElF,OAAO,CACL;;QAGE;YACE;gBACE,2BAAG,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,+BAE1C,CACF,CACF;QACJ,oBAAC,cAAc,IACb,KAAK,EAAE,SAAS,EAChB,MAAM,EAAE,CAAC,kBAAkB,EAC3B,MAAM,EAAE,OAAO,EACf,WAAW,EAAE,oBAAoB,EACjC,SAAS,EAAE,oBAAoB,GAC/B,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,SAAS,GAA0B;IACvC;QACE,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B;KAC1C;IACD;QACE,GAAG,EAAE,WAAW;QAChB,QAAQ,EAAE,sBAAsB,CAAC,OAAO;KACzC;IACD;QACE,GAAG,EAAE,QAAQ;QACb,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B;KAC7C;IACD;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B;KAC3C;IACD;QACE,GAAG,EAAE,YAAY;QACjB,IAAI,EAAE,YAAY;QAClB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC;KACjD;IACD;QACE,GAAG,EAAE,cAAc;QACnB,IAAI,EAAE,kBAAkB;QACxB,IAAI,EAAE,iBAAiB;KACxB;IACD;QACE,GAAG,EAAE,gBAAgB;QACrB,IAAI,EAAE,iBAAiB;QACvB,IAAI,EAAE,iBAAiB;QACvB,MAAM,EAAE,QAAQ;KACjB;IACD;QACE,GAAG,EAAE,iBAAiB;QACtB,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,iBAAiB;QACvB,OAAO,EAAE,UAAC,EAA2D;YACnE,KAAK,CAAC,cAAc,CAAC,CAAC;YACtB,EAAE,CAAC,cAAc,EAAE,CAAC;QACtB,CAAC;QACD,MAAM,EAAE,QAAQ;KACjB;IACD;QACE,GAAG,EAAE,UAAU;QACf,IAAI,EAAE,eAAe;QACrB,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,EAAvD,CAAuD;KACvE;CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, ContextualMenuItemType, IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { useConstCallback } from '@uifabric/react-hooks';\n\nexport const ContextualMenuBasicExample: React.FunctionComponent = () => {\n  const linkRef = React.useRef(null);\n  const [showContextualMenu, setShowContextualMenu] = React.useState(false);\n  const onShowContextualMenu = useConstCallback(() => setShowContextualMenu(true));\n  const onHideContextualMenu = useConstCallback(() => setShowContextualMenu(false));\n\n  return (\n    <div>\n      This example directly uses ContextualMenu to show how it can be attached to arbitrary elements. The remaining\n      examples use ContextualMenu through Fluent UI Button components.\n      <p>\n        <b>\n          <a ref={linkRef} onClick={onShowContextualMenu}>\n            Click for ContextualMenu\n          </a>\n        </b>\n      </p>\n      <ContextualMenu\n        items={menuItems}\n        hidden={!showContextualMenu}\n        target={linkRef}\n        onItemClick={onHideContextualMenu}\n        onDismiss={onHideContextualMenu}\n      />\n    </div>\n  );\n};\n\nconst menuItems: IContextualMenuItem[] = [\n  {\n    key: 'newItem',\n    text: 'New',\n    onClick: () => console.log('New clicked'),\n  },\n  {\n    key: 'divider_1',\n    itemType: ContextualMenuItemType.Divider,\n  },\n  {\n    key: 'rename',\n    text: 'Rename',\n    onClick: () => console.log('Rename clicked'),\n  },\n  {\n    key: 'edit',\n    text: 'Edit',\n    onClick: () => console.log('Edit clicked'),\n  },\n  {\n    key: 'properties',\n    text: 'Properties',\n    onClick: () => console.log('Properties clicked'),\n  },\n  {\n    key: 'linkNoTarget',\n    text: 'Link same window',\n    href: 'http://bing.com',\n  },\n  {\n    key: 'linkWithTarget',\n    text: 'Link new window',\n    href: 'http://bing.com',\n    target: '_blank',\n  },\n  {\n    key: 'linkWithOnClick',\n    name: 'Link click',\n    href: 'http://bing.com',\n    onClick: (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      alert('Link clicked');\n      ev.preventDefault();\n    },\n    target: '_blank',\n  },\n  {\n    key: 'disabled',\n    text: 'Disabled item',\n    disabled: true,\n    onClick: () => console.error('Disabled item should not be clickable.'),\n  },\n];\n"]}
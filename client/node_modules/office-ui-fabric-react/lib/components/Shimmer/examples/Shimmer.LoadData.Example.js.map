{"version":3,"file":"Shimmer.LoadData.Example.js","sourceRoot":"../src/","sources":["components/Shimmer/examples/Shimmer.LoadData.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Shimmer, ShimmerElementsGroup, ShimmerElementType } from 'office-ui-fabric-react/lib/Shimmer';\nimport { Persona, PersonaSize, PersonaPresence } from 'office-ui-fabric-react/lib/Persona';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst wrapperClass = mergeStyles({\n  padding: 2,\n  selectors: {\n    '& > .ms-Shimmer-container': {\n      margin: '10px 0',\n    },\n  },\n});\nconst wrapperStyles = { display: 'flex' };\n\nconst getCustomElements = (): JSX.Element => {\n  return (\n    <div style={wrapperStyles}>\n      <ShimmerElementsGroup\n        shimmerElements={[\n          { type: ShimmerElementType.circle, height: 40 },\n          { type: ShimmerElementType.gap, width: 16, height: 40 },\n        ]}\n      />\n      <ShimmerElementsGroup\n        flexWrap\n        width=\"100%\"\n        shimmerElements={[\n          { type: ShimmerElementType.line, width: '100%', height: 10, verticalAlign: 'bottom' },\n          { type: ShimmerElementType.line, width: '90%', height: 8 },\n          { type: ShimmerElementType.gap, width: '10%', height: 20 },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport const ShimmerLoadDataExample: React.FunctionComponent = () => {\n  const [examplePersona, setExamplePersona] = React.useState({});\n  const [contentOne, setContentOne] = React.useState('');\n  const [isDataLoadedOne, { toggle: toggleIsDataLoadedOne }] = useBoolean(false);\n  const [isDataLoadedTwo, { toggle: toggleIsDataLoadedTwo }] = useBoolean(false);\n\n  const getContentOne = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\n    toggleIsDataLoadedOne();\n    setContentOne(!isDataLoadedOne ? 'Congratulations!!! You have successfully loaded the content. ' : '');\n  };\n\n  const getContentTwo = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\n    toggleIsDataLoadedTwo();\n    setExamplePersona(\n      !isDataLoadedTwo\n        ? {\n            imageUrl:\n              'https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/persona-female.png',\n            imageInitials: 'AL',\n            primaryText: 'Annie Lindqvist',\n            secondaryText: 'Software Engineer',\n          }\n        : {},\n    );\n  };\n\n  return (\n    <div className={wrapperClass}>\n      <Toggle\n        checked={isDataLoadedOne}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={getContentOne}\n        onText=\"Toggle to show shimmer\"\n        offText=\"Toggle to load content\"\n      />\n      <Shimmer isDataLoaded={isDataLoadedOne} ariaLabel=\"Loading content\">\n        <div\n          style={{\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            lineHeight: '1',\n            minHeight: '16px',\n          }}\n        >\n          {contentOne}\n          {contentOne}\n          {contentOne}\n        </div>\n      </Shimmer>\n      <Toggle\n        checked={isDataLoadedTwo}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={getContentTwo}\n        onText=\"Toggle to show shimmer\"\n        offText=\"Toggle to load content\"\n      />\n      <Shimmer customElementsGroup={getCustomElements()} width=\"300\" isDataLoaded={isDataLoadedTwo}>\n        <Persona {...examplePersona} size={PersonaSize.size40} presence={PersonaPresence.away} />\n      </Shimmer>\n    </div>\n  );\n};\n"]}
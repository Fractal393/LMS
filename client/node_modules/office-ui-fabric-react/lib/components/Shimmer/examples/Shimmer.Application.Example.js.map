{"version":3,"file":"Shimmer.Application.Example.js","sourceRoot":"../src/","sources":["components/Shimmer/examples/Shimmer.Application.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { IColumn, buildColumns, SelectionMode, Toggle, IListProps } from 'office-ui-fabric-react/lib/index';\nimport { ShimmeredDetailsList } from 'office-ui-fabric-react/lib/ShimmeredDetailsList';\nimport { useSetInterval, useConst, useConstCallback } from '@uifabric/react-hooks';\n\ninterface IShimmerApplicationExampleState {\n  lastIntervalId: number;\n  visibleCount: number;\n}\n\nconst ITEMS_COUNT: number = 200;\nconst INTERVAL_DELAY: number = 1200;\nconst toggleStyle: React.CSSProperties = {\n  marginBottom: '20px',\n};\nconst shimmeredDetailsListProps: IListProps = {\n  renderedWindowsAhead: 0,\n  renderedWindowsBehind: 0,\n};\n\nconst fileIcons: { name: string }[] = [\n  { name: 'accdb' },\n  { name: 'audio' },\n  { name: 'code' },\n  { name: 'csv' },\n  { name: 'docx' },\n  { name: 'dotx' },\n  { name: 'mpt' },\n  { name: 'model' },\n  { name: 'one' },\n  { name: 'onetoc' },\n  { name: 'pdf' },\n  { name: 'photo' },\n  { name: 'pptx' },\n  { name: 'presentation' },\n  { name: 'potx' },\n  { name: 'pub' },\n  { name: 'rtf' },\n  { name: 'spreadsheet' },\n  { name: 'txt' },\n  { name: 'vector' },\n  { name: 'vsdx' },\n  { name: 'xlsx' },\n  { name: 'xltx' },\n  { name: 'xsn' },\n];\n\nconst randomFileIcon = (): { docType: string; url: string } => {\n  const docType: string = fileIcons[Math.floor(Math.random() * fileIcons.length) + 0].name;\n  return {\n    docType,\n    url: `https://static2.sharepointonline.com/files/fabric/assets/item-types/16/${docType}.svg`,\n  };\n};\n\nconst onRenderItemColumn = (item: IExampleItem, index: number, column: IColumn): JSX.Element | string | number => {\n  if (column.key === 'thumbnail') {\n    return <img src={item.thumbnail} />;\n  }\n  return item[column.key as keyof IExampleItem];\n};\n\nconst exampleItems: IExampleItem[] = createListItems(ITEMS_COUNT).map((item: IExampleItem) => {\n  const randomFileType = randomFileIcon();\n  return { ...item, thumbnail: randomFileType.url };\n});\n\nexport const ShimmerApplicationExample: React.FunctionComponent = () => {\n  const { current: state } = React.useRef<IShimmerApplicationExampleState>({\n    lastIntervalId: 0,\n    visibleCount: 0,\n  });\n\n  const [items, setItems] = React.useState<(IExampleItem | null)[] | undefined>(undefined);\n\n  const shimmerColumns: IColumn[] = useConst(() => {\n    const currentItems = createListItems(1);\n    const columns: IColumn[] = buildColumns(currentItems);\n    for (const column of columns) {\n      if (column.key === 'thumbnail') {\n        column.name = 'FileType';\n        column.minWidth = 16;\n        column.maxWidth = 16;\n        column.isIconOnly = true;\n        column.iconName = 'Page';\n        break;\n      }\n    }\n    return columns;\n  });\n\n  const { setInterval, clearInterval } = useSetInterval();\n\n  const loadMoreItems = (): void => {\n    state.visibleCount = Math.min(exampleItems.length, state.visibleCount + 2);\n\n    setItems(exampleItems.map((current, index) => (index < state.visibleCount ? current : null)) as IExampleItem[]);\n  };\n\n  const onLoadData = useConstCallback((ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\n    state.visibleCount = 0;\n    if (checked) {\n      loadMoreItems();\n      state.lastIntervalId = setInterval(loadMoreItems, INTERVAL_DELAY);\n    } else {\n      setItems(undefined);\n      clearInterval(state.lastIntervalId);\n    }\n  });\n\n  return (\n    <>\n      <Toggle\n        style={toggleStyle}\n        label=\"Toggle to load content\"\n        onChange={onLoadData}\n        onText=\"Content\"\n        offText=\"Shimmer\"\n      />\n      <div>\n        <ShimmeredDetailsList\n          setKey=\"items\"\n          items={items || []}\n          columns={shimmerColumns}\n          selectionMode={SelectionMode.none}\n          onRenderItemColumn={onRenderItemColumn}\n          enableShimmer={!items}\n          ariaLabelForShimmer=\"Content is being fetched\"\n          ariaLabelForGrid=\"Item details\"\n          listProps={shimmeredDetailsListProps}\n        />\n      </div>\n    </>\n  );\n};\n"]}
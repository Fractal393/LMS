{"version":3,"file":"Selection.Basic.Example.js","sourceRoot":"../src/","sources":["utilities/selection/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAwB,UAAU,EAAE,MAAM,uCAAuC,CAAC;AACzF,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,6CAA6C,CAAC;AAC/E,OAAO,EAAc,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AAC3G,OAAO,EAAgB,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACvE,OAAO,EAAa,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAC/E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AASjE,IAAM,YAAY,GAAc;IAC9B,OAAO,EAAE,cAAc;IACvB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,YAAY;IACvB,aAAa,EAAE,KAAK;IACpB,UAAU,EAAE,MAAM;IAClB,eAAe,EAAE,aAAa;IAC9B,MAAM,EAAE,MAAM;CACf,CAAC;AACF,IAAM,UAAU,GAAG,cAAc,CAAC;IAChC,IAAI,EAAE;QACJ,SAAS,EAAE;YACT,SAAS,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE;SAClC;KACF;IACD,0CAA0C;IAC1C,KAAK,EAAE,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;IAC9C,IAAI,EAAE;QACJ,YAAY;QACZ;YACE,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,CAAC;YACV,UAAU,EAAE,MAAM;SACnB;KACF;CACF,CAAC,CAAC;AAEH,IAAM,SAAS,GAAG,UAAC,IAAkB;IACnC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,IAAM,eAAe,GAAG,UAAC,IAAkB;IACzC,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,IAAM,cAAc;IAClB,GAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAG,MAAM;IAC3C,GAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,IAAG,eAAe;IACtD,GAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAG,cAAc;OACxD,CAAC;AACF,IAAM,mBAAmB,GAAG;IAC1B,GAAG,EAAE,WAAW;IAChB,MAAM,EAAE,4BAA4B;CACrC,CAAC;AAEF,IAAM,UAAU,GAAG,GAAG,CAAC;AAEvB,IAAM,oBAAoB,GAAwD,UAChF,KAAiC;IAEzB,IAAA,iBAAI,EAAE,2BAAS,EAAE,2BAAS,CAAW;IAC7C,IAAI,UAAU,GAAG,KAAK,CAAC;IAEvB,IAAI,SAAS,IAAI,SAAS,KAAK,SAAS,EAAE;QACxC,UAAU,GAAG,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;KACnD;IAED,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI,qDAA0C,SAAS;QAC/E,SAAS,IAAI,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,IAAI,CACtF,6BAAK,SAAS,EAAE,UAAU,CAAC,KAAK;YAC9B,oBAAC,KAAK,IAAC,OAAO,EAAE,UAAU,GAAI,CAC1B,CACP;QACD,8BAAM,SAAS,EAAE,UAAU,CAAC,IAAI,IAAG,IAAI,CAAC,IAAI,CAAQ;QACpD,2BAAG,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAC,kBAAkB,EAAC,MAAM,EAAC,QAAQ,iCAElE;QACJ,2BAAG,SAAS,EAAE,UAAU,CAAC,IAAI,iCAAwB,IAAI,EAAC,kBAAkB,EAAC,MAAM,EAAC,QAAQ,8BAExF,CACA,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,qBAAqB,GAA4B;IACtD,IAAA,0BAAqF,EAApF,0BAAkB,EAAE,6BAAgE,CAAC;IACtF,IAAA,2CAA0E,EAAzE,qBAAa,EAAE,wBAA0D,CAAC;IACjF,IAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IACrC,IAAM,KAAK,GAAG,QAAQ,CAAiB,cAAM,OAAA,eAAe,CAAC,UAAU,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAC1E,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAC7B;QACE,OAAA,IAAI,SAAS,CAAC;YACZ,aAAa,EAAE,kBAAkB,KAAK,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS;YAC5E,aAAa,eAAA;YACb,kBAAkB,EAAE,WAAW;YAC/B,KAAK,OAAA;SACN,CAAC;IALF,CAKE,EACJ,CAAC,kBAAkB,EAAE,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CACxD,CAAC;IAEF,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAChC,cAAM,OAAA;QACJ;YACE,GAAG,EAAE,eAAe;YACpB,IAAI,EAAE,kBAAkB,GAAG,cAAc,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACvE,YAAY,EAAE;gBACZ,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAC,IAAgC,IAAK,OAAA,CAAC;oBAC5E,GAAG,EAAE,IAAI;oBACT,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC;oBAC1B,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,aAAa,KAAK,aAAa,CAAC,IAAI,CAAC;oBAC9C,OAAO,EAAE,cAAM,OAAA,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAArC,CAAqC;iBACrD,CAAC,EAN2E,CAM3E,CAAC;aACJ;SACF;QACD;YACE,GAAG,EAAE,gBAAgB;YACrB,IAAI,EAAE,wBAAwB,GAAG,kBAAkB;YACnD,YAAY,EAAE;gBACZ,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,UAAC,QAA0C,IAAK,OAAA,CAAC;oBAC3F,GAAG,EAAE,QAAQ;oBACb,IAAI,EAAE,mBAAmB,CAAC,QAAQ,CAAC;oBACnC,OAAO,EAAE,kBAAkB,KAAK,QAAQ;oBACxC,OAAO,EAAE,cAAM,OAAA,qBAAqB,CAAC,QAAQ,CAAC,EAA/B,CAA+B;iBAC/C,CAAC,EAL0F,CAK1F,CAAC;aACJ;SACF;QACD;YACE,GAAG,EAAE,WAAW;YAChB,IAAI,EAAE,mBAAmB;YACzB,SAAS,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE;YACpC,OAAO,EAAE,cAAM,OAAA,SAAS,CAAC,iBAAiB,EAAE,EAA7B,CAA6B;YAC5C,QAAQ,EAAE,aAAa,KAAK,aAAa,CAAC,QAAQ;SACnD;KACF,EAjCK,CAiCL,EACD,CAAC,aAAa,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAC/C,CAAC;IAEF,OAAO,CACL;QACE,oBAAC,UAAU,IAAC,KAAK,EAAE,YAAY,GAAI;QACnC,oBAAC,gBAAgB,IAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,IAAI,KAAK,aAAa,CAAC,QAAQ;YAC1F,oBAAC,aAAa,IAAC,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,IAC1D,KAAK,CAAC,GAAG,CAAC,UAAC,IAAkB,EAAE,KAAa,IAAK,OAAA,CAChD,oBAAC,oBAAoB,IAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,GAAI,CAC5F,EAFiD,CAEjD,CAAC,CACY,CACC,CACf,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { ICommandBarItemProps, CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { Check } from 'office-ui-fabric-react/lib/Check';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { ISelection, Selection, SelectionMode, SelectionZone } from 'office-ui-fabric-react/lib/Selection';\nimport { IExampleItem, createListItems } from '@uifabric/example-data';\nimport { IRawStyle, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { useConst, useForceUpdate } from '@uifabric/react-hooks';\n\ninterface ISelectionItemExampleProps {\n  item: IExampleItem;\n  itemIndex?: number;\n  selection?: ISelection;\n  selectionMode?: SelectionMode;\n}\n\nconst commonStyles: IRawStyle = {\n  display: 'inline-block',\n  cursor: 'default',\n  boxSizing: 'border-box',\n  verticalAlign: 'top',\n  background: 'none',\n  backgroundColor: 'transparent',\n  border: 'none',\n};\nconst classNames = mergeStyleSets({\n  item: {\n    selectors: {\n      '&:hover': { background: '#eee' },\n    },\n  },\n  // Overwrites the default style for Button\n  check: [commonStyles, { padding: '11px 8px' }],\n  cell: [\n    commonStyles,\n    {\n      overflow: 'hidden',\n      height: 36,\n      padding: 8,\n      userSelect: 'none',\n    },\n  ],\n});\n\nconst alertItem = (item: IExampleItem): void => {\n  alert('item invoked: ' + item.name);\n};\n\nconst startsWithVowel = (item: IExampleItem): boolean => {\n  return /^[aeiou]/.test(item.name || '');\n};\n\nconst selectionModes = {\n  [SelectionMode[SelectionMode.none]]: 'None',\n  [SelectionMode[SelectionMode.single]]: 'Single select',\n  [SelectionMode[SelectionMode.multiple]]: 'Multi select',\n};\nconst selectableItemTypes = {\n  all: 'All items',\n  vowels: 'Names starting with vowels',\n};\n\nconst ITEM_COUNT = 100;\n\nconst SelectionItemExample: React.FunctionComponent<ISelectionItemExampleProps> = (\n  props: ISelectionItemExampleProps,\n) => {\n  const { item, itemIndex, selection } = props;\n  let isSelected = false;\n\n  if (selection && itemIndex !== undefined) {\n    isSelected = selection.isIndexSelected(itemIndex);\n  }\n\n  return (\n    <div className={classNames.item} data-is-focusable data-selection-index={itemIndex}>\n      {selection && selection.canSelectItem(item) && selection.mode !== SelectionMode.none && (\n        <div className={classNames.check} data-is-focusable data-selection-toggle>\n          <Check checked={isSelected} />\n        </div>\n      )}\n      <span className={classNames.cell}>{item.name}</span>\n      <a className={classNames.cell} href=\"https://bing.com\" target=\"_blank\">\n        Link that avoids selection\n      </a>\n      <a className={classNames.cell} data-selection-select href=\"https://bing.com\" target=\"_blank\">\n        Link that selects first\n      </a>\n    </div>\n  );\n};\n\nexport const SelectionBasicExample: React.FunctionComponent = () => {\n  const [selectableItemType, setSelectableItemType] = React.useState<'all' | 'vowels'>('all');\n  const [selectionMode, setSelectionMode] = React.useState(SelectionMode.multiple);\n  const forceUpdate = useForceUpdate();\n  const items = useConst<IExampleItem[]>(() => createListItems(ITEM_COUNT));\n  const selection = React.useMemo(\n    () =>\n      new Selection({\n        canSelectItem: selectableItemType === 'vowels' ? startsWithVowel : undefined,\n        selectionMode,\n        onSelectionChanged: forceUpdate,\n        items,\n      }),\n    [selectableItemType, selectionMode, forceUpdate, items],\n  );\n\n  const commandItems = React.useMemo<ICommandBarItemProps[]>(\n    () => [\n      {\n        key: 'selectionMode',\n        text: 'Selection mode: ' + selectionModes[SelectionMode[selectionMode]],\n        subMenuProps: {\n          items: Object.keys(selectionModes).map((mode: keyof typeof SelectionMode) => ({\n            key: mode,\n            name: selectionModes[mode],\n            canCheck: true,\n            checked: selectionMode === SelectionMode[mode],\n            onClick: () => setSelectionMode(SelectionMode[mode]),\n          })),\n        },\n      },\n      {\n        key: 'allowCanSelect',\n        text: 'Selectable item type: ' + selectableItemType,\n        subMenuProps: {\n          items: Object.keys(selectableItemTypes).map((itemType: keyof typeof selectableItemTypes) => ({\n            key: itemType,\n            name: selectableItemTypes[itemType],\n            checked: selectableItemType === itemType,\n            onClick: () => setSelectableItemType(itemType),\n          })),\n        },\n      },\n      {\n        key: 'selectAll',\n        text: 'Toggle select all',\n        iconProps: { iconName: 'CheckMark' },\n        onClick: () => selection.toggleAllSelected(),\n        disabled: selectionMode !== SelectionMode.multiple,\n      },\n    ],\n    [selectionMode, selection, selectableItemType],\n  );\n\n  return (\n    <div>\n      <CommandBar items={commandItems} />\n      <MarqueeSelection selection={selection} isEnabled={selection.mode === SelectionMode.multiple}>\n        <SelectionZone selection={selection} onItemInvoked={alertItem}>\n          {items.map((item: IExampleItem, index: number) => (\n            <SelectionItemExample key={item.key} item={item} itemIndex={index} selection={selection} />\n          ))}\n        </SelectionZone>\n      </MarqueeSelection>\n    </div>\n  );\n};\n"]}
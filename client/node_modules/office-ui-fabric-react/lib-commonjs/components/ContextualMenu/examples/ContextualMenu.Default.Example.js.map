{"version":3,"file":"ContextualMenu.Default.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Default.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,4EAImD;AACnD,4DAAkE;AAErD,QAAA,4BAA4B,GAA4B;IACnE,OAAO,oBAAC,sBAAa,IAAC,IAAI,EAAC,0BAA0B,EAAC,SAAS,EAAE,SAAS,GAAI,CAAC;AACjF,CAAC,CAAC;AAEF,IAAM,SAAS,GAA0B;IACvC;QACE,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B;KAC1C;IACD;QACE,GAAG,EAAE,WAAW;QAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;KACzC;IACD;QACE,GAAG,EAAE,QAAQ;QACb,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B;KAC7C;IACD;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B;KAC3C;IACD;QACE,GAAG,EAAE,YAAY;QACjB,IAAI,EAAE,YAAY;QAClB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC;KACjD;IACD;QACE,GAAG,EAAE,cAAc;QACnB,IAAI,EAAE,kBAAkB;QACxB,IAAI,EAAE,iBAAiB;KACxB;IACD;QACE,GAAG,EAAE,gBAAgB;QACrB,IAAI,EAAE,iBAAiB;QACvB,IAAI,EAAE,iBAAiB;QACvB,MAAM,EAAE,QAAQ;KACjB;IACD;QACE,GAAG,EAAE,iBAAiB;QACtB,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,iBAAiB;QACvB,OAAO,EAAE,UAAC,EAA2D;YACnE,KAAK,CAAC,cAAc,CAAC,CAAC;YACtB,EAAE,CAAC,cAAc,EAAE,CAAC;QACtB,CAAC;QACD,MAAM,EAAE,QAAQ;KACjB;IACD;QACE,GAAG,EAAE,UAAU;QACf,IAAI,EAAE,eAAe;QACrB,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,EAAvD,CAAuD;KACvE;CACF,CAAC;AAEF,IAAM,SAAS,GAAyB;IACtC,kBAAkB,EAAE,IAAI;IACxB,KAAK,EAAE,SAAS;CACjB,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  ContextualMenuItemType,\n  IContextualMenuProps,\n  IContextualMenuItem,\n} from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nexport const ContextualMenuDefaultExample: React.FunctionComponent = () => {\n  return <DefaultButton text=\"Click for ContextualMenu\" menuProps={menuProps} />;\n};\n\nconst menuItems: IContextualMenuItem[] = [\n  {\n    key: 'newItem',\n    text: 'New',\n    onClick: () => console.log('New clicked'),\n  },\n  {\n    key: 'divider_1',\n    itemType: ContextualMenuItemType.Divider,\n  },\n  {\n    key: 'rename',\n    text: 'Rename',\n    onClick: () => console.log('Rename clicked'),\n  },\n  {\n    key: 'edit',\n    text: 'Edit',\n    onClick: () => console.log('Edit clicked'),\n  },\n  {\n    key: 'properties',\n    text: 'Properties',\n    onClick: () => console.log('Properties clicked'),\n  },\n  {\n    key: 'linkNoTarget',\n    text: 'Link same window',\n    href: 'http://bing.com',\n  },\n  {\n    key: 'linkWithTarget',\n    text: 'Link new window',\n    href: 'http://bing.com',\n    target: '_blank',\n  },\n  {\n    key: 'linkWithOnClick',\n    name: 'Link click',\n    href: 'http://bing.com',\n    onClick: (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      alert('Link clicked');\n      ev.preventDefault();\n    },\n    target: '_blank',\n  },\n  {\n    key: 'disabled',\n    text: 'Disabled item',\n    disabled: true,\n    onClick: () => console.error('Disabled item should not be clickable.'),\n  },\n];\n\nconst menuProps: IContextualMenuProps = {\n  shouldFocusOnMount: true,\n  items: menuItems,\n};\n"]}
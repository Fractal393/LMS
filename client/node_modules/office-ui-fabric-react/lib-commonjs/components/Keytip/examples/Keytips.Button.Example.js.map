{"version":3,"file":"Keytips.Button.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, CompoundButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { keytipMap } from 'office-ui-fabric-react/lib/components/Keytip/examples/KeytipSetup';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { IContextualMenuProps } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst stackTokens: IStackTokens = { childrenGap: 20 };\nconst marginBottom = { root: { marginBottom: 28 } };\nconst splitButtonStyles: Partial<IButtonStyles> = { splitButtonContainer: { height: 32 } };\nconst splitButtonProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'splitButtonMenuButton1',\n      text: 'Split Button Menu Item 1',\n      keytipProps: keytipMap.SplitButtonMenuItem1,\n    },\n    {\n      key: 'splitButtonMenuButton2',\n      text: 'Split Button Menu Item 2',\n      keytipProps: keytipMap.SplitButtonMenuItem2,\n    },\n  ],\n};\nconst buttonProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'buttonMenuItem1',\n      text: 'Menu Item 1',\n      keytipProps: keytipMap.ButtonMenuItem1,\n    },\n    {\n      key: 'buttonMenuItem2',\n      text: 'Menu Item 2',\n      keytipProps: keytipMap.ButtonMenuItem2,\n    },\n  ],\n};\n\nconst log = (text: string): (() => void) => () => console.log(text);\n\nexport const KeytipsButtonExample: React.FunctionComponent = () => {\n  const [btnDisabled, { toggle: toggleBtnDisabled }] = useBoolean(false);\n  return (\n    <div>\n      <p>When multiple Keytips start with the same character, typing that character will filter the visible keytips.</p>\n      <Stack horizontal tokens={stackTokens}>\n        <DefaultButton keytipProps={keytipMap.Button} text=\"Button\" onClick={log('Button')} />\n        <CompoundButton\n          styles={marginBottom}\n          keytipProps={keytipMap.CompoundButton}\n          text=\"Compound Button\"\n          secondaryText={'With a Keytip'}\n          onClick={log('Compound Button')}\n        />\n        <DefaultButton\n          keytipProps={keytipMap.ButtonWithMenu}\n          text=\"Button with Menu\"\n          menuProps={buttonProps}\n          onClick={log('Button with Menu')}\n        />\n        <DefaultButton\n          styles={splitButtonStyles}\n          keytipProps={keytipMap.SplitButton}\n          text=\"Split Button\"\n          split\n          onClick={log('Split Button')}\n          menuProps={splitButtonProps}\n        />\n        <DefaultButton text=\"I do not have a keytip\" />\n      </Stack>\n      <p>\n        The 'offset' prop can be used to position the keytip a set distance from the top-left corner of the element.\n      </p>\n      <DefaultButton styles={marginBottom} keytipProps={keytipMap.ButtonOffset} text=\"Button keytip offset 10x10\" />\n      <p>When a Keytip's corresponding component is disabled, the keytip still appears but cannot be triggered.</p>\n      <Toggle\n        onText={'Enabled'}\n        offText={'Disabled'}\n        defaultChecked={!btnDisabled}\n        onChange={toggleBtnDisabled}\n        onClick={log('Button')}\n      />\n      <DefaultButton\n        keytipProps={keytipMap.DisabledButton}\n        disabled={btnDisabled}\n        text={(btnDisabled ? 'Disabled' : 'Enabled') + ' Button'}\n        onClick={log('Disabled Button')}\n      />\n    </div>\n  );\n};\n"]}
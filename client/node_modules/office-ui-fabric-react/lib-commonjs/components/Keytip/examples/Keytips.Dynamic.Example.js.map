{"version":3,"file":"Keytips.Dynamic.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Dynamic.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,4DAAkE;AAElE,IAAM,oBAAoB,GAAG;IAC3B,OAAO,EAAE,KAAK;IACd,YAAY,EAAE,CAAC,KAAK,CAAC;IACrB,kBAAkB,EAAE,IAAI;CACzB,CAAC;AAEF,IAAM,oBAAoB,GAAG;IAC3B,OAAO,EAAE,KAAK;IACd,YAAY,EAAE,CAAC,KAAK,CAAC;IACrB,kBAAkB,EAAE,IAAI;CACzB,CAAC;AAEW,QAAA,qBAAqB,GAA4B;IACtD,IAAA,+BAAwD,EAAvD,kBAAU,EAAE,qBAA2C,CAAC;IAC/D,IAAM,aAAa,GAAG,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IAChE,IAAM,OAAO,GAAG,UAAC,EAAwB,IAAK,OAAA,aAAa,CAAE,EAAE,CAAC,MAAkB,CAAC,EAAE,CAAC,EAAxC,CAAwC,CAAC;IAEvF,IAAM,sBAAsB,GAAG,KAAK,CAAC,OAAO,CAC1C,cAAM,OAAA,CAAC;QACL,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC;KACrC,CAAC,EAHI,CAGJ,EACF,CAAC,aAAa,CAAC,CAChB,CAAC;IAEF,OAAO,CACL;QACE,0fAMI;QACJ,oBAAC,sBAAa,IACZ,EAAE,EAAC,UAAU,EACb,IAAI,EAAC,UAAU;YACf,6CAA6C;YAC7C,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,oBAAoB,GACjC;QACF,oBAAC,sBAAa,IACZ,EAAE,EAAC,UAAU,EACb,IAAI,EAAC,UAAU;YACf,6CAA6C;YAC7C,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,oBAAoB,GACjC;QACF;YACE,oBAAC,sBAAa,IAAC,IAAI,EAAE,8BAA8B,GAAG,UAAU,EAAE,WAAW,EAAE,sBAAsB,GAAI,CACrG,CACL,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nconst buttonOneKeytipProps = {\n  content: 'GG1',\n  keySequences: ['gg1'],\n  hasDynamicChildren: true,\n};\n\nconst buttonTwoKeytipProps = {\n  content: 'GG2',\n  keySequences: ['gg2'],\n  hasDynamicChildren: true,\n};\n\nexport const KeytipsDynamicExample: React.FunctionComponent = () => {\n  const [currButton, setCurrButton] = React.useState('Button 1');\n  const startSequence = currButton === 'Button 1' ? 'gg1' : 'gg2';\n  const onClick = (ev: React.MouseEvent<{}>) => setCurrButton((ev.target as Element).id);\n\n  const buttonThreeKeytipProps = React.useMemo(\n    () => ({\n      content: 'GG3',\n      keySequences: [startSequence, 'gg3'],\n    }),\n    [startSequence],\n  );\n\n  return (\n    <>\n      <p>\n        There is another special case where controls on the page will change other controls down the chain in the keytip\n        sequence. Take the case below; clicking Button 1 and Button 2 will update the text of Button3. Triggering the\n        keytip for Button 1 or Button 2 will then also change the keytip sequence of Button 3, because it can be both a\n        child of Button 1 or Button 2. For this to work fully, Button 1 and Button 2 should have `hasDynamicChildren:\n        true` in their keytip props\n      </p>\n      <DefaultButton\n        id=\"Button 1\"\n        text=\"Button 1\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n        keytipProps={buttonOneKeytipProps}\n      />\n      <DefaultButton\n        id=\"Button 2\"\n        text=\"Button 2\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n        keytipProps={buttonTwoKeytipProps}\n      />\n      <div>\n        <DefaultButton text={'Button 3, active button is: ' + currButton} keytipProps={buttonThreeKeytipProps} />\n      </div>\n    </>\n  );\n};\n"]}
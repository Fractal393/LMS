{"version":3,"file":"TextField.Controlled.Example.js","sourceRoot":"../src/","sources":["components/TextField/examples/TextField.Controlled.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,kEAAmF;AACnF,0DAAyD;AACzD,qDAAyD;AAEzD,IAAM,eAAe,GAA8B,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;AAClF,IAAM,qBAAqB,GAA8B,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;AACxF,IAAM,WAAW,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AAE3B,QAAA,0BAA0B,GAA4B;IAC3D,IAAA,uBAAkE,EAAjE,2BAAmB,EAAE,8BAA4C,CAAC;IACnE,IAAA,uBAAoE,EAAnE,4BAAoB,EAAE,+BAA6C,CAAC;IAC3E,IAAM,2BAA2B,GAAG,8BAAgB,CAClD,UAAC,KAA8D,EAAE,QAAiB;QAChF,sBAAsB,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;IACzC,CAAC,CACF,CAAC;IACF,IAAM,4BAA4B,GAAG,8BAAgB,CACnD,UAAC,KAA8D,EAAE,QAAiB;QAChF,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YACrC,uBAAuB,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;SACzC;IACH,CAAC,CACF,CAAC;IACF,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW;QACxB,oBAAC,qBAAS,IACR,KAAK,EAAC,4BAA4B,EAClC,KAAK,EAAE,mBAAmB,EAC1B,QAAQ,EAAE,2BAA2B,EACrC,MAAM,EAAE,eAAe,GACvB;QACF,oBAAC,qBAAS,IACR,KAAK,EAAC,oDAAoD,EAC1D,KAAK,EAAE,oBAAoB,EAC3B,QAAQ,EAAE,4BAA4B,EACtC,MAAM,EAAE,qBAAqB,GAC7B,CACI,CACT,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { useConstCallback } from '@uifabric/react-hooks';\n\nconst textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300 } };\nconst narrowTextFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 100 } };\nconst stackTokens = { childrenGap: 15 };\n\nexport const TextFieldControlledExample: React.FunctionComponent = () => {\n  const [firstTextFieldValue, setFirstTextFieldValue] = React.useState('');\n  const [secondTextFieldValue, setSecondTextFieldValue] = React.useState('');\n  const onChangeFirstTextFieldValue = useConstCallback(\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n      setFirstTextFieldValue(newValue || '');\n    },\n  );\n  const onChangeSecondTextFieldValue = useConstCallback(\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n      if (!newValue || newValue.length <= 5) {\n        setSecondTextFieldValue(newValue || '');\n      }\n    },\n  );\n  return (\n    <Stack tokens={stackTokens}>\n      <TextField\n        label=\"Basic controlled TextField\"\n        value={firstTextFieldValue}\n        onChange={onChangeFirstTextFieldValue}\n        styles={textFieldStyles}\n      />\n      <TextField\n        label=\"Controlled TextField limiting length of value to 5\"\n        value={secondTextFieldValue}\n        onChange={onChangeSecondTextFieldValue}\n        styles={narrowTextFieldStyles}\n      />\n    </Stack>\n  );\n};\n"]}
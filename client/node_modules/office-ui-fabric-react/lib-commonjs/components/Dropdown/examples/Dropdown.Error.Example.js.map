{"version":3,"file":"Dropdown.Error.Example.js","sourceRoot":"../src/","sources":["components/Dropdown/examples/Dropdown.Error.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,gEAAgF;AAChF,0DAAuE;AACvE,4DAA2D;AAC3D,qDAAmD;AAEnD,IAAM,cAAc,GAA6B,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;AAErG,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AAEtD,IAAM,2BAA2B,GAAG;IAClC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;CAC/B,CAAC;AAEW,QAAA,oBAAoB,GAA4B;IACrD,IAAA,oCAA4D,EAA3D,iBAAS,EAAI,8BAA8C,CAAC;IACnE,OAAO,CACL,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,WAAW,EAAE,aAAa,EAAC,OAAO;QAC1D,oBAAC,eAAM,IAAC,KAAK,EAAC,oBAAoB,EAAC,MAAM,EAAC,KAAK,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,GAAI;QAC9G,oBAAC,mBAAQ,IACP,WAAW,EAAC,kBAAkB,EAC9B,KAAK,EAAC,6BAA6B,EACnC,OAAO,EAAE,2BAA2B,EACpC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,SAAS,EAClE,MAAM,EAAE,cAAc,GACtB,CACI,CACT,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 300 }, root: { height: 100 } };\n\nconst stackTokens: IStackTokens = { childrenGap: 30 };\n\nconst DropdownErrorExampleOptions = [\n  { key: 'A', text: 'Option a' },\n  { key: 'B', text: 'Option b' },\n  { key: 'C', text: 'Option c' },\n  { key: 'D', text: 'Option d' },\n  { key: 'E', text: 'Option e' },\n];\n\nexport const DropdownErrorExample: React.FunctionComponent = () => {\n  const [showError, { toggle: toggleShowError }] = useBoolean(false);\n  return (\n    <Stack horizontal tokens={stackTokens} verticalAlign=\"start\">\n      <Toggle label=\"Show error message\" onText=\"Yes\" offText=\"No\" checked={showError} onChange={toggleShowError} />\n      <Dropdown\n        placeholder=\"Select an option\"\n        label=\"Dropdown with error message\"\n        options={DropdownErrorExampleOptions}\n        errorMessage={showError ? 'This dropdown has an error' : undefined}\n        styles={dropdownStyles}\n      />\n    </Stack>\n  );\n};\n"]}
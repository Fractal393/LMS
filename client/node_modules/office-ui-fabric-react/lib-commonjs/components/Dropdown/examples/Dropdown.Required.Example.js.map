{"version":3,"file":"Dropdown.Required.Example.js","sourceRoot":"../src/","sources":["components/Dropdown/examples/Dropdown.Required.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,gEAA0E;AAC1E,4DAAkE;AAClE,0DAAuE;AAEvE,IAAM,cAAc,GAAG,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;AAEvC,QAAA,uBAAuB,GAA4B;IAC9D,IAAM,WAAW,GAAG,KAAK,CAAC,SAAS,EAAa,CAAC;IACjD,IAAM,UAAU,GAAG,cAAM,OAAA,WAAW,CAAC,OAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAhC,CAAgC,CAAC;IAE1D,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IAEtD,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW,EAAE,aAAa,EAAC,KAAK;QAC7C,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,WAAW,EAAE,aAAa,EAAC,KAAK;YACxD,oBAAC,mBAAQ,IACP,YAAY,EAAE,WAAW,EACzB,WAAW,EAAC,kBAAkB,EAC9B,KAAK,EAAC,2BAA2B,EACjC,OAAO,EAAE;oBACP,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,gBAAgB,EAAE;oBACvD,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;oBAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;oBAC9C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;oBAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;iBAC/B,EACD,QAAQ,QACR,MAAM,EAAE,cAAc,GACtB;YACF,oBAAC,sBAAa,IACZ,IAAI,EAAC,WAAW;gBAChB,6CAA6C;gBAC7C,OAAO,EAAE,UAAU,GACnB,CACI;QACR,oBAAC,mBAAQ,IACP,WAAW,EAAC,wBAAwB,EACpC,SAAS,EAAC,2BAA2B,EACrC,OAAO,EAAE;gBACP,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,gBAAgB,EAAE;gBACvD,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;gBAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC9C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;gBAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;aAC/B,EACD,QAAQ,EAAE,IAAI,EACd,MAAM,EAAE,cAAc,GACtB,CACI,CACT,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdown } from 'office-ui-fabric-react/lib/Dropdown';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\n\nconst dropdownStyles = { dropdown: { width: 300 } };\n\nexport const DropdownRequiredExample: React.FunctionComponent = () => {\n  const dropdownRef = React.createRef<IDropdown>();\n  const onSetFocus = () => dropdownRef.current!.focus(true);\n\n  const stackTokens: IStackTokens = { childrenGap: 20 };\n\n  return (\n    <Stack tokens={stackTokens} verticalAlign=\"end\">\n      <Stack horizontal tokens={stackTokens} verticalAlign=\"end\">\n        <Dropdown\n          componentRef={dropdownRef}\n          placeholder=\"Select an option\"\n          label=\"Required dropdown example\"\n          options={[\n            { key: 'A', text: 'Option a', title: 'I am option a.' },\n            { key: 'B', text: 'Option b' },\n            { key: 'C', text: 'Option c', disabled: true },\n            { key: 'D', text: 'Option d' },\n            { key: 'E', text: 'Option e' },\n          ]}\n          required\n          styles={dropdownStyles}\n        />\n        <PrimaryButton\n          text=\"Set focus\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={onSetFocus}\n        />\n      </Stack>\n      <Dropdown\n        placeholder=\"Required with no label\"\n        ariaLabel=\"Required dropdown example\"\n        options={[\n          { key: 'A', text: 'Option a', title: 'I am option a.' },\n          { key: 'B', text: 'Option b' },\n          { key: 'C', text: 'Option c', disabled: true },\n          { key: 'D', text: 'Option d' },\n          { key: 'E', text: 'Option e' },\n        ]}\n        required={true}\n        styles={dropdownStyles}\n      />\n    </Stack>\n  );\n};\n"]}
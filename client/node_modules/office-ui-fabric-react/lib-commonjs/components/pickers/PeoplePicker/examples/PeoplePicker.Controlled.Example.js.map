{"version":3,"file":"PeoplePicker.Controlled.Example.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/examples/PeoplePicker.Controlled.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { IPersonaProps, Persona } from 'office-ui-fabric-react/lib/Persona';\nimport { IBasePickerSuggestionsProps, NormalPeoplePicker } from 'office-ui-fabric-react/lib/Pickers';\nimport { people } from '@uifabric/example-data';\n\nconst suggestionProps: IBasePickerSuggestionsProps = {\n  suggestionsHeaderText: 'Suggested People',\n  mostRecentlyUsedHeaderText: 'Suggested Contacts',\n  noResultsFoundText: 'No results found',\n  loadingText: 'Loading',\n  showRemoveButtons: true,\n  suggestionsAvailableAlertText: 'People Picker Suggestions available',\n  suggestionsContainerAriaLabel: 'Suggested contacts',\n};\n\nconst checkboxStyles = {\n  root: {\n    marginTop: 10,\n  },\n};\n\nconst defaultButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' } };\n\nexport const PeoplePickerControlledExample: React.FunctionComponent = () => {\n  const [currentSelectedItems, setCurrentSelectedItems] = React.useState<IPersonaProps[]>([]);\n  const [delayResults, setDelayResults] = React.useState(false);\n  const [isPickerDisabled, setIsPickerDisabled] = React.useState(false);\n  const [peopleList] = React.useState<IPersonaProps[]>(people);\n\n  const picker = React.useRef(null);\n\n  const onFilterChanged = (\n    filterText: string,\n    currentPersonas: IPersonaProps[],\n    limitResults?: number,\n  ): IPersonaProps[] | Promise<IPersonaProps[]> => {\n    if (filterText) {\n      let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\n\n      filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\n      filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\n      return filterPromise(filteredPersonas);\n    } else {\n      return [];\n    }\n  };\n\n  const filterPersonasByText = (filterText: string): IPersonaProps[] => {\n    return peopleList.filter(item => doesTextStartWith(item.text as string, filterText));\n  };\n\n  const filterPromise = (personasToReturn: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> => {\n    if (delayResults) {\n      return convertResultsToPromise(personasToReturn);\n    } else {\n      return personasToReturn;\n    }\n  };\n\n  const onItemsChange = (items: any[]): void => {\n    setCurrentSelectedItems(items);\n  };\n\n  const controlledItems = [];\n  for (let i = 0; i < 5; i++) {\n    const item = peopleList[i];\n    if (currentSelectedItems!.indexOf(item) === -1) {\n      controlledItems.push(peopleList[i]);\n    }\n  }\n\n  const onDisabledButtonClick = (): void => {\n    setIsPickerDisabled(!isPickerDisabled);\n  };\n\n  const onToggleDelayResultsChange = (): void => {\n    setDelayResults(!delayResults);\n  };\n\n  return (\n    <div>\n      <div>\n        <NormalPeoplePicker\n          // eslint-disable-next-line react/jsx-no-bind\n          onResolveSuggestions={onFilterChanged}\n          getTextFromItem={getTextFromItem}\n          pickerSuggestionsProps={suggestionProps}\n          className={'ms-PeoplePicker'}\n          key={'controlled'}\n          selectedItems={currentSelectedItems}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={onItemsChange}\n          inputProps={{\n            onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n            onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          }}\n          componentRef={picker}\n          resolveDelay={300}\n          disabled={isPickerDisabled}\n        />\n        <label> Click to Add a person </label>\n        {controlledItems.map((item, index) => (\n          <div key={index}>\n            <DefaultButton\n              styles={defaultButtonStyles}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setCurrentSelectedItems(currentSelectedItems.concat([item]))}\n            >\n              <Persona {...item} />\n            </DefaultButton>\n          </div>\n        ))}\n      </div>\n      <Checkbox\n        label=\"Disable People Picker\"\n        checked={isPickerDisabled}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onDisabledButtonClick}\n        styles={checkboxStyles}\n      />\n      <Checkbox\n        label=\"Delay Suggestion Results\"\n        defaultChecked={delayResults}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onToggleDelayResultsChange}\n        styles={checkboxStyles}\n      />\n    </div>\n  );\n};\n\nfunction doesTextStartWith(text: string, filterText: string): boolean {\n  return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n}\n\nfunction removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]) {\n  return personas.filter(persona => !listContainsPersona(persona, possibleDupes));\n}\n\nfunction listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\n  if (!personas || !personas.length || personas.length === 0) {\n    return false;\n  }\n  return personas.filter(item => item.text === persona.text).length > 0;\n}\n\nfunction convertResultsToPromise(results: IPersonaProps[]): Promise<IPersonaProps[]> {\n  return new Promise<IPersonaProps[]>((resolve, reject) => setTimeout(() => resolve(results), 2000));\n}\n\nfunction getTextFromItem(persona: IPersonaProps): string {\n  return persona.text as string;\n}\n"]}
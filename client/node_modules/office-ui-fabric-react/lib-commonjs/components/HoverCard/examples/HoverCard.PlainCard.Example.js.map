{"version":3,"file":"HoverCard.PlainCard.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.PlainCard.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,kEAAiG;AACjG,sEAA4F;AAC5F,uDAAuE;AACvE,0DAAmE;AACnE,4DAA2D;AAC3D,0DAAsE;AACtE,8DAAiE;AAEjE,IAAM,SAAS,GAAG,qBAAW,CAAC;IAC5B,SAAS,EAAE;QACT,SAAS,EAAE;YACT,cAAc,EAAE,WAAW;YAC3B,MAAM,EAAE,SAAS;SAClB;KACF;CACF,CAAC,CAAC;AACH,IAAM,KAAK,GAAmB,8BAAe,CAAC,EAAE,CAAC,CAAC;AAClD,IAAM,WAAW,GAAG;IAClB,OAAO,0BAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAC/B,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAA9E,CAA8E,CACzF,CAAC;AACJ,CAAC,CAAC;AACF,IAAM,OAAO,GAAc,WAAW,EAAE,CAAC;AACzC,IAAM,iBAAiB,GAAG,UAAC,IAAkB;IAC3C,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,IAAG,MAAI,0BAAkB,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,GAAK,CAAA,CAAC;IACvE,OAAO,oBAAC,aAAK,IAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,gBAAQ,CAAC,KAAK,GAAI,CAAC;AAC/F,CAAC,CAAC;AACF,IAAM,kBAAkB,GAAG,UAAC,IAAkB,EAAE,KAAa,EAAE,MAAe;IAC5E,IAAM,cAAc,GAAoB;QACtC,iBAAiB,EAAE,iBAAiB;QACpC,UAAU,EAAE,IAAI;KACjB,CAAC;IACF,IAAI,MAAM,CAAC,GAAG,KAAK,OAAO,EAAE;QAC1B,OAAO,CACL,oBAAC,qBAAS,IAAC,cAAc,EAAE,cAAc,EAAE,kBAAkB,QAAC,IAAI,EAAE,yBAAa,CAAC,KAAK;YACrF,6BAAK,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IACpD,IAAI,CAAC,KAAK,CACP,CACI,CACb,CAAC;KACH;IACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAyB,CAAC,CAAC;AAChD,CAAC,CAAC;AAEW,QAAA,yBAAyB,GAA4B;IAChE,OAAO,CACL,oBAAC,eAAM;QACL;;YACiB,uCAAY;mDACzB;QACJ,oBAAC,yBAAW,IAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,GAAI,CAClG,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { HoverCard, IPlainCardProps, HoverCardType } from 'office-ui-fabric-react/lib/HoverCard';\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { getColorFromString } from 'office-ui-fabric-react/lib/Color';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nconst itemClass = mergeStyles({\n  selectors: {\n    '&:hover': {\n      textDecoration: 'underline',\n      cursor: 'pointer',\n    },\n  },\n});\nconst items: IExampleItem[] = createListItems(10);\nconst buildColumn = (): IColumn[] => {\n  return buildColumns(items).filter(\n    column => column.name === 'color' || column.name === 'width' || column.name === 'height',\n  );\n};\nconst columns: IColumn[] = buildColumn();\nconst onRenderPlainCard = (item: IExampleItem): JSX.Element => {\n  const src = item.thumbnail + `/${getColorFromString(item.color)!.hex}`;\n  return <Image src={src} width={item.width} height={item.height} imageFit={ImageFit.cover} />;\n};\nconst onRenderItemColumn = (item: IExampleItem, index: number, column: IColumn): JSX.Element | React.ReactText => {\n  const plainCardProps: IPlainCardProps = {\n    onRenderPlainCard: onRenderPlainCard,\n    renderData: item,\n  };\n  if (column.key === 'color') {\n    return (\n      <HoverCard plainCardProps={plainCardProps} instantOpenOnClick type={HoverCardType.plain}>\n        <div className={itemClass} style={{ color: item.color }}>\n          {item.color}\n        </div>\n      </HoverCard>\n    );\n  }\n  return item[column.key as keyof IExampleItem];\n};\n\nexport const HoverCardPlainCardExample: React.FunctionComponent = () => {\n  return (\n    <Fabric>\n      <p>\n        Hover over the <i>color</i> cell of a row item to see the card.\n      </p>\n      <DetailsList setKey=\"hoverSet\" items={items} columns={columns} onRenderItemColumn={onRenderItemColumn} />\n    </Fabric>\n  );\n};\n"]}
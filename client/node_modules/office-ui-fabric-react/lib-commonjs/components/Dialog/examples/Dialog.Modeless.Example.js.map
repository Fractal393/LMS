{"version":3,"file":"Dialog.Modeless.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.Modeless.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,4DAAqF;AACrF,4DAAiF;AACjF,4DAA2D;AAC3D,4EAA2E;AAC3E,qDAAmD;AAEnD,IAAM,gBAAgB,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;AACrD,IAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE,MAAM;IACxB,iBAAiB,EAAE,OAAO;IAC1B,IAAI,EAAE,+BAAc;CACrB,CAAC;AACF,IAAM,kBAAkB,GAAG;IACzB,IAAI,EAAE,mBAAU,CAAC,MAAM;IACvB,KAAK,EAAE,iBAAiB;IACxB,OAAO,EAAE,qDAAqD;CAC/D,CAAC;AAEW,QAAA,qBAAqB,GAA4B;IACtD,IAAA,mCAA6D,EAA5D,kBAAU,EAAI,+BAA8C,CAAC;IAC9D,IAAA,oCAAgE,EAA/D,mBAAW,EAAI,gCAAgD,CAAC;IACvE,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAC9B,cAAM,OAAA,CAAC;QACL,MAAM,EAAE,gBAAgB;QACxB,UAAU,EAAE,IAAI;QAChB,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS;KACnD,CAAC,EAJI,CAIJ,EACF,CAAC,WAAW,CAAC,CACd,CAAC;IACF,OAAO,CACL;QACE,+BAAO,IAAI,EAAC,MAAM,EAAC,WAAW,EAAC,qBAAqB,GAAG;QACvD;YACE,oBAAC,eAAM,IAAC,KAAK,EAAC,cAAc,EAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,UAAU,GAAI;YACzG,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,aAAa,GAAG;YACvG,oBAAC,sBAAa,IAAC,aAAa,EAAC,0BAA0B,EAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,cAAc,GAAG,CACrG;QACN,oBAAC,eAAM,IACL,MAAM,EAAE,UAAU,EAClB,SAAS,EAAE,gBAAgB,EAC3B,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,UAAU;YAEtB,oBAAC,qBAAY;gBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,MAAM,GAAG;gBACxD,oBAAC,sBAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,YAAY,GAAG,CACjD,CACR,CACR,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst modalPropsStyles = { main: { maxWidth: 450 } };\nconst dragOptions = {\n  moveMenuItemText: 'Move',\n  closeMenuItemText: 'Close',\n  menu: ContextualMenu,\n};\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Missing Subject',\n  subText: 'Do you want to send this message without a subject?',\n};\n\nexport const DialogModelessExample: React.FunctionComponent = () => {\n  const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n  const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false);\n  const modalProps = React.useMemo(\n    () => ({\n      styles: modalPropsStyles,\n      isModeless: true,\n      dragOptions: isDraggable ? dragOptions : undefined,\n    }),\n    [isDraggable],\n  );\n  return (\n    <>\n      <input type=\"text\" placeholder=\"Focus Me While Open\" />\n      <div>\n        <Toggle label=\"Is draggable\" onChange={toggleIsDraggable} checked={isDraggable} disabled={!hideDialog} />\n        <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={toggleHideDialog} text=\"Open Dialog\" />\n        <DefaultButton secondaryText=\"Closes the Sample Dialog\" onClick={toggleHideDialog} text=\"Close Dialog\" />\n      </div>\n      <Dialog\n        hidden={hideDialog}\n        onDismiss={toggleHideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={toggleHideDialog} text=\"Send\" />\n          <DefaultButton onClick={toggleHideDialog} text=\"Don't send\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n"]}
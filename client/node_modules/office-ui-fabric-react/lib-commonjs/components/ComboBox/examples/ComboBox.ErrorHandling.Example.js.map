{"version":3,"file":"ComboBox.ErrorHandling.Example.js","sourceRoot":"../src/","sources":["components/ComboBox/examples/ComboBox.ErrorHandling.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,0DAK0C;AAE1C,IAAM,oBAAoB,GAAsB;IAC9C,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,oCAA4B,CAAC,MAAM,EAAE;IACxF,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,oCAA4B,CAAC,OAAO,EAAE;IAC7E,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,oCAA4B,CAAC,MAAM,EAAE;IACzF,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;IAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;CAC/B,CAAC;AAEW,QAAA,4BAA4B,GAAa;IAC9C,IAAA,uBAAsE,EAArE,mBAAW,EAAE,sBAAwD,CAAC;IAC7E,IAAM,QAAQ,GAA+B,UAAC,KAAK,EAAE,MAAM,IAAK,OAAA,cAAc,CAAC,MAAO,CAAC,GAAa,CAAC,EAArC,CAAqC,CAAC;IAEtG,OAAO,CACL;QACE,oBAAC,gBAAQ,IACP,KAAK,EAAC,oCAAoC,EAC1C,kBAAkB,EAAC,GAAG,EACtB,YAAY,EAAC,oCAAoC,EACjD,OAAO,EAAE,oBAAoB,GAC7B;QAEF,oBAAC,gBAAQ,IACP,KAAK,EAAC,gDAAgD,EACtD,OAAO,EAAE,oBAAoB;YAC7B,6CAA6C;YAC7C,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,WAAW,KAAK,GAAG,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,SAAS,GAC5E,CACE,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  ComboBox,\n  IComboBoxProps,\n  IComboBoxOption,\n  SelectableOptionMenuItemType,\n} from 'office-ui-fabric-react/lib/index';\n\nconst comboBoxBasicOptions: IComboBoxOption[] = [\n  { key: 'Header1', text: 'First heading', itemType: SelectableOptionMenuItemType.Header },\n  { key: 'A', text: 'Option A' },\n  { key: 'B', text: 'Option B' },\n  { key: 'C', text: 'Option C' },\n  { key: 'D', text: 'Option D' },\n  { key: 'divider', text: '-', itemType: SelectableOptionMenuItemType.Divider },\n  { key: 'Header2', text: 'Second heading', itemType: SelectableOptionMenuItemType.Header },\n  { key: 'E', text: 'Option E' },\n  { key: 'F', text: 'Option F', disabled: true },\n  { key: 'G', text: 'Option G' },\n  { key: 'H', text: 'Option H' },\n  { key: 'I', text: 'Option I' },\n  { key: 'J', text: 'Option J' },\n];\n\nexport const ComboBoxErrorHandlingExample: React.FC = () => {\n  const [selectedKey, setSelectedKey] = React.useState<string | undefined>('');\n  const onChange: IComboBoxProps['onChange'] = (event, option) => setSelectedKey(option!.key as string);\n\n  return (\n    <div>\n      <ComboBox\n        label=\"ComboBox with static error message\"\n        defaultSelectedKey=\"B\"\n        errorMessage=\"Oh no! This ComboBox has an error!\"\n        options={comboBoxBasicOptions}\n      />\n\n      <ComboBox\n        label=\"ComboBox that errors when Option B is selected\"\n        options={comboBoxBasicOptions}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onChange}\n        selectedKey={selectedKey}\n        errorMessage={selectedKey === 'B' ? 'B is not an allowed option' : undefined}\n      />\n    </div>\n  );\n};\n"]}
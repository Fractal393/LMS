{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,8DAA8E;AAC9E,uDAA+C;AAC/C,4EAAkG;AAClG,4DAA+E;AAO/E,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;AACzB,IAAM,UAAU,GAAG,wBAAc,CAAC;IAChC,OAAO,EAAE;QACP,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,QAAQ,EAAE,GAAG;QACb,MAAM,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY;KAClD;IACD,MAAM,EAAE;QACN,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;QAChC,OAAO,EAAE,mBAAmB;QAC5B,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;QAC7C,YAAY,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;KACjD;IACD,WAAW,EAAE;QACX,OAAO,EAAE,WAAW;KACrB;CACF,CAAC,CAAC;AACH,IAAM,oBAAoB,GAAmC,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC;AACvF,IAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACnH,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAAC;IAC5D,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,EAAE,oBAAK,CAAC,GAAG,CAAC;IAChB,KAAK,OAAA;CACN,CAAC,EAJ2D,CAI3D,CAAC,CAAC;AACJ,IAAM,iBAAiB,GAAG,UAAC,IAAgC,IAAK,OAAA,CAC9D,6BACE,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,KAAK,EAAE;QACL,eAAe,EAAE,IAAI,CAAC,KAAK;KAC5B;IAED,oBAAC,eAAM,IAAC,cAAc,EAAE,2BAAkB,CAAC,IAAI;QAC7C,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;YAAqB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAO,CACpE;IACT,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAO,CACrD,CACP,EAZ+D,CAY/D,CAAC;AACF,IAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AACrC,QAAA,4BAA4B,GAA4B,cAAM,OAAA,CACzE,6BAAK,SAAS,EAAE,UAAU,CAAC,OAAO;IAChC,oBAAC,+BAAc,IAAC,MAAM,EAAE,oBAAoB,IAAM,YAAY,CAAkB,CAC5E,CACP,EAJ0E,CAI1E,CAAC","sourcesContent":["import * as React from 'react';\nimport { getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { lorem } from '@uifabric/example-data';\nimport { ScrollablePane, IScrollablePaneStyles } from 'office-ui-fabric-react/lib/ScrollablePane';\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\n\nexport interface IScrollablePaneExampleItem {\n  color: string;\n  text: string;\n  index: number;\n}\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  wrapper: {\n    height: '40vh',\n    position: 'relative',\n    maxHeight: 'inherit',\n  },\n  pane: {\n    maxWidth: 400,\n    border: '1px solid ' + theme.palette.neutralLight,\n  },\n  sticky: {\n    color: theme.palette.neutralDark,\n    padding: '5px 20px 5px 10px',\n    fontSize: '13px',\n    borderTop: '1px solid ' + theme.palette.black,\n    borderBottom: '1px solid ' + theme.palette.black,\n  },\n  textContent: {\n    padding: '15px 10px',\n  },\n});\nconst scrollablePaneStyles: Partial<IScrollablePaneStyles> = { root: classNames.pane };\nconst colors = ['#eaeaea', '#dadada', '#d0d0d0', '#c8c8c8', '#a6a6a6', '#c7e0f4', '#71afe5', '#eff6fc', '#deecf9'];\nconst items = Array.from({ length: 5 }).map((item, index) => ({\n  color: colors.splice(Math.floor(Math.random() * colors.length), 1)[0],\n  text: lorem(200),\n  index,\n}));\nconst createContentArea = (item: IScrollablePaneExampleItem) => (\n  <div\n    key={item.index}\n    style={{\n      backgroundColor: item.color,\n    }}\n  >\n    <Sticky stickyPosition={StickyPositionType.Both}>\n      <div className={classNames.sticky}>Sticky Component #{item.index + 1}</div>\n    </Sticky>\n    <div className={classNames.textContent}>{item.text}</div>\n  </div>\n);\nconst contentAreas = items.map(createContentArea);\nexport const ScrollablePaneDefaultExample: React.FunctionComponent = () => (\n  <div className={classNames.wrapper}>\n    <ScrollablePane styles={scrollablePaneStyles}>{...contentAreas}</ScrollablePane>\n  </div>\n);\n"]}
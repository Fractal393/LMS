{"version":3,"file":"Panel.ConfirmDismiss.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.ConfirmDismiss.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,4DAAiF;AACjF,4DAAqF;AACrF,0DAAyD;AACzD,qDAAyD;AAEzD,IAAM,WAAW,GAAG,+DAA+D,CAAC;AACpF,IAAM,kBAAkB,GAAG;IACzB,IAAI,EAAE,mBAAU,CAAC,MAAM;IACvB,KAAK,EAAE,2CAA2C;CACnD,CAAC;AACF,IAAM,gBAAgB,GAAG;IACvB,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;CACpC,CAAC;AAEW,QAAA,0BAA0B,GAA4B;IAC3D,IAAA,0BAAqD,EAApD,mBAAW,EAAE,sBAAuC,CAAC;IACtD,IAAA,0BAA6D,EAA5D,uBAAe,EAAE,0BAA2C,CAAC;IAEpE,IAAM,SAAS,GAAG,8BAAgB,CAAC,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC,CAAC;IAC/D,IAAM,SAAS,GAAG,8BAAgB,CAAC,UAAC,EAAyB;QAC3D,IAAI,EAAE,EAAE;YACN,iFAAiF;YACjF,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,kBAAkB,CAAC,IAAI,CAAC,CAAC;SAC1B;IACH,CAAC,CAAC,CAAC;IAEH,IAAM,UAAU,GAAG,8BAAgB,CAAC,cAAM,OAAA,kBAAkB,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACrE,IAAM,kBAAkB,GAAG,8BAAgB,CAAC;QAC1C,cAAc,CAAC,KAAK,CAAC,CAAC;QACtB,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,OAAO,CACL;QACG,WAAW;QACZ,+BAAM;QACN,+BAAM;QACN,oBAAC,sBAAa,IAAC,IAAI,EAAC,YAAY,EAAC,OAAO,EAAE,SAAS,GAAI;QACvD,oBAAC,aAAK,IACJ,UAAU,EAAC,kCAAkC,EAC7C,MAAM,EAAE,WAAW,EACnB,SAAS,EAAE,SAAS,EACpB,oBAAoB,EAAC,OAAO;YAE5B,+BAAI,WAAW,CAAK,CACd;QACR,oBAAC,eAAM,IACL,MAAM,EAAE,CAAC,eAAe,EACxB,SAAS,EAAE,UAAU,EACrB,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,gBAAgB;YAE5B,oBAAC,qBAAY;gBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAC,KAAK,GAAG;gBACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,IAAI,GAAG,CACnC,CACR,CACL,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { useConstCallback } from '@uifabric/react-hooks';\n\nconst explanation = 'When this panel is closed, a confirmation dialog will appear.';\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Are you sure you want to close the panel?',\n};\nconst dialogModalProps = {\n  isBlocking: true,\n  styles: { main: { maxWidth: 450 } },\n};\n\nexport const PanelConfirmDismissExample: React.FunctionComponent = () => {\n  const [isPanelOpen, setIsPanelOpen] = React.useState(false);\n  const [isDialogVisible, setIsDialogVisible] = React.useState(false);\n\n  const openPanel = useConstCallback(() => setIsPanelOpen(true));\n  const onDismiss = useConstCallback((ev?: React.SyntheticEvent) => {\n    if (ev) {\n      // Instead of closing the panel immediately, cancel that action and show a dialog\n      ev.preventDefault();\n      setIsDialogVisible(true);\n    }\n  });\n\n  const hideDialog = useConstCallback(() => setIsDialogVisible(false));\n  const hideDialogAndPanel = useConstCallback(() => {\n    setIsPanelOpen(false);\n    setIsDialogVisible(false);\n  });\n\n  return (\n    <div>\n      {explanation}\n      <br />\n      <br />\n      <DefaultButton text=\"Open panel\" onClick={openPanel} />\n      <Panel\n        headerText=\"Panel with custom close behavior\"\n        isOpen={isPanelOpen}\n        onDismiss={onDismiss}\n        closeButtonAriaLabel=\"Close\"\n      >\n        <p>{explanation}</p>\n      </Panel>\n      <Dialog\n        hidden={!isDialogVisible}\n        onDismiss={hideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={dialogModalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={hideDialogAndPanel} text=\"Yes\" />\n          <DefaultButton onClick={hideDialog} text=\"No\" />\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n"]}
{"version":3,"file":"Stack.Horizontal.Configure.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Configure.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Checkbox,\n  ICheckboxStyles,\n  DefaultPalette,\n  Dropdown,\n  IDropdownOption,\n  Slider,\n  Stack,\n  IStackStyles,\n  IStackItemStyles,\n  IStackTokens,\n  IStackProps,\n  TextField,\n} from 'office-ui-fabric-react';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { range } from '@uifabric/example-data';\nexport interface IExampleOptions {\n  numItems: number;\n  showBoxShadow: boolean;\n  preventOverflow: boolean;\n  wrap: boolean;\n  wrapperWidth: number;\n  disableShrink: boolean;\n  columnGap: number;\n  rowGap: number;\n  paddingLeft: number;\n  paddingRight: number;\n  paddingTop: number;\n  paddingBottom: number;\n  horizontalAlignment: IStackProps['horizontalAlign'];\n  verticalAlignment: IStackProps['verticalAlign'];\n  hideEmptyChildren: boolean;\n  emptyChildren: string[];\n}\n\n// Alignment options\nconst horizontalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Left' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Right' },\n  { key: 'space-around', text: 'Space around' },\n  { key: 'space-between', text: 'Space between' },\n  { key: 'space-evenly', text: 'Space evenly' },\n];\nconst verticalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Top' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Bottom' },\n];\n\n// Tokens definition\nconst sectionStackTokens: IStackTokens = { childrenGap: 10 };\nconst configureStackTokens: IStackTokens = { childrenGap: 20 };\nconst shadowItemCheckboxStyles: Partial<ICheckboxStyles> = { root: { marginRight: 10 } };\nconst wrapItemCheckboxStyles: Partial<ICheckboxStyles> = { root: { marginBottom: 10 } };\n\nconst HorizontalStackConfigureExampleContent: React.FunctionComponent<IExampleOptions> = props => {\n  const {\n    numItems,\n    showBoxShadow,\n    preventOverflow,\n    wrap,\n    wrapperWidth,\n    disableShrink,\n    columnGap,\n    rowGap,\n    paddingLeft,\n    paddingRight,\n    paddingTop,\n    paddingBottom,\n    horizontalAlignment,\n    verticalAlignment,\n    hideEmptyChildren,\n    emptyChildren,\n  } = props;\n\n  // Styles definition\n  const stackStyles: IStackStyles = {\n    root: [\n      {\n        background: DefaultPalette.themeTertiary,\n        marginLeft: 10,\n        marginRight: 10,\n        minHeight: 100,\n        width: `calc(${wrapperWidth}% - 20px)`,\n      },\n      preventOverflow && {\n        overflow: 'hidden' as 'hidden',\n      },\n    ],\n    inner: {\n      overflow: preventOverflow ? 'hidden' : ('visible' as 'hidden' | 'visible'),\n    },\n  };\n\n  const stackItemStyles: IStackItemStyles = {\n    root: {\n      alignItems: 'center',\n      background: DefaultPalette.themePrimary,\n      boxShadow: showBoxShadow ? `0px 0px 10px 5px ${DefaultPalette.themeDarker}` : '',\n      color: DefaultPalette.white,\n      display: 'flex',\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n  };\n\n  // Tokens definition\n  const exampleStackTokens: IStackTokens = {\n    childrenGap: rowGap + ' ' + columnGap,\n    padding: `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`,\n  };\n\n  return (\n    <Stack\n      horizontal\n      wrap={wrap}\n      disableShrink={disableShrink}\n      horizontalAlign={horizontalAlignment}\n      verticalAlign={verticalAlignment}\n      styles={stackStyles}\n      tokens={exampleStackTokens}\n    >\n      {range(1, numItems).map((value: number, index: number) => {\n        if (emptyChildren.indexOf(value.toString()) !== -1) {\n          return hideEmptyChildren ? (\n            <Stack.Item key={index} styles={stackItemStyles} />\n          ) : (\n            <span key={index} style={stackItemStyles.root as React.CSSProperties} />\n          );\n        }\n\n        return (\n          <span key={index} style={stackItemStyles.root as React.CSSProperties}>\n            {value}\n          </span>\n        );\n      })}\n    </Stack>\n  );\n};\n\nexport const HorizontalStackConfigureExample: React.FunctionComponent = () => {\n  const [numItems, setNumItems] = React.useState<number>(5);\n  const [showBoxShadow, { toggle: toggleShowBoxShadow }] = useBoolean(false);\n  const [wrap, { toggle: toggleWrap }] = useBoolean(false);\n  const [preventOverflow, { toggle: togglePreventOverflow }] = useBoolean(false);\n  const [disableShrink, { toggle: toggleDisableShrink }] = useBoolean(true);\n  const [wrapperWidth, setWrapperWidth] = React.useState<number>(100);\n  const [columnGap, setColumnGap] = React.useState<number>(0);\n  const [rowGap, setRowGap] = React.useState<number>(0);\n  const [paddingLeft, setPaddingLeft] = React.useState<number>(0);\n  const [paddingRight, setPaddingRight] = React.useState<number>(0);\n  const [paddingTop, setPaddingTop] = React.useState<number>(0);\n  const [paddingBottom, setPaddingBottom] = React.useState<number>(0);\n  const [horizontalAlignment, setHorizontalAlignment] = React.useState<IStackProps['horizontalAlign']>('start');\n  const [verticalAlignment, setVerticalAlignment] = React.useState<IStackProps['verticalAlign']>('start');\n  const [hideEmptyChildren, { toggle: toggleHideEmptyChildren }] = useBoolean(false);\n  const [emptyChildren, setEmptyChildren] = React.useState<string[]>([]);\n\n  return (\n    <Stack tokens={sectionStackTokens}>\n      <Stack horizontal disableShrink>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Number of items:\"\n              min={1}\n              max={30}\n              step={1}\n              defaultValue={5}\n              showValue\n              onChange={setNumItems}\n            />\n            <Stack horizontal disableShrink>\n              <Checkbox label=\"Shadow around items\" onChange={toggleShowBoxShadow} styles={shadowItemCheckboxStyles} />\n              <Checkbox label=\"Prevent item overflow\" onChange={togglePreventOverflow} />\n            </Stack>\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack horizontal disableShrink tokens={configureStackTokens}>\n            <Stack>\n              <Checkbox label=\"Wrap items\" onChange={toggleWrap} styles={wrapItemCheckboxStyles} />\n              <Checkbox label=\"Shrink items\" onChange={toggleDisableShrink} />\n            </Stack>\n            <Stack.Item grow>\n              <Slider\n                label=\"Container width:\"\n                min={1}\n                max={100}\n                step={1}\n                defaultValue={100}\n                showValue\n                onChange={setWrapperWidth}\n              />\n            </Stack.Item>\n          </Stack>\n        </Stack.Item>\n      </Stack>\n\n      <Stack horizontal disableShrink tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Horizontal gap between items:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setColumnGap}\n            />\n            <Slider\n              label=\"Vertical gap between items:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setRowGap}\n            />\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Left padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingLeft}\n            />\n            <Slider\n              label=\"Right padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingRight}\n            />\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Top padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingTop}\n            />\n            <Slider\n              label=\"Bottom padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingBottom}\n            />\n          </Stack>\n        </Stack.Item>\n      </Stack>\n\n      <Stack horizontal disableShrink verticalAlign=\"end\" tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={horizontalAlignment}\n            placeholder=\"Select Horizontal Alignment\"\n            label=\"Horizontal alignment:\"\n            options={horizontalAlignmentOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setHorizontalAlignment(option.key as IStackProps['horizontalAlign'])\n            }\n          />\n        </Stack.Item>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={verticalAlignment}\n            placeholder=\"Select Vertical Alignment\"\n            label=\"Vertical alignment:\"\n            options={verticalAlignmentOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setVerticalAlignment(option.key as IStackProps['verticalAlign'])\n            }\n          />\n        </Stack.Item>\n        <Stack.Item>\n          <Checkbox label=\"Hide empty children\" onChange={toggleHideEmptyChildren} />\n        </Stack.Item>\n        <Stack.Item grow>\n          <TextField\n            label=\"Enter a space-separated list of empty children (e.g. 1 2 3):\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLInputElement>, value?: string): void => {\n              if (value === undefined) {\n                return;\n              }\n              setEmptyChildren(value.replace(/,/g, '').split(' '));\n            }}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <HorizontalStackConfigureExampleContent\n        {...{\n          numItems,\n          showBoxShadow,\n          preventOverflow,\n          wrap,\n          wrapperWidth,\n          disableShrink,\n          columnGap,\n          rowGap,\n          paddingLeft,\n          paddingRight,\n          paddingTop,\n          paddingBottom,\n          horizontalAlignment,\n          verticalAlignment,\n          hideEmptyChildren,\n          emptyChildren,\n        }}\n      />\n    </Stack>\n  );\n};\n"]}
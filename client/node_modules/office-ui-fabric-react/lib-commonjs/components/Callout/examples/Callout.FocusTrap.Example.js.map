{"version":3,"file":"Callout.FocusTrap.Example.js","sourceRoot":"../src/","sources":["components/Callout/examples/Callout.FocusTrap.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,iEASgC;AAChC,qDAAmD;AAEnD,IAAM,MAAM,GAAG,uCAAc,CAAC;IAC5B,UAAU,EAAE;QACV,aAAa,EAAE,KAAK;QACpB,OAAO,EAAE,cAAc;QACvB,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,SAAS;QACjB,QAAQ,EAAE,GAAG;QACb,MAAM,EAAE,EAAE;KACX;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,GAAG;KACd;IACD,MAAM,EAAE;QACN,OAAO,EAAE,gBAAgB;KAC1B;IACD,KAAK,EAAE;QACL;YACE,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,oCAAW,CAAC,SAAS;SAClC;KACF;IACD,KAAK,EAAE;QACL,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,aAAa;KACvB;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,MAAM;QACb,UAAU,EAAE,QAAQ;KACrB;IACD,OAAO,EAAE;QACP,OAAO,EAAE,MAAM;QACf,cAAc,EAAE,UAAU;QAC1B,OAAO,EAAE,aAAa;KACvB;IACD,OAAO,EAAE;QACP;YACE,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,oCAAW,CAAC,SAAS;SAClC;KACF;CACF,CAAC,CAAC;AAEU,QAAA,uBAAuB,GAA4B;IACxD,IAAA,oCAA0E,EAAzE,wBAAgB,EAAI,qCAAqD,CAAC;IACjF,OAAO,CACL;QACE,6BAAK,SAAS,EAAE,MAAM,CAAC,UAAU;YAC/B,oBAAC,sCAAa,IACZ,OAAO,EAAE,sBAAsB,EAC/B,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,uBAAuB,GAC1E,CACE;QACL,gBAAgB,CAAC,CAAC,CAAC,CAClB;YACE,oBAAC,yCAAgB,IACf,IAAI,EAAC,aAAa,EAClB,SAAS,EAAE,MAAM,CAAC,OAAO,EACzB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,MAAI,MAAM,CAAC,UAAY,EAC/B,SAAS,EAAE,sBAAsB,EACjC,eAAe;gBAEf,6BAAK,SAAS,EAAE,MAAM,CAAC,MAAM;oBAC3B,oBAAC,6BAAI,IAAC,SAAS,EAAE,MAAM,CAAC,KAAK,yBAA2B,CACpD;gBACN,6BAAK,SAAS,EAAE,MAAM,CAAC,KAAK;oBAC1B;wBACE,oBAAC,6BAAI,IAAC,SAAS,EAAE,MAAM,CAAC,OAAO,oGAExB,CACH,CACF;gBACN,oBAAC,kCAAS;oBACR,oBAAC,8BAAK,IAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU;wBAClD,oBAAC,sCAAa,IAAC,OAAO,EAAE,sBAAsB,eAA0B;wBACxE,oBAAC,sCAAa,IAAC,OAAO,EAAE,sBAAsB,eAA0B,CAClE,CACE,CACK,CACf,CACP,CAAC,CAAC,CAAC,IAAI,CACP,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  DefaultButton,\n  FocusTrapCallout,\n  Stack,\n  FocusZone,\n  PrimaryButton,\n  mergeStyleSets,\n  FontWeights,\n  Text,\n} from 'office-ui-fabric-react';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst styles = mergeStyleSets({\n  buttonArea: {\n    verticalAlign: 'top',\n    display: 'inline-block',\n    textAlign: 'center',\n    margin: '0 100px',\n    minWidth: 130,\n    height: 32,\n  },\n  callout: {\n    maxWidth: 300,\n  },\n  header: {\n    padding: '18px 24px 12px',\n  },\n  title: [\n    {\n      margin: 0,\n      fontWeight: FontWeights.semilight,\n    },\n  ],\n  inner: {\n    height: '100%',\n    padding: '0 24px 20px',\n  },\n  actions: {\n    position: 'relative',\n    marginTop: 20,\n    width: '100%',\n    whiteSpace: 'nowrap',\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: '0 24px 24px',\n  },\n  subtext: [\n    {\n      margin: 0,\n      fontWeight: FontWeights.semilight,\n    },\n  ],\n});\n\nexport const CalloutFocusTrapExample: React.FunctionComponent = () => {\n  const [isCalloutVisible, { toggle: toggleIsCalloutVisible }] = useBoolean(false);\n  return (\n    <>\n      <div className={styles.buttonArea}>\n        <DefaultButton\n          onClick={toggleIsCalloutVisible}\n          text={isCalloutVisible ? 'Hide FocusTrapCallout' : 'Show FocusTrapCallout'}\n        />\n      </div>\n      {isCalloutVisible ? (\n        <div>\n          <FocusTrapCallout\n            role=\"alertdialog\"\n            className={styles.callout}\n            gapSpace={0}\n            target={`.${styles.buttonArea}`}\n            onDismiss={toggleIsCalloutVisible}\n            setInitialFocus\n          >\n            <div className={styles.header}>\n              <Text className={styles.title}>Callout title here</Text>\n            </div>\n            <div className={styles.inner}>\n              <div>\n                <Text className={styles.subtext}>\n                  Content is wrapped in a FocusTrapZone so that user cannot accidently tab out of this callout.\n                </Text>\n              </div>\n            </div>\n            <FocusZone>\n              <Stack className={styles.buttons} gap={8} horizontal>\n                <PrimaryButton onClick={toggleIsCalloutVisible}>Button 1</PrimaryButton>\n                <DefaultButton onClick={toggleIsCalloutVisible}>Button 2</DefaultButton>\n              </Stack>\n            </FocusZone>\n          </FocusTrapCallout>\n        </div>\n      ) : null}\n    </>\n  );\n};\n"]}
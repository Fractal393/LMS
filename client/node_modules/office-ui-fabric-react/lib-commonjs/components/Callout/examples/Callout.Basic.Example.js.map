{"version":3,"file":"Callout.Basic.Example.js","sourceRoot":"../src/","sources":["components/Callout/examples/Callout.Basic.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,iEAAmH;AACnH,qDAA0D;AAE1D,IAAM,KAAK,GAAG,iCAAQ,EAAE,CAAC;AACzB,IAAM,MAAM,GAAG,uCAAc,CAAC;IAC5B,UAAU,EAAE;QACV,aAAa,EAAE,KAAK;QACpB,OAAO,EAAE,cAAc;QACvB,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,SAAS;QACjB,QAAQ,EAAE,GAAG;QACb,MAAM,EAAE,EAAE;KACX;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,GAAG;KACd;IACD,MAAM,EAAE;QACN,OAAO,EAAE,gBAAgB;KAC1B;IACD,KAAK,EAAE;QACL,KAAK,CAAC,KAAK,CAAC,MAAM;QAClB;YACE,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,oCAAW,CAAC,SAAS;SAClC;KACF;IACD,KAAK,EAAE;QACL,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,aAAa;KACvB;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,MAAM;QACb,UAAU,EAAE,QAAQ;KACrB;IACD,OAAO,EAAE;QACP,KAAK,CAAC,KAAK,CAAC,KAAK;QACjB;YACE,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,oCAAW,CAAC,SAAS;SAClC;KACF;IACD,IAAI,EAAE;QACJ,KAAK,CAAC,KAAK,CAAC,MAAM;QAClB;YACE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;SACpC;KACF;CACF,CAAC,CAAC;AAEU,QAAA,mBAAmB,GAA4B;IACpD,IAAA,oCAA0E,EAAzE,wBAAgB,EAAI,qCAAqD,CAAC;IAEjF,IAAM,OAAO,GAAW,mBAAK,CAAC,eAAe,CAAC,CAAC;IAC/C,IAAM,aAAa,GAAW,mBAAK,CAAC,qBAAqB,CAAC,CAAC;IAC3D,OAAO,CACL;QACE,6BAAK,SAAS,EAAE,MAAM,CAAC,UAAU;YAC/B,oBAAC,sCAAa,IAAC,OAAO,EAAE,sBAAsB,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,GAAI,CACxG;QACL,gBAAgB,IAAI,CACnB,oBAAC,gCAAO,IACN,SAAS,EAAE,MAAM,CAAC,OAAO,EACzB,cAAc,EAAE,OAAO,EACvB,eAAe,EAAE,aAAa,EAC9B,IAAI,EAAC,aAAa,EAClB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,MAAI,MAAM,CAAC,UAAY,EAC/B,SAAS,EAAE,sBAAsB,EACjC,eAAe;YAEf,6BAAK,SAAS,EAAE,MAAM,CAAC,MAAM;gBAC3B,oBAAC,6BAAI,IAAC,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,kCAEnC,CACH;YACN,6BAAK,SAAS,EAAE,MAAM,CAAC,KAAK;gBAC1B,oBAAC,6BAAI,IAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,aAAa,wHAG3C;gBACP,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO;oBAC5B,oBAAC,6BAAI,IAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAC,sBAAsB,EAAC,MAAM,EAAC,QAAQ,sBAElE,CACH,CACF,CACE,CACX,CACA,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, Callout, Link, getTheme, FontWeights, mergeStyleSets, Text } from 'office-ui-fabric-react';\nimport { useBoolean, useId } from '@uifabric/react-hooks';\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  buttonArea: {\n    verticalAlign: 'top',\n    display: 'inline-block',\n    textAlign: 'center',\n    margin: '0 100px',\n    minWidth: 130,\n    height: 32,\n  },\n  callout: {\n    maxWidth: 300,\n  },\n  header: {\n    padding: '18px 24px 12px',\n  },\n  title: [\n    theme.fonts.xLarge,\n    {\n      margin: 0,\n      fontWeight: FontWeights.semilight,\n    },\n  ],\n  inner: {\n    height: '100%',\n    padding: '0 24px 20px',\n  },\n  actions: {\n    position: 'relative',\n    marginTop: 20,\n    width: '100%',\n    whiteSpace: 'nowrap',\n  },\n  subtext: [\n    theme.fonts.small,\n    {\n      margin: 0,\n      fontWeight: FontWeights.semilight,\n    },\n  ],\n  link: [\n    theme.fonts.medium,\n    {\n      color: theme.palette.neutralPrimary,\n    },\n  ],\n});\n\nexport const CalloutBasicExample: React.FunctionComponent = () => {\n  const [isCalloutVisible, { toggle: toggleIsCalloutVisible }] = useBoolean(false);\n\n  const labelId: string = useId('callout-label');\n  const descriptionId: string = useId('callout-description');\n  return (\n    <>\n      <div className={styles.buttonArea}>\n        <DefaultButton onClick={toggleIsCalloutVisible} text={isCalloutVisible ? 'Hide Callout' : 'Show Callout'} />\n      </div>\n      {isCalloutVisible && (\n        <Callout\n          className={styles.callout}\n          ariaLabelledBy={labelId}\n          ariaDescribedBy={descriptionId}\n          role=\"alertdialog\"\n          gapSpace={0}\n          target={`.${styles.buttonArea}`}\n          onDismiss={toggleIsCalloutVisible}\n          setInitialFocus\n        >\n          <div className={styles.header}>\n            <Text className={styles.title} id={labelId}>\n              All of your favorite people\n            </Text>\n          </div>\n          <div className={styles.inner}>\n            <Text className={styles.subtext} id={descriptionId}>\n              Message body is optional. If help documentation is available, consider adding a link to learn more at the\n              bottom.\n            </Text>\n            <div className={styles.actions}>\n              <Link className={styles.link} href=\"http://microsoft.com\" target=\"_blank\">\n                Go to microsoft\n              </Link>\n            </div>\n          </div>\n        </Callout>\n      )}\n    </>\n  );\n};\n"]}
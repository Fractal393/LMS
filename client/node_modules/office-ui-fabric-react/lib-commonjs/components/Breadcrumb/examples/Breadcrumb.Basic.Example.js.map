{"version":3,"file":"Breadcrumb.Basic.Example.js","sourceRoot":"../src/","sources":["components/Breadcrumb/examples/Breadcrumb.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Breadcrumb, IBreadcrumbItem, IDividerAsProps } from 'office-ui-fabric-react/lib/Breadcrumb';\nimport { Label, ILabelStyles } from 'office-ui-fabric-react/lib/Label';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nconst labelStyles: Partial<ILabelStyles> = {\n  root: { margin: '10px 0', selectors: { '&:not(:first-child)': { marginTop: 24 } } },\n};\n\nconst items: IBreadcrumbItem[] = [\n  { text: 'Files', key: 'Files', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 1', key: 'f1', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 2', key: 'f2', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 3', key: 'f3', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 4 (non-clickable)', key: 'f4' },\n  { text: 'Folder 5', key: 'f5', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 6', key: 'f6', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 7', key: 'f7', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 8', key: 'f8', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 9', key: 'f9', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 10', key: 'f10', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 11', key: 'f11', onClick: _onBreadcrumbItemClicked, isCurrentItem: true },\n];\nconst itemsWithHref: IBreadcrumbItem[] = [\n  // Normally each breadcrumb would have a unique href, but to make the navigation less disruptive\n  // in the example, it uses the breadcrumb page as the href for all the items\n  { text: 'Files', key: 'Files', href: '#/controls/web/breadcrumb' },\n  { text: 'Folder 1', key: 'f1', href: '#/controls/web/breadcrumb' },\n  { text: 'Folder 2', key: 'f2', href: '#/controls/web/breadcrumb' },\n  { text: 'Folder 3', key: 'f3', href: '#/controls/web/breadcrumb' },\n  { text: 'Folder 4 (non-clickable)', key: 'f4' },\n  { text: 'Folder 5', key: 'f5', href: '#/controls/web/breadcrumb', isCurrentItem: true },\n];\nconst itemsWithHeading: IBreadcrumbItem[] = [\n  { text: 'Files', key: 'Files', onClick: _onBreadcrumbItemClicked },\n  { text: 'Folder 1', key: 'd1', onClick: _onBreadcrumbItemClicked },\n  // Generally, only the last item should ever be a heading.\n  // It would typically be h1 or h2, but we're using h4 here to better fit the structure of the page.\n  { text: 'Folder 2', key: 'd2', isCurrentItem: true, as: 'h4' },\n];\n\nexport const BreadcrumbBasicExample: React.FunctionComponent = () => {\n  return (\n    <div>\n      <Label styles={labelStyles}>With items rendered as buttons</Label>\n      <Breadcrumb\n        items={items}\n        maxDisplayedItems={10}\n        ariaLabel=\"Breadcrumb with items rendered as buttons\"\n        overflowAriaLabel=\"More links\"\n      />\n\n      <Label styles={labelStyles}>With items rendered as links</Label>\n      <Breadcrumb\n        items={itemsWithHref}\n        maxDisplayedItems={3}\n        ariaLabel=\"Breadcrumb with items rendered as links\"\n        overflowAriaLabel=\"More links\"\n      />\n\n      <Label styles={labelStyles}>With last item rendered as heading</Label>\n      <Breadcrumb\n        items={itemsWithHeading}\n        ariaLabel=\"With last item rendered as heading\"\n        overflowAriaLabel=\"More links\"\n      />\n\n      <Label styles={labelStyles}>With custom rendered divider and overflow icon</Label>\n      <Breadcrumb\n        items={itemsWithHeading}\n        maxDisplayedItems={3}\n        ariaLabel=\"With custom rendered divider and overflow icon\"\n        dividerAs={_getCustomDivider}\n        onRenderOverflowIcon={_getCustomOverflowIcon}\n        overflowAriaLabel=\"More links\"\n      />\n    </div>\n  );\n};\n\nfunction _onBreadcrumbItemClicked(ev: React.MouseEvent<HTMLElement>, item: IBreadcrumbItem): void {\n  console.log(`Breadcrumb item with key \"${item.key}\" has been clicked.`);\n}\n\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\n  const tooltipText = dividerProps.item ? dividerProps.item.text : '';\n  return (\n    <TooltipHost content={`Show ${tooltipText} contents`} calloutProps={{ gapSpace: 0 }}>\n      <span aria-hidden=\"true\" style={{ cursor: 'pointer', padding: 5 }}>\n        /\n      </span>\n    </TooltipHost>\n  );\n}\n\nfunction _getCustomOverflowIcon(): JSX.Element {\n  return <Icon iconName={'ChevronDown'} />;\n}\n"]}
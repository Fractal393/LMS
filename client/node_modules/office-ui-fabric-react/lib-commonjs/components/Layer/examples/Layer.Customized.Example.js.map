{"version":3,"file":"Layer.Customized.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.Customized.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,4DAA2D;AAC3D,0DAA0E;AAC1E,0DAAyD;AAEzD,8DAAiE;AACjE,kEAAkE;AAClE,qDAA0D;AAE7C,QAAA,sBAAsB,GAA4B;IACvD,IAAA,oCAAiF,EAAhF,mBAAW,EAAE,UAA8C,EAA5C,sBAAkB,EAAE,0BAA6C,CAAC;IAClF,IAAA,oCAA4D,EAA3D,iBAAS,EAAI,8BAA8C,CAAC;IAEnE,2DAA2D;IAC3D,yEAAyE;IACzE,IAAM,WAAW,GAAG,mBAAK,CAAC,WAAW,CAAC,CAAC;IAEvC,IAAM,cAAc,GAAG,gBAAgB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAEhE,OAAO,CACL;QACE;;YACI,0CAAkB;;YAAoD,4CAAiB;;YACpD,4CAAiB;qDACpD;QACJ,oBAAC,eAAM,IAAC,KAAK,EAAC,YAAY,EAAC,WAAW,QAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,GAAI;QACjH,oBAAC,eAAM,IAAC,KAAK,EAAC,YAAY,EAAC,WAAW,QAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,GAAI;QACxF,oBAAC,sBAAU,IAAC,cAAc,EAAE,cAAc,IACvC,WAAW,IAAI,CACd,oBAAC,aAAK,IACJ,MAAM,QACN,cAAc,QACd,UAAU,EAAC,cAAc,EACzB,kBAAkB,EAAE,kBAAkB,EACtC,SAAS,EAAE,YAAY;;YAEX,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ;wBACjC,CACT,CACU;QACb,oBAAC,iBAAS,IAAC,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,GAAI,CACrD,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,cAAc,GAAG,qBAAW,CAAC;IACjC,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,GAAG;IACX,QAAQ,EAAE,QAAQ;IAClB,MAAM,EAAE,gBAAgB;CACzB,CAAC,CAAC;AAEH,IAAM,kBAAkB,GAAwB;IAC9C,2BAA2B,EAAE,IAAI;IACjC,oBAAoB,EAAE,KAAK;CAC5B,CAAC;AAEF,SAAS,gBAAgB,CAAC,SAAkB,EAAE,WAAmB;IAC/D,OAAO,KAAK,CAAC,OAAO,CAAC;QACnB,IAAI,SAAS,EAAE;YACb,IAAM,UAAU,GAAgB,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC;YACxD,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC;SAC9B;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["import * as React from 'react';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { LayerHost, ILayerProps } from 'office-ui-fabric-react/lib/Layer';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { IFocusTrapZoneProps } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { Customizer } from 'office-ui-fabric-react/lib/Utilities';\nimport { useId, useBoolean } from '@uifabric/react-hooks';\n\nexport const LayerCustomizedExample: React.FunctionComponent = () => {\n  const [isPanelOpen, { setTrue: showPanel, setFalse: dismissPanel }] = useBoolean(false);\n  const [trapPanel, { toggle: toggleTrapPanel }] = useBoolean(false);\n\n  // Use useId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string and manually ensure uniqueness.)\n  const layerHostId = useId('layerHost');\n\n  const scopedSettings = useLayerSettings(trapPanel, layerHostId);\n\n  return (\n    <div>\n      <p>\n        A <code>Panel</code> is rendered, trapped in a specified container. Use <b>Show panel</b> to show/hide the panel\n        (or select the X to dismiss it). Use <b>Trap panel</b> to release the panel from its bounds.\n      </p>\n      <Toggle label=\"Show panel\" inlineLabel checked={isPanelOpen} onChange={isPanelOpen ? dismissPanel : showPanel} />\n      <Toggle label=\"Trap panel\" inlineLabel checked={trapPanel} onChange={toggleTrapPanel} />\n      <Customizer scopedSettings={scopedSettings}>\n        {isPanelOpen && (\n          <Panel\n            isOpen\n            hasCloseButton\n            headerText=\"Sample panel\"\n            focusTrapZoneProps={focusTrapZoneProps}\n            onDismiss={dismissPanel}\n          >\n            This panel {trapPanel ? 'is' : 'is not'} trapped.\n          </Panel>\n        )}\n      </Customizer>\n      <LayerHost id={layerHostId} className={layerHostClass} />\n    </div>\n  );\n};\n\nconst layerHostClass = mergeStyles({\n  position: 'relative',\n  height: 400,\n  overflow: 'hidden',\n  border: '1px solid #ccc',\n});\n\nconst focusTrapZoneProps: IFocusTrapZoneProps = {\n  isClickableOutsideFocusTrap: true,\n  forceFocusInsideTrap: false,\n};\n\nfunction useLayerSettings(trapPanel: boolean, layerHostId: string): { Layer?: ILayerProps } {\n  return React.useMemo(() => {\n    if (trapPanel) {\n      const layerProps: ILayerProps = { hostId: layerHostId };\n      return { Layer: layerProps };\n    }\n    return {};\n  }, [trapPanel, layerHostId]);\n}\n"]}
{"version":3,"file":"Layer.NestedLayers.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.NestedLayers.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,4DAAiF;AACjF,4DAA0G;AAC1G,0DAAoE;AAEpE,qDAAmD;AAEtC,QAAA,wBAAwB,GAA4B;IACzD,IAAA,oCAAiF,EAAhF,oBAAY,EAAE,UAA6C,EAA3C,uBAAmB,EAAE,wBAA2C,CAAC;IAClF,IAAA,oCAAiF,EAAhF,mBAAW,EAAE,UAA8C,EAA5C,sBAAkB,EAAE,0BAA6C,CAAC;IAExF,OAAO,CACL;QACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAC,YAAY,GAAG;QAC9F,oBAAC,aAAK,IACJ,MAAM,EAAE,WAAW,EACnB,IAAI,EAAE,iBAAS,CAAC,aAAa,EAC7B,SAAS,EAAE,YAAY,EACvB,UAAU,EAAC,wFAAwF,EACnG,oBAAoB,EAAC,OAAO;YAE5B,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,aAAa,GAAG;YACjG,oBAAC,eAAM,IACL,MAAM,EAAE,CAAC,YAAY,EACrB,SAAS,EAAE,UAAU,EACrB,UAAU,EAAE,IAAI,EAChB,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,UAAU;gBAEtB,oBAAC,qBAAY;oBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,IAAI,GAAG;oBAChD,oBAAC,sBAAa,IAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,QAAQ,GAAG,CACvC,CACR,CACH,CACJ,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAwB;IAC9C,IAAI,EAAE,mBAAU,CAAC,MAAM;IACvB,KAAK,EACH,iHAAiH;IACnH,OAAO,EAAE,kEAAkE;CAC5E,CAAC;AACF,IAAM,UAAU,GAAgB;IAC9B,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;CACpC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogFooter, DialogType, IDialogContentProps } from 'office-ui-fabric-react/lib/Dialog';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { IModalProps } from 'office-ui-fabric-react/lib/Modal';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nexport const LayerNestedLayersExample: React.FunctionComponent = () => {\n  const [isDialogOpen, { setTrue: showDialog, setFalse: hideDialog }] = useBoolean(false);\n  const [isPanelOpen, { setTrue: showPanel, setFalse: dismissPanel }] = useBoolean(false);\n\n  return (\n    <div>\n      <DefaultButton secondaryText=\"Opens the Sample Panel\" onClick={showPanel} text=\"Open Panel\" />\n      <Panel\n        isOpen={isPanelOpen}\n        type={PanelType.smallFixedFar}\n        onDismiss={dismissPanel}\n        headerText=\"This panel makes use of Layer and FocusTrapZone. Focus should be trapped in the panel.\"\n        closeButtonAriaLabel=\"Close\"\n      >\n        <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={showDialog} text=\"Open Dialog\" />\n        <Dialog\n          hidden={!isDialogOpen}\n          onDismiss={hideDialog}\n          isBlocking={true}\n          dialogContentProps={dialogContentProps}\n          modalProps={modalProps}\n        >\n          <DialogFooter>\n            <PrimaryButton onClick={hideDialog} text=\"OK\" />\n            <DefaultButton onClick={hideDialog} text=\"Cancel\" />\n          </DialogFooter>\n        </Dialog>\n      </Panel>\n    </div>\n  );\n};\n\nconst dialogContentProps: IDialogContentProps = {\n  type: DialogType.normal,\n  title:\n    'This dialog uses Modal, which also makes use of Layer and FocusTrapZone. Focus should be trapped in the dialog.',\n  subText: \"Focus will move back to the panel if you press 'OK' or 'Cancel'.\",\n};\nconst modalProps: IModalProps = {\n  isBlocking: false,\n  styles: { main: { maxWidth: 450 } },\n};\n"]}
{"version":3,"file":"DatePicker.Input.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,gBAAgB,GAAuB;QAC3C,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAEjG,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;QAEpF,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAE9C,SAAS,EAAE,aAAa;QACxB,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,kBAAkB;QACtC,iBAAiB,EAAE,qBAAqB;QACxC,iBAAiB,EAAE,iBAAiB;QACpC,oBAAoB,EAAE,mBAAmB;QAEzC,sBAAsB,EAAE,yBAAyB;QAEjD,wBAAwB,EAAE,sBAAsB;KACjD,CAAC;IAEF,IAAM,YAAY,GAAG,wBAAc,CAAC;QAClC,OAAO,EAAE;YACP,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,OAAO;SAClB;KACF,CAAC,CAAC;IAEH,IAAM,cAAc,GAAG,sBAAS,CAAC,MAAM,CAAC;IACxC,IAAM,IAAI,GAAG,uFAAuF,CAAC;IAExF,QAAA,sBAAsB,GAAa;QACxC,IAAA,yBAAiE,EAAhE,aAAK,EAAE,gBAAyD,CAAC;QAExE,IAAM,YAAY,GAAG,UAAC,IAA6B;YACjD,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QAEF,IAAM,OAAO,GAAG;YACd,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QAEF,OAAO,CACL;YACE,0NAGI;YACJ,oBAAC,uBAAU,IACT,SAAS,EAAE,YAAY,CAAC,OAAO,EAC/B,KAAK,EAAC,YAAY,EAClB,UAAU,EAAE,KAAK,EACjB,cAAc,EAAE,IAAI,EACpB,SAAS,EAAE,IAAI,EACf,cAAc,EAAE,cAAc,EAC9B,OAAO,EAAE,gBAAgB,EACzB,KAAK,EAAE,KAAM;gBACb,6CAA6C;gBAC7C,YAAY,EAAE,YAAY,GAC1B;YACF,oBAAC,sBAAa;YACZ,6CAA6C;;gBAA7C,6CAA6C;gBAC7C,OAAO,EAAE,OAAO,EAChB,IAAI,EAAC,OAAO,GACZ,CACE,CACP,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n  closeButtonAriaLabel: 'Close date picker',\n\n  isRequiredErrorMessage: 'Start date is required.',\n\n  invalidInputErrorMessage: 'Invalid date format.',\n};\n\nconst controlClass = mergeStyleSets({\n  control: {\n    margin: '0 0 15px 0',\n    maxWidth: '300px',\n  },\n});\n\nconst firstDayOfWeek = DayOfWeek.Sunday;\nconst desc = 'This field is required. One of the support input formats is year dash month dash day.';\n\nexport const DatePickerInputExample: React.FC = () => {\n  const [value, setValue] = React.useState<Date | null | undefined>(null);\n\n  const onSelectDate = (date: Date | null | undefined): void => {\n    setValue(date);\n  };\n\n  const onClick = (): void => {\n    setValue(null);\n  };\n\n  return (\n    <div>\n      <p>\n        Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker,\n        click the TextField again will dismiss the DatePicker and allow text input.\n      </p>\n      <DatePicker\n        className={controlClass.control}\n        label=\"Start date\"\n        isRequired={false}\n        allowTextInput={true}\n        ariaLabel={desc}\n        firstDayOfWeek={firstDayOfWeek}\n        strings={DayPickerStrings}\n        value={value!}\n        // eslint-disable-next-line react/jsx-no-bind\n        onSelectDate={onSelectDate}\n      />\n      <DefaultButton\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n        text=\"Clear\"\n      />\n    </div>\n  );\n};\n"]}
{"version":3,"file":"ContextualMenu.Basic.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Basic.Example.tsx"],"names":[],"mappings":";;;IAIa,QAAA,0BAA0B,GAA4B;QACjE,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAA,0BAAmE,EAAlE,0BAAkB,EAAE,6BAA8C,CAAC;QAC1E,IAAM,oBAAoB,GAAG,8BAAgB,CAAC,cAAM,OAAA,qBAAqB,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;QACjF,IAAM,oBAAoB,GAAG,8BAAgB,CAAC,cAAM,OAAA,qBAAqB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;QAElF,OAAO,CACL;;YAGE;gBACE;oBACE,2BAAG,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,+BAE1C,CACF,CACF;YACJ,oBAAC,+BAAc,IACb,KAAK,EAAE,SAAS,EAChB,MAAM,EAAE,CAAC,kBAAkB,EAC3B,MAAM,EAAE,OAAO,EACf,WAAW,EAAE,oBAAoB,EACjC,SAAS,EAAE,oBAAoB,GAC/B,CACE,CACP,CAAC;IACJ,CAAC,CAAC;IAEF,IAAM,SAAS,GAA0B;QACvC;YACE,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B;SAC1C;QACD;YACE,GAAG,EAAE,WAAW;YAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;SACzC;QACD;YACE,GAAG,EAAE,QAAQ;YACb,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B;SAC7C;QACD;YACE,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B;SAC3C;QACD;YACE,GAAG,EAAE,YAAY;YACjB,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC;SACjD;QACD;YACE,GAAG,EAAE,cAAc;YACnB,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,iBAAiB;SACxB;QACD;YACE,GAAG,EAAE,gBAAgB;YACrB,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,QAAQ;SACjB;QACD;YACE,GAAG,EAAE,iBAAiB;YACtB,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,iBAAiB;YACvB,OAAO,EAAE,UAAC,EAA2D;gBACnE,KAAK,CAAC,cAAc,CAAC,CAAC;gBACtB,EAAE,CAAC,cAAc,EAAE,CAAC;YACtB,CAAC;YACD,MAAM,EAAE,QAAQ;SACjB;QACD;YACE,GAAG,EAAE,UAAU;YACf,IAAI,EAAE,eAAe;YACrB,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,EAAvD,CAAuD;SACvE;KACF,CAAC","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, ContextualMenuItemType, IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { useConstCallback } from '@uifabric/react-hooks';\n\nexport const ContextualMenuBasicExample: React.FunctionComponent = () => {\n  const linkRef = React.useRef(null);\n  const [showContextualMenu, setShowContextualMenu] = React.useState(false);\n  const onShowContextualMenu = useConstCallback(() => setShowContextualMenu(true));\n  const onHideContextualMenu = useConstCallback(() => setShowContextualMenu(false));\n\n  return (\n    <div>\n      This example directly uses ContextualMenu to show how it can be attached to arbitrary elements. The remaining\n      examples use ContextualMenu through Fluent UI Button components.\n      <p>\n        <b>\n          <a ref={linkRef} onClick={onShowContextualMenu}>\n            Click for ContextualMenu\n          </a>\n        </b>\n      </p>\n      <ContextualMenu\n        items={menuItems}\n        hidden={!showContextualMenu}\n        target={linkRef}\n        onItemClick={onHideContextualMenu}\n        onDismiss={onHideContextualMenu}\n      />\n    </div>\n  );\n};\n\nconst menuItems: IContextualMenuItem[] = [\n  {\n    key: 'newItem',\n    text: 'New',\n    onClick: () => console.log('New clicked'),\n  },\n  {\n    key: 'divider_1',\n    itemType: ContextualMenuItemType.Divider,\n  },\n  {\n    key: 'rename',\n    text: 'Rename',\n    onClick: () => console.log('Rename clicked'),\n  },\n  {\n    key: 'edit',\n    text: 'Edit',\n    onClick: () => console.log('Edit clicked'),\n  },\n  {\n    key: 'properties',\n    text: 'Properties',\n    onClick: () => console.log('Properties clicked'),\n  },\n  {\n    key: 'linkNoTarget',\n    text: 'Link same window',\n    href: 'http://bing.com',\n  },\n  {\n    key: 'linkWithTarget',\n    text: 'Link new window',\n    href: 'http://bing.com',\n    target: '_blank',\n  },\n  {\n    key: 'linkWithOnClick',\n    name: 'Link click',\n    href: 'http://bing.com',\n    onClick: (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      alert('Link clicked');\n      ev.preventDefault();\n    },\n    target: '_blank',\n  },\n  {\n    key: 'disabled',\n    text: 'Disabled item',\n    disabled: true,\n    onClick: () => console.error('Disabled item should not be clickable.'),\n  },\n];\n"]}
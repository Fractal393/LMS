{"version":3,"file":"ContextualMenu.Icon.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Icon.Example.tsx"],"names":[],"mappings":";;;IAaA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEpB,QAAA,yBAAyB,GAA4B;QAC1D,IAAA,0BAAqD,EAApD,mBAAW,EAAE,sBAAuC,CAAC;QAE5D,IAAM,aAAa,GAAG,8BAAgB,CAAC,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC,CAAC;QACnE,IAAM,aAAa,GAAG,8BAAgB,CAAC,cAAM,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAEpE,IAAM,SAAS,GAA0B,sBAAQ,CAAC;YAChD;gBACE,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,cAAc;gBACpB,YAAY,EAAE,UAAC,KAA+B;oBAC5C,OAAO,CACL,8BAAM,SAAS,EAAE,MAAM,CAAC,aAAa;wBACnC,oBAAC,WAAI,IAAC,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,CAAC,YAAY,GAAI;wBACpE,oBAAC,WAAI,IAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ,GAAI,CACvD,CACR,CAAC;gBACJ,CAAC;aACF;YACD;gBACE,GAAG,EAAE,SAAS;gBACd,SAAS,EAAE;oBACT,QAAQ,EAAE,KAAK;iBAChB;gBACD,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,GAAG,EAAE,QAAQ;gBACb,OAAO,EAAE,aAAa;gBACtB,SAAS,EAAE;oBACT,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAE;wBACL,KAAK,EAAE,QAAQ;qBAChB;iBACF;gBACD,IAAI,EAAE,0BAA0B;gBAChC,KAAK,EAAE,eAAe;aACvB;YACD;gBACE,GAAG,EAAE,WAAW;gBAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;aACzC;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,SAAS,EAAE;oBACT,QAAQ,EAAE,OAAO;iBAClB;gBACD,IAAI,EAAE,OAAO;aACd;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,SAAS,EAAE;oBACT,QAAQ,EAAE,OAAO;iBAClB;gBACD,IAAI,EAAE,OAAO;aACd;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,SAAS,EAAE;oBACT,QAAQ,EAAE,uBAAuB;iBAClC;gBACD,IAAI,EAAE,OAAO;aACd;SACF,CAAC,CAAC;QAEH,IAAM,SAAS,GAAyB,sBAAQ,CAAC;YAC/C,kBAAkB,EAAE,IAAI;YACxB,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QAEH,OAAO,CACL;YACE,oBAAC,sBAAa,IAAC,IAAI,EAAC,0BAA0B,EAAC,SAAS,EAAE,SAAS,GAAI;YACtE,WAAW,IAAI,CACd,oBAAC,iBAAO,IAAC,eAAe,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa;gBACtD,oBAAC,sBAAa,IAAC,OAAO,EAAE,aAAa,EAAE,IAAI,EAAC,aAAa,GAAG,CACpD,CACX,CACG,CACP,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { useConst, useConstCallback } from '@uifabric/react-hooks';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport {\n  ContextualMenuItemType,\n  IContextualMenuProps,\n  IContextualMenuItem,\n  IContextualMenuItemProps,\n} from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport * as stylesImport from './ContextualMenuExample.scss';\n\nconst styles: any = stylesImport;\n\nexport const ContextualMenuIconExample: React.FunctionComponent = () => {\n  const [showCallout, setShowCallout] = React.useState(false);\n\n  const onShowCallout = useConstCallback(() => setShowCallout(true));\n  const onHideCallout = useConstCallback(() => setShowCallout(false));\n\n  const menuItems: IContextualMenuItem[] = useConst([\n    {\n      key: 'openInWord',\n      text: 'Open in Word',\n      onRenderIcon: (props: IContextualMenuItemProps) => {\n        return (\n          <span className={styles.iconContainer}>\n            <Icon iconName={'WordLogoFill16'} className={styles.logoFillIcon} />\n            <Icon iconName={'WordLogo16'} className={styles.logoIcon} />\n          </span>\n        );\n      },\n    },\n    {\n      key: 'newItem',\n      iconProps: {\n        iconName: 'Add',\n      },\n      text: 'New',\n    },\n    {\n      key: 'upload',\n      onClick: onShowCallout,\n      iconProps: {\n        iconName: 'Upload',\n        style: {\n          color: 'salmon',\n        },\n      },\n      text: 'Upload (Click for popup)',\n      title: 'Upload a file',\n    },\n    {\n      key: 'divider_1',\n      itemType: ContextualMenuItemType.Divider,\n    },\n    {\n      key: 'share',\n      iconProps: {\n        iconName: 'Share',\n      },\n      text: 'Share',\n    },\n    {\n      key: 'print',\n      iconProps: {\n        iconName: 'Print',\n      },\n      text: 'Print',\n    },\n    {\n      key: 'music',\n      iconProps: {\n        iconName: 'MusicInCollectionFill',\n      },\n      text: 'Music',\n    },\n  ]);\n\n  const menuProps: IContextualMenuProps = useConst({\n    shouldFocusOnMount: true,\n    items: menuItems,\n  });\n\n  return (\n    <div>\n      <DefaultButton text=\"Click for ContextualMenu\" menuProps={menuProps} />\n      {showCallout && (\n        <Callout setInitialFocus={true} onDismiss={onHideCallout}>\n          <DefaultButton onClick={onHideCallout} text=\"Hello Popup\" />\n        </Callout>\n      )}\n    </div>\n  );\n};\n"]}
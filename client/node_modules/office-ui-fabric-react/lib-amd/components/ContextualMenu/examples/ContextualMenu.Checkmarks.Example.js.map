{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ContextualMenuItemType,\n  DirectionalHint,\n  IContextualMenuItem,\n  IContextualMenuProps,\n} from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nconst keys: string[] = [\n  'newItem',\n  'share',\n  'mobile',\n  'enablePrint',\n  'enableMusic',\n  'newSub',\n  'emailMessage',\n  'calendarEvent',\n  'disabledNewSub',\n  'disabledEmailMessage',\n  'disabledCalendarEvent',\n  'splitButtonSubMenuLeftDirection',\n  'emailMessageLeft',\n  'calendarEventLeft',\n  'disabledPrimarySplit',\n];\n\nexport const ContextualMenuCheckmarksExample: React.FunctionComponent = () => {\n  const [selection, setSelection] = React.useState<{ [key: string]: boolean }>({});\n\n  const onToggleSelect = React.useCallback(\n    (ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem): void => {\n      ev && ev.preventDefault();\n\n      if (item) {\n        setSelection({ ...selection, [item.key]: selection[item.key] === undefined ? true : !selection[item.key] });\n      }\n    },\n    [selection],\n  );\n\n  const menuItems: IContextualMenuItem[] = React.useMemo(\n    () => [\n      {\n        key: keys[0],\n        text: 'New',\n        canCheck: true,\n        isChecked: selection[keys[0]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[1],\n        text: 'Share',\n        canCheck: true,\n        isChecked: selection[keys[1]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[2],\n        text: 'Mobile',\n        canCheck: true,\n        isChecked: selection[keys[2]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: 'divider_1',\n        itemType: ContextualMenuItemType.Divider,\n      },\n\n      {\n        key: keys[3],\n        text: 'Print',\n        canCheck: true,\n        isChecked: selection[keys[3]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[4],\n        text: 'Music',\n        canCheck: true,\n        isChecked: selection[keys[4]],\n        onClick: onToggleSelect,\n      },\n      {\n        key: keys[5],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          items: [\n            {\n              key: keys[6],\n              text: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[6]],\n              onClick: onToggleSelect,\n            },\n            {\n              key: keys[7],\n              text: 'Calendar event',\n              canCheck: true,\n              isChecked: selection[keys[7]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        text: 'Split Button',\n        canCheck: true,\n        isChecked: selection[keys[5]],\n        split: true,\n        onClick: onToggleSelect,\n        ariaLabel: 'Split Button. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[8],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          items: [\n            {\n              key: keys[9],\n              text: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[9]],\n              onClick: onToggleSelect,\n            },\n            {\n              key: keys[10],\n              text: 'Calendar event',\n              canCheck: true,\n              isChecked: selection[keys[10]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        text: 'Split Button',\n        canCheck: true,\n        isChecked: selection[keys[8]],\n        split: true,\n        onClick: onToggleSelect,\n        disabled: true,\n        ariaLabel: 'Split Button. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[11],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          directionalHint: DirectionalHint.leftCenter,\n          items: [\n            {\n              key: keys[12],\n              text: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[12]],\n              onClick: onToggleSelect,\n            },\n            {\n              key: keys[13],\n              text: 'Calendar event',\n              canCheck: true,\n              isChecked: selection[keys[13]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        text: 'Split Button Left Menu',\n        canCheck: true,\n        isChecked: selection[keys[11]],\n        split: true,\n        onClick: onToggleSelect,\n        ariaLabel: 'Split Button Left Menu. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[12],\n        iconProps: {\n          iconName: 'MusicInCollectionFill',\n        },\n        subMenuProps: {\n          items: [\n            {\n              key: keys[12],\n              name: 'Email message',\n              canCheck: true,\n              isChecked: selection[keys[12]],\n              onClick: onToggleSelect,\n            },\n          ],\n        },\n        name: 'Split Button Disabled Primary',\n        split: true,\n        primaryDisabled: true,\n        ariaLabel: 'Split Button Disabled Primary. Click to check/uncheck. Press right arrow key to open submenu.',\n      },\n      {\n        key: keys[13],\n        iconProps: {\n          iconName: selection![keys[13]] ? 'SingleBookmarkSolid' : 'SingleBookmark',\n        },\n        name: selection![keys[13]] ? 'Toogled command no checkmark' : 'Toogle command no checkmark',\n        canCheck: false,\n        isChecked: selection![keys[13]],\n        onClick: onToggleSelect,\n      },\n    ],\n    [selection, onToggleSelect],\n  );\n\n  const menuProps: IContextualMenuProps = React.useMemo(\n    () => ({\n      shouldFocusOnMount: true,\n      items: menuItems,\n    }),\n    [menuItems],\n  );\n\n  return <DefaultButton text=\"Click for ContextualMenu\" menuProps={menuProps} />;\n};\n"]}
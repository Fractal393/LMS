{"version":3,"file":"FocusTrapZone.Nested.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Nested.Example.tsx"],"names":[],"mappings":";;;IAQA,IAAM,cAAc,GAAG,2BAAe,CACpC,UAAC,QAAiB,IAA4B,OAAA,CAAC;QAC7C,IAAI,EAAE,EAAE,MAAM,EAAE,gBAAa,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,EAAE,OAAO,EAAE,EAAE,EAAE;KACnF,CAAC,EAF4C,CAE5C,CACH,CAAC;IAEF,IAAM,WAAW,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IACxC,IAAM,sBAAsB,GAA2B,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;IAChF,IAAM,kBAAkB,GAA6E,UAAA,KAAK;QAClG,IAAA,oCAA0D,EAAzD,gBAAQ,EAAI,6BAA6C,CAAC;QACzD,IAAA,6BAAU,EAAE,yBAAQ,CAAW;QACvC,IAAM,qBAAqB,GAAG;YAC5B,KAAK,CAAC,YAAU,UAAU,aAAU,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,OAAO,CACL,oBAAC,6BAAa,IAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,oBAAoB,EAAE,KAAK;YAC7D,oBAAC,aAAK,IAAC,eAAe,EAAC,OAAO,EAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc,CAAC,QAAQ,CAAC;gBAClF,oBAAC,eAAM,IACL,OAAO,EAAE,QAAQ,EACjB,QAAQ,EAAE,cAAc,EACxB,KAAK,EAAE,mBAAmB,GAAG,UAAU,EACvC,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK;oBACb,sFAAsF;oBACtF,MAAM,EAAE,UAAU,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS,GAC/E;gBACF,oBAAC,sBAAa;gBACZ,6CAA6C;;oBAA7C,6CAA6C;oBAC7C,OAAO,EAAE,qBAAqB,EAC9B,IAAI,EAAE,UAAQ,UAAU,YAAS,GACjC;gBACD,QAAQ,CACH,CACM,CACjB,CAAC;IACJ,CAAC,CAAC;IAEW,QAAA,0BAA0B,GAAG,cAAM,OAAA,CAC9C;QACE,oBAAC,kBAAkB,IAAC,UAAU,EAAE,CAAC;YAC/B,oBAAC,kBAAkB,IAAC,UAAU,EAAE,CAAC;gBAC/B,oBAAC,kBAAkB,IAAC,UAAU,EAAE,CAAC,GAAI;gBACrC,oBAAC,kBAAkB,IAAC,UAAU,EAAE,CAAC,GAAI,CAClB;YACrB,oBAAC,kBAAkB,IAAC,UAAU,EAAE,CAAC,GAAI,CAClB,CACjB,CACP,EAV+C,CAU/C,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { Stack, IStackStyles } from 'office-ui-fabric-react/lib/Stack';\nimport { Toggle, IToggleStyles } from 'office-ui-fabric-react/lib/Toggle';\nimport { memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst getStackStyles = memoizeFunction(\n  (isActive: boolean): Partial<IStackStyles> => ({\n    root: { border: `2px solid ${isActive ? '#ababab' : 'transparent'}`, padding: 10 },\n  }),\n);\n\nconst stackTokens = { childrenGap: 10 };\nconst fixedWidthToggleStyles: Partial<IToggleStyles> = { root: { width: 200 } };\nconst FocusTrapComponent: React.FunctionComponent<React.PropsWithChildren<{ zoneNumber: number }>> = props => {\n  const [isActive, { toggle: toggleIsActive }] = useBoolean(false);\n  const { zoneNumber, children } = props;\n  const onStringButtonClicked = (): void => {\n    alert(`Button ${zoneNumber} clicked`);\n  };\n\n  return (\n    <FocusTrapZone disabled={!isActive} forceFocusInsideTrap={false}>\n      <Stack horizontalAlign=\"start\" tokens={stackTokens} styles={getStackStyles(isActive)}>\n        <Toggle\n          checked={isActive}\n          onChange={toggleIsActive}\n          label={'Enable trap zone ' + zoneNumber}\n          onText=\"On (toggle to exit)\"\n          offText=\"Off\"\n          // Set a width on these toggles in the horizontal zone to prevent jumping when enabled\n          styles={zoneNumber >= 2 && zoneNumber <= 4 ? fixedWidthToggleStyles : undefined}\n        />\n        <DefaultButton\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={onStringButtonClicked}\n          text={`Zone ${zoneNumber} button`}\n        />\n        {children}\n      </Stack>\n    </FocusTrapZone>\n  );\n};\n\nexport const FocusTrapZoneNestedExample = () => (\n  <div>\n    <FocusTrapComponent zoneNumber={1}>\n      <FocusTrapComponent zoneNumber={2}>\n        <FocusTrapComponent zoneNumber={3} />\n        <FocusTrapComponent zoneNumber={4} />\n      </FocusTrapComponent>\n      <FocusTrapComponent zoneNumber={5} />\n    </FocusTrapComponent>\n  </div>\n);\n"]}
{"version":3,"file":"FocusTrapZone.DialogInPanel.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.DialogInPanel.Example.tsx"],"names":[],"mappings":";;;IAOA,IAAM,kBAAkB,GAAG;QACzB,IAAI,EAAE,mBAAU,CAAC,MAAM;QACvB,KAAK,EAAE,qFAAqF;QAC5F,OAAO,EAAE,kEAAkE;KAC5E,CAAC;IAEF,IAAM,UAAU,GAAG;QACjB,WAAW,EAAE,WAAW;QACxB,cAAc,EAAE,aAAa;QAC7B,UAAU,EAAE,KAAK;QACjB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;KACpC,CAAC;IAEW,QAAA,iCAAiC,GAA4B;QAClE,IAAA,oCAA4D,EAA3D,iBAAS,EAAI,8BAA8C,CAAC;QAC7D,IAAA,mCAA6D,EAA5D,kBAAU,EAAI,+BAA8C,CAAC;QACpE,OAAO,CACL;YACE,oBAAC,sBAAa,IAAC,IAAI,EAAC,YAAY,EAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,eAAe,GAAI;YACpG,oBAAC,aAAK,IACJ,MAAM,EAAE,SAAS,EACjB,IAAI,EAAE,iBAAS,CAAC,aAAa,EAC7B,SAAS,EAAE,eAAe,EAC1B,UAAU,EAAC,8EAA8E,EACzF,oBAAoB,EAAC,OAAO;gBAE5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,aAAa,EAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,gBAAgB,GAAI;gBACvG,oBAAC,eAAM,IACL,MAAM,EAAE,UAAU,EAClB,SAAS,EAAE,gBAAgB,EAC3B,UAAU,QACV,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,UAAU;oBAEtB,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,IAAI,GAAG;wBACtD,oBAAC,sBAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,QAAQ,GAAG,CAC7C,CACR,CACH,CACJ,CACP,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { useBoolean } from '@uifabric/react-hooks';\n\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'This dialog also makes use of FocusTrapZone. Focus should be trapped in the dialog.',\n  subText: \"Focus will move back to the panel if you press 'OK' or 'Cancel'.\",\n};\n\nconst modelProps = {\n  titleAriaId: 'myLabelId',\n  subtitleAriaId: 'mySubTextId',\n  isBlocking: false,\n  styles: { main: { maxWidth: 450 } },\n};\n\nexport const FocusTrapZoneDialogInPanelExample: React.FunctionComponent = () => {\n  const [showPanel, { toggle: toggleShowPanel }] = useBoolean(false);\n  const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n  return (\n    <div>\n      <DefaultButton text=\"Open Panel\" secondaryText=\"Opens the Sample Panel\" onClick={toggleShowPanel} />\n      <Panel\n        isOpen={showPanel}\n        type={PanelType.smallFixedFar}\n        onDismiss={toggleShowPanel}\n        headerText=\"This panel makes use of FocusTrapZone. Focus should be trapped in the panel.\"\n        closeButtonAriaLabel=\"Close\"\n      >\n        <DefaultButton text=\"Open Dialog\" secondaryText=\"Opens the Sample Dialog\" onClick={toggleHideDialog} />\n        <Dialog\n          hidden={hideDialog}\n          onDismiss={toggleHideDialog}\n          isBlocking\n          dialogContentProps={dialogContentProps}\n          modalProps={modelProps}\n        >\n          <DialogFooter>\n            <PrimaryButton onClick={toggleHideDialog} text=\"OK\" />\n            <DefaultButton onClick={toggleHideDialog} text=\"Cancel\" />\n          </DialogFooter>\n        </Dialog>\n      </Panel>\n    </div>\n  );\n};\n"]}
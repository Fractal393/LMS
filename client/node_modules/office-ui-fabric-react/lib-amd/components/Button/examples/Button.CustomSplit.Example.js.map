{"version":3,"file":"Button.CustomSplit.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.CustomSplit.Example.tsx"],"names":[],"mappings":";;;;IAgBA,IAAM,uBAAuB,GAAkB;QAC7C,qBAAqB,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;QAC9E,mBAAmB,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE;QACxC,kBAAkB,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAChH,oBAAoB,EAAE;YACpB,SAAS;gBACP,GAAC,6CAAoB,IAAG,EAAE,MAAM,EAAE,MAAM,EAAE;mBAC3C;SACF;KACF,CAAC;IAEF,IAAM,SAAS,GAAyB;QACtC,KAAK,EAAE;YACL;gBACE,GAAG,EAAE,cAAc;gBACnB,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;aAChC;YACD;gBACE,GAAG,EAAE,eAAe;gBACpB,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;aACpC;SACF;KACF,CAAC;IAEF,IAAM,OAAO,GAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAEnC,QAAA,wBAAwB,GAAiD,UAAA,KAAK;QACjF,IAAA,yBAAQ,EAAE,uBAAO,CAAW;QAEpC,OAAO,CACL;YACE,oBAAC,8BAAK,mDAAiD;YACvD,oBAAC,mCAAU,IACT,KAAK,QACL,SAAS,EAAE,OAAO,EAClB,oBAAoB,EAAC,eAAe,0BACf,cAAc,EACnC,MAAM,EAAE,uBAAuB,EAC/B,SAAS,EAAE,SAAS,EACpB,SAAS,EAAC,UAAU,EACpB,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,GAChB,CACE,CACP,CAAC;IACJ,CAAC,CAAC;IAEF,SAAS,aAAa;QACpB,KAAK,CAAC,SAAS,CAAC,CAAC;IACnB,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  IButtonStyles,\n  IconButton,\n  HighContrastSelector,\n  Label,\n  IContextualMenuProps,\n  IIconProps,\n} from 'office-ui-fabric-react';\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\nconst customSplitButtonStyles: IButtonStyles = {\n  splitButtonMenuButton: { backgroundColor: 'white', width: 28, border: 'none' },\n  splitButtonMenuIcon: { fontSize: '7px' },\n  splitButtonDivider: { backgroundColor: '#c8c8c8', width: 1, right: 26, position: 'absolute', top: 4, bottom: 4 },\n  splitButtonContainer: {\n    selectors: {\n      [HighContrastSelector]: { border: 'none' },\n    },\n  },\n};\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'emailMessage',\n      text: 'Email message',\n      iconProps: { iconName: 'Mail' },\n    },\n    {\n      key: 'calendarEvent',\n      text: 'Calendar event',\n      iconProps: { iconName: 'Calendar' },\n    },\n  ],\n};\n\nconst addIcon: IIconProps = { iconName: 'Add' };\n\nexport const ButtonSplitCustomExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return (\n    <div>\n      <Label>Split button with icon and custom styles</Label>\n      <IconButton\n        split\n        iconProps={addIcon}\n        splitButtonAriaLabel=\"See 2 options\"\n        aria-roledescription=\"split button\"\n        styles={customSplitButtonStyles}\n        menuProps={menuProps}\n        ariaLabel=\"New item\"\n        onClick={_alertClicked}\n        disabled={disabled}\n        checked={checked}\n      />\n    </div>\n  );\n};\n\nfunction _alertClicked(): void {\n  alert('Clicked');\n}\n"]}
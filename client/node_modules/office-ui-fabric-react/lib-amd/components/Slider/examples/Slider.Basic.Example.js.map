{"version":3,"file":"Slider.Basic.Example.js","sourceRoot":"../src/","sources":["components/Slider/examples/Slider.Basic.Example.tsx"],"names":[],"mappings":";;;IAIA,IAAM,WAAW,GAA0B,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;IACvE,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IACtD,IAAM,mBAAmB,GAAG,UAAC,KAAa,IAAK,OAAG,KAAK,aAAU,EAAlB,CAAkB,CAAC;IAClE,IAAM,iBAAiB,GAAG,UAAC,KAAa,IAAK,OAAG,KAAK,MAAG,EAAX,CAAW,CAAC;IAE5C,QAAA,kBAAkB,GAA4B;QACnD,IAAA,sBAAiD,EAAhD,mBAAW,EAAE,sBAAmC,CAAC;QACxD,IAAM,cAAc,GAAG,UAAC,KAAa,IAAK,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC;QAChE,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW;YAC7C,oBAAC,eAAM,OAAG;YACV,oBAAC,eAAM,IAAC,KAAK,EAAC,yBAAyB,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,SAAS,QAAC,UAAU,SAAG;YAC5G,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,QAAC,QAAQ,SAAG;YACtG,oBAAC,eAAM,IACL,KAAK,EAAC,oBAAoB,EAC1B,GAAG,EAAE,EAAE,EACP,KAAK,EAAE,WAAW,EAClB,SAAS;gBACT,6CAA6C;gBAC7C,QAAQ,EAAE,cAAc,GACxB;YACF,oBAAC,eAAM,IACL,KAAK,EAAC,8BAA8B,EACpC,GAAG,EAAE,GAAG,EACR,aAAa,EAAE,mBAAmB,EAClC,WAAW,EAAE,iBAAiB,EAC9B,SAAS,SACT;YACF,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,QAAC,cAAc,SAAG,CACjG,CACT,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { IStackTokens, Stack, IStackStyles } from 'office-ui-fabric-react/lib/Stack';\n\nconst stackStyles: Partial<IStackStyles> = { root: { maxWidth: 300 } };\nconst stackTokens: IStackTokens = { childrenGap: 20 };\nconst sliderAriaValueText = (value: number) => `${value} percent`;\nconst sliderValueFormat = (value: number) => `${value}%`;\n\nexport const SliderBasicExample: React.FunctionComponent = () => {\n  const [sliderValue, setSliderValue] = React.useState(0);\n  const sliderOnChange = (value: number) => setSliderValue(value);\n  return (\n    <Stack tokens={stackTokens} styles={stackStyles}>\n      <Slider />\n      <Slider label=\"Snapping slider example\" min={0} max={50} step={10} defaultValue={20} showValue snapToStep />\n      <Slider label=\"Disabled example\" min={50} max={500} step={50} defaultValue={300} showValue disabled />\n      <Slider\n        label=\"Controlled example\"\n        max={10}\n        value={sliderValue}\n        showValue\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={sliderOnChange}\n      />\n      <Slider\n        label=\"Example with formatted value\"\n        max={100}\n        ariaValueText={sliderAriaValueText}\n        valueFormat={sliderValueFormat}\n        showValue\n      />\n      <Slider label=\"Origin from zero\" min={-5} max={5} step={1} defaultValue={2} showValue originFromZero />\n    </Stack>\n  );\n};\n"]}
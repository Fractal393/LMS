{"version":3,"file":"Keytips.Overflow.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Overflow.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { keytipMap } from 'office-ui-fabric-react/lib/components/Keytip/examples/KeytipSetup';\nimport { IOverflowSetItemProps, OverflowSet, IOverflowSetStyles } from 'office-ui-fabric-react/lib/OverflowSet';\nimport { CommandBarButton, DefaultButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\n\nconst overflowSetStyles: Partial<IOverflowSetStyles> = { root: { marginBottom: 28 } };\nconst commandBarButtonStyles: Partial<IButtonStyles> = { root: { padding: '10px' } };\n\nconst initialItems = [\n  {\n    key: 'item1',\n    name: 'Link 1',\n    onClick: () => {\n      return;\n    },\n    keytipProps: keytipMap.OverflowButton1,\n  },\n  {\n    key: 'item2',\n    name: 'Link 2',\n    onClick: () => {\n      return;\n    },\n    keytipProps: keytipMap.OverflowButton2,\n  },\n  {\n    key: 'item3',\n    name: 'Link 3',\n    onClick: () => {\n      return;\n    },\n    keytipProps: keytipMap.OverflowButton3,\n  },\n];\n\nconst initialOverflowItems = [\n  {\n    key: 'item5',\n    name: 'Overflow Link 1',\n    keytipProps: {\n      ...keytipMap.OverflowButton5,\n      onExecute: (el: HTMLElement | null) => {\n        if (el) {\n          el.click();\n        } else {\n          console.log('first overflow item');\n        }\n      },\n    },\n    onClick: () => {\n      console.log('first overflow item');\n    },\n  },\n  {\n    key: 'item6',\n    name: 'Overflow Link 2',\n    keytipProps: {\n      ...keytipMap.OverflowButton6,\n      onExecute: (el: HTMLElement | null) => {\n        if (el) {\n          el.click();\n        } else {\n          console.log('second overflow item');\n        }\n      },\n    },\n    onClick: () => {\n      console.log('second overflow item');\n    },\n    subMenuProps: {\n      items: [\n        {\n          key: 'overflowSubMenu1',\n          name: 'Overflow Submenu Item 1',\n          keytipProps: keytipMap.OverflowSubMenuButton1,\n        },\n        {\n          key: 'overflowSubMenu2',\n          name: 'Overflow Submenu Item 2',\n        },\n      ],\n    },\n  },\n];\n\nexport const KeytipsOverflowExample: React.FunctionComponent = () => {\n  const [items, setItems] = React.useState(initialItems);\n  const [overflowItems, setOverflowItems] = React.useState<typeof initialItems>(initialOverflowItems);\n\n  const onRenderItem = (item: IOverflowSetItemProps): JSX.Element => (\n    <CommandBarButton role=\"menuitem\" {...item} styles={commandBarButtonStyles} menuProps={item.subMenuProps}>\n      {item.name}\n    </CommandBarButton>\n  );\n\n  const onRenderOverflowButton = (): JSX.Element => {\n    return (\n      <CommandBarButton\n        menuIconProps={{ iconName: 'More' }}\n        menuProps={{ items: overflowItems! }}\n        keytipProps={keytipMap.OverflowButton4}\n      />\n    );\n  };\n\n  const onToggleOverflowItems = React.useCallback(() => {\n    if (overflowItems.length) {\n      setItems(items.concat(overflowItems));\n      setOverflowItems([]);\n    } else {\n      setOverflowItems(items.slice(-2));\n      setItems(items.slice(0, -2));\n    }\n  }, [items, overflowItems]);\n\n  return (\n    <div>\n      <p>\n        Keytips in an overflow will have a special behavior. When a keytip goes into the overflow button menu, it will\n        also register a 'persisted' keytip that can be accessed from the top level as a shortcut. A shortcut to a normal\n        button item will trigger that button. A shortcut to a menu button item will open the overflow button menu and\n        then open that item's menu as well. In this example triggering 'T' and 'Y' will show off this functionality (see\n        console messages).\n      </p>\n      <OverflowSet\n        role=\"menubar\"\n        styles={overflowSetStyles}\n        items={items}\n        overflowItems={overflowItems}\n        keytipSequences={keytipMap.OverflowButton4.keySequences}\n        // eslint-disable-next-line react/jsx-no-bind\n        onRenderOverflowButton={onRenderOverflowButton}\n        // eslint-disable-next-line react/jsx-no-bind\n        onRenderItem={onRenderItem}\n      />\n\n      <p>When an item is moved out of the overflow well, it behaves as a normal keytip.</p>\n      <DefaultButton text={'Move overflow items'} onClick={onToggleOverflowItems} />\n    </div>\n  );\n};\n"]}
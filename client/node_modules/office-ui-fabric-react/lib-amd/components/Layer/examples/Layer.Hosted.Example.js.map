{"version":3,"file":"Layer.Hosted.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.Hosted.Example.tsx"],"names":[],"mappings":";;;IAOa,QAAA,kBAAkB,GAA4B;QACnD,IAAA,oCAA4D,EAA3D,iBAAS,EAAI,8BAA8C,CAAC;QAC7D,IAAA,oCAAoE,EAAnE,qBAAa,EAAI,kCAAkD,CAAC;QACrE,IAAA,mCAAyD,EAAxD,gBAAQ,EAAI,6BAA4C,CAAC;QAEhE,2DAA2D;QAC3D,yFAAyF;QACzF,IAAM,WAAW,GAAG,mBAAK,CAAC,WAAW,CAAC,CAAC;QAEvC,IAAM,OAAO,GAAG,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO,qCAAsC,CAAC;QAErF,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,IAAI;YACzB,oBAAC,eAAM,IAAC,KAAK,EAAC,WAAW,EAAC,WAAW,QAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,GAAI;YAEpF,QAAQ,IAAI,oBAAC,iBAAS,IAAC,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,CAAC,UAAU,GAAI;YAEzE,kWAII;YAEJ,oBAAC,eAAM,IACL,MAAM,EAAE,MAAM,CAAC,MAAM,EACrB,KAAK,EAAE,6DAA2D,WAAa,EAC/E,WAAW,QACX,OAAO,EAAE,SAAS,EAClB,QAAQ,EAAE,eAAe,GACzB;YAED,SAAS,CAAC,CAAC,CAAC,CACX,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,cAAc,IACzF,OAAO,CACF,CACT,CAAC,CAAC,CAAC,CACF,OAAO,CACR;YAED,6BAAK,SAAS,EAAE,MAAM,CAAC,UAAU,uCAAwC;YAEzE,sIAA2G;YAE3G,oBAAC,eAAM,IACL,MAAM,EAAE,MAAM,CAAC,MAAM,EACrB,KAAK,EAAC,6FAA6F,EACnG,WAAW,QACX,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,mBAAmB,GAC7B;YAED,aAAa,CAAC,CAAC,CAAC,CACf,oBAAC,aAAK,IAAC,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,cAAc,IACpE,OAAO,CACF,CACT,CAAC,CAAC,CAAC,CACF,OAAO,CACR,CACG,CACP,CAAC;IACJ,CAAC,CAAC;IAEF,IAAM,WAAW,GAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAA9B,CAA8B,CAAC;IACzD,IAAM,cAAc,GAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC,CAAC;IAE/D,IAAM,YAAY,GAA2B;QAC3C,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;KAC3B,CAAC;IACF,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;IACzB,IAAM,MAAM,sBACV,MAAM,EAAE,YAAY,IACjB,wBAAc,CAAC;QAChB,IAAI,EAAE;YACJ,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE;SACpC;QACD,UAAU,EAAE;YACV,MAAM,EAAE,GAAG;YACX,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,sBAAsB;YAClC,MAAM,EAAE,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;YAC3C,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACT,UAAU,EAAE;oBACV,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE,KAAK;oBACX,GAAG,EAAE,KAAK;oBACV,SAAS,EAAE,uBAAuB;oBAClC,oDAAoD;oBACpD,OAAO,EAAE,uCAAuC;iBACjD;aACF;SACF;QACD,OAAO,EAAE;YACP;gBACE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;gBAC3C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK;gBAC1B,UAAU,EAAE,MAAM;gBAClB,OAAO,EAAE,QAAQ;aAClB;YACD,6BAAmB,CAAC,YAAY;SACjC;QACD,UAAU,EAAE;YACV,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,kBAAkB;YACjD,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,OAAO;SAChB;KACF,CAAC,CACH,CAAC","sourcesContent":["import * as React from 'react';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { Layer, LayerHost } from 'office-ui-fabric-react/lib/Layer';\nimport { AnimationClassNames, mergeStyleSets, getTheme } from 'office-ui-fabric-react/lib/Styling';\nimport { IToggleStyles } from 'office-ui-fabric-react/lib/Toggle';\nimport { useId, useBoolean } from '@uifabric/react-hooks';\n\nexport const LayerHostedExample: React.FunctionComponent = () => {\n  const [showLayer, { toggle: toggleShowLayer }] = useBoolean(false);\n  const [showLayerNoId, { toggle: toggleShowLayerNoId }] = useBoolean(false);\n  const [showHost, { toggle: toggleShowHost }] = useBoolean(true);\n\n  // Use useId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\n  const layerHostId = useId('layerHost');\n\n  const content = <div className={styles.content}>This is example layer content.</div>;\n\n  return (\n    <div className={styles.root}>\n      <Toggle label=\"Show host\" inlineLabel checked={showHost} onChange={toggleShowHost} />\n\n      {showHost && <LayerHost id={layerHostId} className={styles.customHost} />}\n\n      <p>\n        In some cases, you may need to contain layered content within an area. Create an instance of a LayerHost along\n        with an id, and provide a hostId on the layer to render it within the specific host. (Note that it's important\n        that you don't include children within the LayerHost. It's meant to contain Layered content only.)\n      </p>\n\n      <Toggle\n        styles={styles.toggle}\n        label={`Render the box below in a Layer and target it at hostId=${layerHostId}`}\n        inlineLabel\n        checked={showLayer}\n        onChange={toggleShowLayer}\n      />\n\n      {showLayer ? (\n        <Layer hostId={layerHostId} onLayerDidMount={logDidMount} onLayerWillUnmount={logWillUnmount}>\n          {content}\n        </Layer>\n      ) : (\n        content\n      )}\n\n      <div className={styles.nonLayered}>I am normally below the content.</div>\n\n      <p>If you do not specify a hostId, the hosted layer will default to being fixed to the page by default.</p>\n\n      <Toggle\n        styles={styles.toggle}\n        label=\"Render the box below in a Layer without specifying a host, fixing it to the top of the page\"\n        inlineLabel\n        checked={showLayerNoId}\n        onChange={toggleShowLayerNoId}\n      />\n\n      {showLayerNoId ? (\n        <Layer onLayerDidMount={logDidMount} onLayerWillUnmount={logWillUnmount}>\n          {content}\n        </Layer>\n      ) : (\n        content\n      )}\n    </div>\n  );\n};\n\nconst logDidMount = () => console.log('layer did mount');\nconst logWillUnmount = () => console.log('layer will unmount');\n\nconst toggleStyles: Partial<IToggleStyles> = {\n  root: { margin: '10px 0' },\n};\nconst theme = getTheme();\nconst styles = {\n  toggle: toggleStyles,\n  ...mergeStyleSets({\n    root: {\n      selectors: { p: { marginTop: 30 } },\n    },\n    customHost: {\n      height: 100,\n      padding: 20,\n      background: 'rgba(255, 0, 0, 0.2)',\n      border: '1px dashed ' + theme.palette.black,\n      position: 'relative',\n      selectors: {\n        '&:before': {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          // double quotes required to make the string show up\n          content: '\"I am a LayerHost with id=layerhost1\"',\n        },\n      },\n    },\n    content: [\n      {\n        backgroundColor: theme.palette.themePrimary,\n        color: theme.palette.white,\n        lineHeight: '50px',\n        padding: '0 20px',\n      },\n      AnimationClassNames.scaleUpIn100,\n    ],\n    nonLayered: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n      lineHeight: '50px',\n      padding: '0 20px',\n      margin: '8px 0',\n    },\n  }),\n};\n"]}
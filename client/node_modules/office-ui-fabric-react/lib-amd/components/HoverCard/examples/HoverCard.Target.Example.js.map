{"version":3,"file":"HoverCard.Target.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.Target.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { HoverCard, IExpandingCardProps, DirectionalHint } from 'office-ui-fabric-react/lib/HoverCard';\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { KeyCodes } from 'office-ui-fabric-react/lib/Utilities';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { useBoolean, useConst } from '@uifabric/react-hooks';\n\nconst classNames = mergeStyleSets({\n  compactCard: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  expandedCard: {\n    padding: '16px 24px',\n  },\n  item: {\n    selectors: {\n      '&:hover': {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n      },\n    },\n  },\n});\n\nconst log = (text: string): (() => void) => {\n  return (): void => {\n    console.log(text);\n  };\n};\n\nconst items: IExampleItem[] = createListItems(10);\nconst columns: IColumn[] = buildColumns(items).filter(column => column.name === 'location' || column.name === 'key');\n\nconst onRenderCompactCard = (item: IExampleItem): JSX.Element => {\n  return (\n    <div className={classNames.compactCard}>\n      <a target=\"_blank\" href={`http://wikipedia.org/wiki/${item.location}`}>\n        {item.location}\n      </a>\n    </div>\n  );\n};\n\nconst onRenderExpandedCard = (item: IExampleItem): JSX.Element => {\n  return (\n    <div className={classNames.expandedCard}>\n      {item.description}\n      <DetailsList setKey=\"expandedCardSet\" items={items} columns={columns} />\n    </div>\n  );\n};\n\n/**\n * Used for the hoverable \"key\" cell. In this case, the implementation uses hooks to control\n * open/closed state, so it must be a function component (not just code within a render callback).\n */\nconst KeyCellWithHoverCard: React.FunctionComponent<{ item: IExampleItem }> = ({ item }) => {\n  const [contentRendered, { toggle: toggleContentRendered }] = useBoolean(false);\n  const targetElementRef: React.RefObject<HTMLDivElement> = React.useRef<HTMLDivElement>(null);\n  const expandingCardProps: IExpandingCardProps = useConst({\n    onRenderCompactCard,\n    onRenderExpandedCard,\n    renderData: item,\n    directionalHint: DirectionalHint.rightTopEdge,\n    gapSpace: 16,\n    calloutProps: {\n      isBeakVisible: true,\n    },\n  });\n  React.useEffect(toggleContentRendered, [toggleContentRendered]);\n\n  return (\n    <div className={classNames.item}>\n      <div ref={targetElementRef} data-is-focusable>\n        {item.key}\n        {contentRendered && (\n          <HoverCard\n            expandingCardProps={expandingCardProps}\n            target={targetElementRef.current}\n            cardDismissDelay={300}\n            onCardVisible={log('onCardVisible')}\n            onCardHide={log('onCardHide')}\n            trapFocus\n            openHotKey={KeyCodes.enter}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst onRenderItemColumn = (item: IExampleItem, index: number, column: IColumn): JSX.Element | React.ReactText => {\n  if (column.key === 'key') {\n    return <KeyCellWithHoverCard item={item} />;\n  }\n  return item[column.key as keyof IExampleItem];\n};\n\nexport const HoverCardTargetExample: React.FunctionComponent = () => {\n  return (\n    <Fabric>\n      <p>\n        Hover over the <strong>key</strong> cell of a row item to see the card or use the keyboard to navigate to it by\n        tabbing to a row and hitting the right arrow key.\n      </p>\n      <p>\n        When using the keyboard to navigate, open the card with the hotkey and it will automatically focus the first\n        focusable element in the card allowing further navigation inside the card. The hotkey is defined by the{' '}\n        <code>openHotKey</code> prop and is defined as 'enter' in the following example.\n      </p>\n      <DetailsList\n        setKey=\"hoverSet\"\n        items={items}\n        columns={columns}\n        onRenderItemColumn={onRenderItemColumn}\n        ariaLabel=\"Hover card DetailsList test\"\n      />\n    </Fabric>\n  );\n};\n"]}
{"version":3,"file":"Stack.Horizontal.Configure.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Configure.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Checkbox,\n  ICheckboxStyles,\n  DefaultPalette,\n  Dropdown,\n  IDropdownOption,\n  Slider,\n  Stack,\n  IStackStyles,\n  IStackItemStyles,\n  IStackTokens,\n  IStackProps,\n  TextField,\n} from 'office-ui-fabric-react';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { range } from '@uifabric/example-data';\nexport interface IExampleOptions {\n  numItems: number;\n  showBoxShadow: boolean;\n  preventOverflow: boolean;\n  wrap: boolean;\n  wrapperWidth: number;\n  disableShrink: boolean;\n  columnGap: number;\n  rowGap: number;\n  paddingLeft: number;\n  paddingRight: number;\n  paddingTop: number;\n  paddingBottom: number;\n  horizontalAlignment: IStackProps['horizontalAlign'];\n  verticalAlignment: IStackProps['verticalAlign'];\n  hideEmptyChildren: boolean;\n  emptyChildren: string[];\n}\n\n// Alignment options\nconst horizontalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Left' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Right' },\n  { key: 'space-around', text: 'Space around' },\n  { key: 'space-between', text: 'Space between' },\n  { key: 'space-evenly', text: 'Space evenly' },\n];\nconst verticalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Top' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Bottom' },\n];\n\n// Tokens definition\nconst sectionStackTokens: IStackTokens = { childrenGap: 10 };\nconst configureStackTokens: IStackTokens = { childrenGap: 20 };\nconst shadowItemCheckboxStyles: Partial<ICheckboxStyles> = { root: { marginRight: 10 } };\nconst wrapItemCheckboxStyles: Partial<ICheckboxStyles> = { root: { marginBottom: 10 } };\n\nconst HorizontalStackConfigureExampleContent: React.FunctionComponent<IExampleOptions> = props => {\n  const {\n    numItems,\n    showBoxShadow,\n    preventOverflow,\n    wrap,\n    wrapperWidth,\n    disableShrink,\n    columnGap,\n    rowGap,\n    paddingLeft,\n    paddingRight,\n    paddingTop,\n    paddingBottom,\n    horizontalAlignment,\n    verticalAlignment,\n    hideEmptyChildren,\n    emptyChildren,\n  } = props;\n\n  // Styles definition\n  const stackStyles: IStackStyles = {\n    root: [\n      {\n        background: DefaultPalette.themeTertiary,\n        marginLeft: 10,\n        marginRight: 10,\n        minHeight: 100,\n        width: `calc(${wrapperWidth}% - 20px)`,\n      },\n      preventOverflow && {\n        overflow: 'hidden' as 'hidden',\n      },\n    ],\n    inner: {\n      overflow: preventOverflow ? 'hidden' : ('visible' as 'hidden' | 'visible'),\n    },\n  };\n\n  const stackItemStyles: IStackItemStyles = {\n    root: {\n      alignItems: 'center',\n      background: DefaultPalette.themePrimary,\n      boxShadow: showBoxShadow ? `0px 0px 10px 5px ${DefaultPalette.themeDarker}` : '',\n      color: DefaultPalette.white,\n      display: 'flex',\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n  };\n\n  // Tokens definition\n  const exampleStackTokens: IStackTokens = {\n    childrenGap: rowGap + ' ' + columnGap,\n    padding: `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`,\n  };\n\n  return (\n    <Stack\n      horizontal\n      wrap={wrap}\n      disableShrink={disableShrink}\n      horizontalAlign={horizontalAlignment}\n      verticalAlign={verticalAlignment}\n      styles={stackStyles}\n      tokens={exampleStackTokens}\n    >\n      {range(1, numItems).map((value: number, index: number) => {\n        if (emptyChildren.indexOf(value.toString()) !== -1) {\n          return hideEmptyChildren ? (\n            <Stack.Item key={index} styles={stackItemStyles} />\n          ) : (\n            <span key={index} style={stackItemStyles.root as React.CSSProperties} />\n          );\n        }\n\n        return (\n          <span key={index} style={stackItemStyles.root as React.CSSProperties}>\n            {value}\n          </span>\n        );\n      })}\n    </Stack>\n  );\n};\n\nexport const HorizontalStackConfigureExample: React.FunctionComponent = () => {\n  const [numItems, setNumItems] = React.useState<number>(5);\n  const [showBoxShadow, { toggle: toggleShowBoxShadow }] = useBoolean(false);\n  const [wrap, { toggle: toggleWrap }] = useBoolean(false);\n  const [preventOverflow, { toggle: togglePreventOverflow }] = useBoolean(false);\n  const [disableShrink, { toggle: toggleDisableShrink }] = useBoolean(true);\n  const [wrapperWidth, setWrapperWidth] = React.useState<number>(100);\n  const [columnGap, setColumnGap] = React.useState<number>(0);\n  const [rowGap, setRowGap] = React.useState<number>(0);\n  const [paddingLeft, setPaddingLeft] = React.useState<number>(0);\n  const [paddingRight, setPaddingRight] = React.useState<number>(0);\n  const [paddingTop, setPaddingTop] = React.useState<number>(0);\n  const [paddingBottom, setPaddingBottom] = React.useState<number>(0);\n  const [horizontalAlignment, setHorizontalAlignment] = React.useState<IStackProps['horizontalAlign']>('start');\n  const [verticalAlignment, setVerticalAlignment] = React.useState<IStackProps['verticalAlign']>('start');\n  const [hideEmptyChildren, { toggle: toggleHideEmptyChildren }] = useBoolean(false);\n  const [emptyChildren, setEmptyChildren] = React.useState<string[]>([]);\n\n  return (\n    <Stack tokens={sectionStackTokens}>\n      <Stack horizontal disableShrink>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Number of items:\"\n              min={1}\n              max={30}\n              step={1}\n              defaultValue={5}\n              showValue\n              onChange={setNumItems}\n            />\n            <Stack horizontal disableShrink>\n              <Checkbox label=\"Shadow around items\" onChange={toggleShowBoxShadow} styles={shadowItemCheckboxStyles} />\n              <Checkbox label=\"Prevent item overflow\" onChange={togglePreventOverflow} />\n            </Stack>\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack horizontal disableShrink tokens={configureStackTokens}>\n            <Stack>\n              <Checkbox label=\"Wrap items\" onChange={toggleWrap} styles={wrapItemCheckboxStyles} />\n              <Checkbox label=\"Shrink items\" onChange={toggleDisableShrink} />\n            </Stack>\n            <Stack.Item grow>\n              <Slider\n                label=\"Container width:\"\n                min={1}\n                max={100}\n                step={1}\n                defaultValue={100}\n                showValue\n                onChange={setWrapperWidth}\n              />\n            </Stack.Item>\n          </Stack>\n        </Stack.Item>\n      </Stack>\n\n      <Stack horizontal disableShrink tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Horizontal gap between items:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setColumnGap}\n            />\n            <Slider\n              label=\"Vertical gap between items:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setRowGap}\n            />\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Left padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingLeft}\n            />\n            <Slider\n              label=\"Right padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingRight}\n            />\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Top padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingTop}\n            />\n            <Slider\n              label=\"Bottom padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingBottom}\n            />\n          </Stack>\n        </Stack.Item>\n      </Stack>\n\n      <Stack horizontal disableShrink verticalAlign=\"end\" tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={horizontalAlignment}\n            placeholder=\"Select Horizontal Alignment\"\n            label=\"Horizontal alignment:\"\n            options={horizontalAlignmentOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setHorizontalAlignment(option.key as IStackProps['horizontalAlign'])\n            }\n          />\n        </Stack.Item>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={verticalAlignment}\n            placeholder=\"Select Vertical Alignment\"\n            label=\"Vertical alignment:\"\n            options={verticalAlignmentOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setVerticalAlignment(option.key as IStackProps['verticalAlign'])\n            }\n          />\n        </Stack.Item>\n        <Stack.Item>\n          <Checkbox label=\"Hide empty children\" onChange={toggleHideEmptyChildren} />\n        </Stack.Item>\n        <Stack.Item grow>\n          <TextField\n            label=\"Enter a space-separated list of empty children (e.g. 1 2 3):\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLInputElement>, value?: string): void => {\n              if (value === undefined) {\n                return;\n              }\n              setEmptyChildren(value.replace(/,/g, '').split(' '));\n            }}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <HorizontalStackConfigureExampleContent\n        {...{\n          numItems,\n          showBoxShadow,\n          preventOverflow,\n          wrap,\n          wrapperWidth,\n          disableShrink,\n          columnGap,\n          rowGap,\n          paddingLeft,\n          paddingRight,\n          paddingTop,\n          paddingBottom,\n          horizontalAlignment,\n          verticalAlignment,\n          hideEmptyChildren,\n          emptyChildren,\n        }}\n      />\n    </Stack>\n  );\n};\n"]}
{"version":3,"file":"Stack.Horizontal.WrapAdvanced.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.WrapAdvanced.Example.tsx"],"names":[],"mappings":";;;IAiBA,iCAAiC;IACjC,IAAM,UAAU,GAAwB;QACtC,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,wBAAc,CAAC,YAAY;QACvC,KAAK,EAAE,wBAAc,CAAC,KAAK;QAC3B,OAAO,EAAE,MAAM;QACf,MAAM,EAAE,EAAE;QACV,cAAc,EAAE,QAAQ;QACxB,KAAK,EAAE,EAAE;KACV,CAAC;IAEF,oBAAoB;IACpB,IAAM,0BAA0B,GAAsB;QACpD,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE;QAC9B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;QACjC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;QAC7B,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE;QAC7C,EAAE,GAAG,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE;QAC/C,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE;KAC9C,CAAC;IACF,IAAM,wBAAwB,GAAsB;QAClD,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;QAC7B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;QACjC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC/B,CAAC;IACF,IAAM,eAAe,GAAsB;QACzC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;QACnC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;QAC7B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;KAClC,CAAC;IAEF,oBAAoB;IACpB,IAAM,kBAAkB,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IAC7D,IAAM,oBAAoB,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IAC/D,IAAM,eAAe,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IAE1D,IAAM,yCAAyC,GAA6C,UAAA,KAAK;QACvF,IAAA,6BAAU,EAAE,uCAAe,EAAE,yBAAQ,EAAE,+CAAmB,EAAE,2CAAiB,CAAW;QAEhG,6BAA6B;QAC7B,IAAM,WAAW,GAAiB;YAChC,IAAI,EAAE;gBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;gBACxC,KAAK,EAAK,UAAU,MAAG;gBACvB,QAAQ,UAAA;aACT;SACF,CAAC;QACF,IAAM,eAAe,GAAwB,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC;QAEzE,OAAO,CACL,6BAAK,KAAK,EAAE,eAAe;YACzB,oBAAC,aAAK,IACJ,UAAU,QACV,YAAY,QACZ,IAAI,QACJ,eAAe,EAAE,mBAAmB,EACpC,aAAa,EAAE,iBAAiB,EAChC,MAAM,EAAE,WAAW,EACnB,MAAM,EAAE,eAAe,IAEtB,oBAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CACrB,8BAAM,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,IAC5B,CAAC,CACG,CACR,EAJsB,CAItB,CAAC,CACI,CACJ,CACP,CAAC;IACJ,CAAC,CAAC;IAEW,QAAA,kCAAkC,GAA4B;QACnE,IAAA,wBAAyD,EAAxD,kBAAU,EAAE,qBAA4C,CAAC;QAC1D,IAAA,wBAAmE,EAAlE,uBAAe,EAAE,0BAAiD,CAAC;QACpE,IAAA,4BAAuG,EAAtG,2BAAmB,EAAE,8BAAiF,CAAC;QACxG,IAAA,4BAAiG,EAAhG,yBAAiB,EAAE,4BAA6E,CAAC;QAClG,IAAA,8BAA6D,EAA5D,gBAAQ,EAAE,mBAAkD,CAAC;QAEpE,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,kBAAkB;YAC/B,oBAAC,aAAK,IAAC,UAAU;gBACf,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;oBACd,oBAAC,eAAM,IACL,KAAK,EAAC,cAAc,EACpB,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,QACT,QAAQ,EAAE,aAAa,GACvB,CACS;gBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;oBACd,oBAAC,eAAM,IACL,KAAK,EAAC,mBAAmB,EACzB,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,QACT,QAAQ,EAAE,kBAAkB,GAC5B,CACS,CACP;YAER,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,oBAAoB;gBAC5C,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;oBACd,oBAAC,mBAAQ,IACP,WAAW,EAAE,mBAAmB,EAChC,WAAW,EAAC,6BAA6B,EACzC,KAAK,EAAC,uBAAuB,EAC7B,OAAO,EAAE,0BAA0B;wBACnC,6CAA6C;wBAC7C,QAAQ,EAAE,UAAC,EAAmC,EAAE,MAAuB;4BACrE,OAAA,sBAAsB,CAAC,MAAM,CAAC,GAAqC,CAAC;wBAApE,CAAoE,GAEtE,CACS;gBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;oBACd,oBAAC,mBAAQ,IACP,WAAW,EAAE,iBAAiB,EAC9B,WAAW,EAAC,2BAA2B,EACvC,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE,wBAAwB;wBACjC,6CAA6C;wBAC7C,QAAQ,EAAE,UAAC,EAAmC,EAAE,MAAuB;4BACrE,OAAA,oBAAoB,CAAC,MAAM,CAAC,GAAmC,CAAC;wBAAhE,CAAgE,GAElE,CACS;gBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;oBACd,oBAAC,mBAAQ,IACP,WAAW,EAAE,QAAQ,EACrB,WAAW,EAAC,iBAAiB,EAC7B,KAAK,EAAC,WAAW,EACjB,OAAO,EAAE,eAAe;wBACxB,6CAA6C;wBAC7C,QAAQ,EAAE,UAAC,EAAmC,EAAE,MAAuB;4BACrE,OAAA,WAAW,CAAC,MAAM,CAAC,GAAe,CAAC;wBAAnC,CAAmC,GAErC,CACS,CACP;YAER,oBAAC,yCAAyC,uBACpC,EAAE,UAAU,YAAA,EAAE,eAAe,iBAAA,EAAE,mBAAmB,qBAAA,EAAE,iBAAiB,mBAAA,EAAE,QAAQ,UAAA,EAAE,EACrF,CACI,CACT,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { Stack, IStackProps, IStackStyles, IStackTokens } from 'office-ui-fabric-react/lib/Stack';\nimport { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\nimport { range } from '@uifabric/example-data';\n\nexport type Overflow = 'visible' | 'auto' | 'hidden';\n\nexport interface IExampleOptions {\n  stackWidth: number;\n  containerHeight: number;\n  horizontalAlignment: IStackProps['horizontalAlign'];\n  verticalAlignment: IStackProps['verticalAlign'];\n  overflow: Overflow;\n}\n\n// Non-mutating styles definition\nconst itemStyles: React.CSSProperties = {\n  alignItems: 'center',\n  background: DefaultPalette.themePrimary,\n  color: DefaultPalette.white,\n  display: 'flex',\n  height: 50,\n  justifyContent: 'center',\n  width: 50,\n};\n\n// Alignment options\nconst horizontalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Left' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Right' },\n  { key: 'space-around', text: 'Space around' },\n  { key: 'space-between', text: 'Space between' },\n  { key: 'space-evenly', text: 'Space evenly' },\n];\nconst verticalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Top' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Bottom' },\n];\nconst overflowOptions: IDropdownOption[] = [\n  { key: 'visible', text: 'Visible' },\n  { key: 'auto', text: 'Auto' },\n  { key: 'hidden', text: 'Hidden' },\n];\n\n// Tokens definition\nconst sectionStackTokens: IStackTokens = { childrenGap: 10 };\nconst configureStackTokens: IStackTokens = { childrenGap: 20 };\nconst wrapStackTokens: IStackTokens = { childrenGap: 30 };\n\nconst HorizontalStackWrapAdvancedExampleContent: React.FunctionComponent<IExampleOptions> = props => {\n  const { stackWidth, containerHeight, overflow, horizontalAlignment, verticalAlignment } = props;\n\n  // Mutating styles definition\n  const stackStyles: IStackStyles = {\n    root: {\n      background: DefaultPalette.themeTertiary,\n      width: `${stackWidth}%`,\n      overflow,\n    },\n  };\n  const containerStyles: React.CSSProperties = { height: containerHeight };\n\n  return (\n    <div style={containerStyles}>\n      <Stack\n        horizontal\n        verticalFill\n        wrap\n        horizontalAlign={horizontalAlignment}\n        verticalAlign={verticalAlignment}\n        styles={stackStyles}\n        tokens={wrapStackTokens}\n      >\n        {range(1, 10).map(n => (\n          <span style={itemStyles} key={n}>\n            {n}\n          </span>\n        ))}\n      </Stack>\n    </div>\n  );\n};\n\nexport const HorizontalStackWrapAdvancedExample: React.FunctionComponent = () => {\n  const [stackWidth, setStackWidth] = React.useState<number>(100);\n  const [containerHeight, setContainerHeight] = React.useState<number>(150);\n  const [horizontalAlignment, setHorizontalAlignment] = React.useState<IStackProps['horizontalAlign']>('start');\n  const [verticalAlignment, setVerticalAlignment] = React.useState<IStackProps['verticalAlign']>('start');\n  const [overflow, setOverflow] = React.useState<Overflow>('visible');\n\n  return (\n    <Stack tokens={sectionStackTokens}>\n      <Stack horizontal>\n        <Stack.Item grow>\n          <Slider\n            label=\"Stack width:\"\n            min={1}\n            max={100}\n            step={1}\n            defaultValue={100}\n            showValue\n            onChange={setStackWidth}\n          />\n        </Stack.Item>\n        <Stack.Item grow>\n          <Slider\n            label=\"Container height:\"\n            min={1}\n            max={200}\n            step={1}\n            defaultValue={150}\n            showValue\n            onChange={setContainerHeight}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <Stack horizontal tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={horizontalAlignment}\n            placeholder=\"Select Horizontal Alignment\"\n            label=\"Horizontal alignment:\"\n            options={horizontalAlignmentOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setHorizontalAlignment(option.key as IStackProps['horizontalAlign'])\n            }\n          />\n        </Stack.Item>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={verticalAlignment}\n            placeholder=\"Select Vertical Alignment\"\n            label=\"Vertical alignment:\"\n            options={verticalAlignmentOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setVerticalAlignment(option.key as IStackProps['verticalAlign'])\n            }\n          />\n        </Stack.Item>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={overflow}\n            placeholder=\"Select Overflow\"\n            label=\"Overflow:\"\n            options={overflowOptions}\n            // eslint-disable-next-line react/jsx-no-bind\n            onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n              setOverflow(option.key as Overflow)\n            }\n          />\n        </Stack.Item>\n      </Stack>\n\n      <HorizontalStackWrapAdvancedExampleContent\n        {...{ stackWidth, containerHeight, horizontalAlignment, verticalAlignment, overflow }}\n      />\n    </Stack>\n  );\n};\n"]}
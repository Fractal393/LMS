{"version":3,"file":"Stack.Vertical.Configure.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.Configure.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Checkbox, ICheckboxStyles } from 'office-ui-fabric-react/lib/Checkbox';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { Stack, IStackStyles, IStackTokens, IStackItemStyles, IStackProps } from 'office-ui-fabric-react/lib/Stack';\nimport { mergeStyles, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { range } from '@uifabric/example-data';\nexport interface IExampleOptions {\n  numItems: number;\n  showBoxShadow: boolean;\n  preventOverflow: boolean;\n  disableShrink: boolean;\n  wrap: boolean;\n  stackHeight: number;\n  autoHeight: boolean;\n  childrenGap: number;\n  paddingLeft: number;\n  paddingRight: number;\n  paddingTop: number;\n  paddingBottom: number;\n  verticalAlignment: IStackProps['verticalAlign'];\n  horizontalAlignment: IStackProps['horizontalAlign'];\n  hideEmptyChildren: boolean;\n  emptyChildren: string[];\n}\n\nconst checkboxStyles: Partial<ICheckboxStyles> = { root: { marginRight: 10 } };\n\n// Alignment options\nconst verticalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Top' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Bottom' },\n  { key: 'space-around', text: 'Space around' },\n  { key: 'space-between', text: 'Space between' },\n  { key: 'space-evenly', text: 'Space evenly' },\n];\nconst horizontalAlignmentOptions: IDropdownOption[] = [\n  { key: 'start', text: 'Left' },\n  { key: 'center', text: 'Center' },\n  { key: 'end', text: 'Right' },\n];\n\n// Non-mutating tokens definition\nconst sectionStackTokens: IStackTokens = { childrenGap: 10 };\nconst configureStackTokens: IStackTokens = { childrenGap: 20 };\n\nconst VerticalStackConfigureExampleContent: React.FunctionComponent<IExampleOptions> = props => {\n  const {\n    numItems,\n    showBoxShadow,\n    preventOverflow,\n    disableShrink,\n    wrap,\n    stackHeight,\n    autoHeight,\n    childrenGap,\n    paddingLeft,\n    paddingRight,\n    paddingTop,\n    paddingBottom,\n    verticalAlignment,\n    horizontalAlignment,\n    hideEmptyChildren,\n    emptyChildren,\n  } = props;\n\n  // Styles definition\n  const stackStyles: IStackStyles = {\n    root: [\n      {\n        background: DefaultPalette.themeTertiary,\n        height: autoHeight ? 'auto' : stackHeight,\n        marginLeft: 10,\n        marginRight: 10,\n      },\n      preventOverflow && {\n        overflow: 'hidden' as 'hidden',\n      },\n    ],\n  };\n  const stackItemStyles: IStackItemStyles = {\n    root: {\n      alignItems: 'center',\n      background: DefaultPalette.themePrimary,\n      boxShadow: showBoxShadow ? `0px 0px 10px 5px ${DefaultPalette.themeDarker}` : '',\n      color: DefaultPalette.white,\n      display: 'flex',\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n  };\n\n  // Tokens definition\n  const exampleStackTokens: IStackTokens = {\n    childrenGap: childrenGap + ' ' + 0,\n    padding: `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`,\n  };\n\n  return (\n    <Stack\n      disableShrink={disableShrink}\n      wrap={wrap}\n      verticalAlign={verticalAlignment}\n      horizontalAlign={horizontalAlignment}\n      styles={stackStyles}\n      tokens={exampleStackTokens}\n    >\n      {range(1, numItems).map((value: number, index: number) => {\n        if (emptyChildren.indexOf(value.toString()) !== -1) {\n          return hideEmptyChildren ? (\n            <Stack.Item key={index} styles={stackItemStyles} />\n          ) : (\n            <span key={index} className={mergeStyles(stackItemStyles.root)} />\n          );\n        }\n\n        return (\n          <span key={index} className={mergeStyles(stackItemStyles.root)}>\n            {value}\n          </span>\n        );\n      })}\n    </Stack>\n  );\n};\n\nexport const VerticalStackConfigureExample: React.FunctionComponent = () => {\n  const [numItems, setNumItems] = React.useState<number>(5);\n  const [showBoxShadow, { toggle: toggleShowBoxShadow }] = useBoolean(false);\n  const [preventOverflow, { toggle: togglePreventOverflow }] = useBoolean(false);\n  const [wrap, { toggle: toggleWrap }] = useBoolean(false);\n  const [disableShrink, { toggle: toggleDisableShrink }] = useBoolean(true);\n  const [stackHeight, setStackHeight] = React.useState<number>(200);\n  const [autoHeight, { toggle: toggleAutoHeight }] = useBoolean(true);\n  const [childrenGap, setChildrenGap] = React.useState<number>(0);\n  const [paddingLeft, setPaddingLeft] = React.useState<number>(0);\n  const [paddingRight, setPaddingRight] = React.useState<number>(0);\n  const [paddingTop, setPaddingTop] = React.useState<number>(0);\n  const [paddingBottom, setPaddingBottom] = React.useState<number>(0);\n  const [horizontalAlignment, setHorizontalAlignment] = React.useState<IStackProps['horizontalAlign']>('start');\n  const [verticalAlignment, setVerticalAlignment] = React.useState<IStackProps['verticalAlign']>('start');\n  const [hideEmptyChildren, { toggle: toggleHideEmptyChildren }] = useBoolean(false);\n  const [emptyChildren, setEmptyChildren] = React.useState<string[]>([]);\n\n  return (\n    <Stack tokens={sectionStackTokens}>\n      <Stack horizontal tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Stack>\n            <Slider label=\"Number of items:\" min={1} max={10} step={1} defaultValue={5} onChange={setNumItems} />\n            <Stack horizontal>\n              <Checkbox label=\"Shadow around items\" onChange={toggleShowBoxShadow} styles={checkboxStyles} />\n              <Checkbox label=\"Prevent item overflow\" onChange={togglePreventOverflow} styles={checkboxStyles} />\n              <Checkbox label=\"Shrink items\" onChange={toggleDisableShrink} styles={checkboxStyles} />\n              <Checkbox label=\"Wrap items\" onChange={toggleWrap} />\n            </Stack>\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Container height:\"\n              min={1}\n              max={400}\n              step={1}\n              defaultValue={200}\n              showValue\n              onChange={setStackHeight}\n              disabled={autoHeight}\n            />\n            <Checkbox label=\"Automatic height (based on items)\" defaultChecked onChange={toggleAutoHeight} />\n          </Stack>\n        </Stack.Item>\n      </Stack>\n\n      <Stack horizontal tokens={configureStackTokens}>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Vertical gap between items:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setChildrenGap}\n            />\n            <Stack horizontal verticalAlign=\"end\" tokens={configureStackTokens}>\n              <Stack.Item grow>\n                <Dropdown\n                  selectedKey={verticalAlignment}\n                  placeholder=\"Select Vertical Alignment\"\n                  label=\"Vertical alignment:\"\n                  options={verticalAlignmentOptions}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n                    setVerticalAlignment(option.key as IStackProps['verticalAlign'])\n                  }\n                />\n              </Stack.Item>\n              <Stack.Item grow>\n                <Dropdown\n                  selectedKey={horizontalAlignment}\n                  placeholder=\"Select Horizontal Alignment\"\n                  label=\"Horizontal alignment:\"\n                  options={horizontalAlignmentOptions}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onChange={(ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void =>\n                    setHorizontalAlignment(option.key as IStackProps['horizontalAlign'])\n                  }\n                />\n              </Stack.Item>\n              <Stack.Item>\n                <Checkbox label=\"Hide empty children\" onChange={toggleHideEmptyChildren} />\n              </Stack.Item>\n              <Stack.Item grow>\n                <TextField\n                  label=\"List of empty children (e.g. 1 2 3):\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onChange={(ev: React.FormEvent<HTMLInputElement>, value?: string): void => {\n                    if (value === undefined) {\n                      return;\n                    }\n                    setEmptyChildren(value.replace(/,/g, '').split(' '));\n                  }}\n                />\n              </Stack.Item>\n            </Stack>\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Left padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingLeft}\n            />\n            <Slider\n              label=\"Right padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingRight}\n            />\n          </Stack>\n        </Stack.Item>\n        <Stack.Item grow>\n          <Stack>\n            <Slider\n              label=\"Top padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingTop}\n            />\n            <Slider\n              label=\"Bottom padding:\"\n              min={0}\n              max={50}\n              step={1}\n              defaultValue={0}\n              showValue\n              onChange={setPaddingBottom}\n            />\n          </Stack>\n        </Stack.Item>\n      </Stack>\n\n      <VerticalStackConfigureExampleContent\n        {...{\n          numItems,\n          showBoxShadow,\n          preventOverflow,\n          disableShrink,\n          wrap,\n          stackHeight,\n          autoHeight,\n          childrenGap,\n          paddingLeft,\n          paddingRight,\n          paddingTop,\n          paddingBottom,\n          verticalAlignment,\n          horizontalAlignment,\n          hideEmptyChildren,\n          emptyChildren,\n        }}\n      />\n    </Stack>\n  );\n};\n"]}
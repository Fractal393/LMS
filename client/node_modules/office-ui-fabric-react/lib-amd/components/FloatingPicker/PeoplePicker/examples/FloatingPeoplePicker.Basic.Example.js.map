{"version":3,"file":"FloatingPeoplePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/examples/FloatingPeoplePicker.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\nimport {\n  IBaseFloatingPicker,\n  IBaseFloatingPickerSuggestionProps,\n  FloatingPeoplePicker,\n  SuggestionsStore,\n} from 'office-ui-fabric-react/lib/FloatingPicker';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { people } from '@uifabric/example-data';\nimport { useConst } from '@uifabric/react-hooks';\n\nconst searchBoxWrapperStyling = { width: 208 };\n\nconst getTextFromItem = (persona: IPersonaProps): string => {\n  return persona.text || '';\n};\n\nconst listContainsPersona = (persona: IPersonaProps, personas?: IPersonaProps[]): boolean => {\n  return !!personas && personas.some((item: IPersonaProps) => item.text === persona.text);\n};\n\nconst validateInput = (input: string): boolean => {\n  return input.indexOf('@') !== -1;\n};\n\nconst startsWith = (text: string, filterText: string): boolean => {\n  return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n};\n\nexport const FloatingPeoplePickerTypesExample: React.FunctionComponent = () => {\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const suggestionsStore = useConst(() => new SuggestionsStore<IPersonaProps>());\n  const [peopleList, setPeopleList] = React.useState(people);\n  const [searchValue, setSearchValue] = React.useState('');\n  const picker = React.useRef<IBaseFloatingPicker>(null);\n\n  const onFocus = (): void => {\n    if (picker.current) {\n      picker.current.showPicker();\n    }\n  };\n\n  const onSearchChange = (ev: React.ChangeEvent<HTMLInputElement>, newValue: string): void => {\n    if (newValue !== searchValue && picker.current) {\n      setSearchValue(newValue);\n      picker.current.onQueryStringChanged(newValue);\n    }\n  };\n\n  const onPickerChange = (selectedSuggestion: IPersonaProps): void => {\n    setSearchValue(selectedSuggestion.text || '');\n    if (picker.current) {\n      picker.current.hidePicker();\n    }\n  };\n\n  const onRemoveSuggestion = (item: any): void => {\n    const itemIndex = peopleList.indexOf(item);\n    if (itemIndex >= 0) {\n      setPeopleList(peopleList.slice(0, itemIndex).concat(peopleList.slice(itemIndex + 1)));\n    }\n  };\n\n  const suggestionProps: IBaseFloatingPickerSuggestionProps = useConst(() => {\n    return {\n      footerItemsProps: [\n        {\n          renderItem: () => {\n            return <>Showing {picker.current ? picker.current.suggestions.length : 0} results</>;\n          },\n          shouldShow: () => {\n            return !!picker.current && picker.current.suggestions.length > 0;\n          },\n        },\n      ],\n    };\n  });\n\n  const onFilterChanged = (filterText: string, currentPersonas?: IPersonaProps[]): IPersonaProps[] => {\n    if (filterText) {\n      // Filter by items starting with the current filter text, then remove duplicates\n      return peopleList\n        .filter((item: IPersonaProps) => startsWith(item.text || '', filterText))\n        .filter((persona: IPersonaProps) => !listContainsPersona(persona, currentPersonas));\n    }\n    return [];\n  };\n\n  return (\n    <>\n      <div style={searchBoxWrapperStyling} ref={inputElementRef}>\n        <SearchBox\n          placeholder=\"Search for person\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={onSearchChange}\n          value={searchValue}\n          // eslint-disable-next-line react/jsx-no-bind\n          onFocus={onFocus}\n        />\n      </div>\n      <FloatingPeoplePicker\n        suggestionsStore={suggestionsStore}\n        // eslint-disable-next-line react/jsx-no-bind\n        onResolveSuggestions={onFilterChanged}\n        getTextFromItem={getTextFromItem}\n        pickerSuggestionsProps={suggestionProps}\n        key=\"normal\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onRemoveSuggestion={onRemoveSuggestion}\n        onValidateInput={validateInput}\n        componentRef={picker}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onPickerChange}\n        inputElement={inputElementRef.current}\n        resolveDelay={300}\n      />\n    </>\n  );\n};\n"]}
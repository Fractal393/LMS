{"version":3,"file":"Dropdown.ControlledMulti.Example.js","sourceRoot":"../src/","sources":["components/Dropdown/examples/Dropdown.ControlledMulti.Example.tsx"],"names":[],"mappings":";;;IAGA,IAAM,cAAc,GAA6B,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;IAE9E,IAAM,qCAAqC,GAAG;QAC5C,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,+BAAoB,CAAC,MAAM,EAAE;QAC9E,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;QAC/B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;QACjC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;QACjD,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;QAC/B,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,+BAAoB,CAAC,OAAO,EAAE;QACvE,EAAE,GAAG,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,+BAAoB,CAAC,MAAM,EAAE;QACtF,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE;QACrC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;QACjC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;KACpC,CAAC;IAEW,QAAA,8BAA8B,GAA4B;QAC/D,IAAA,uBAA8D,EAA7D,oBAAY,EAAE,uBAA+C,CAAC;QAErE,IAAM,QAAQ,GAAG,UAAC,KAAsC,EAAE,IAAqB;YAC7E,IAAI,IAAI,EAAE;gBACR,eAAe,CACb,IAAI,CAAC,QAAQ,CAAC,CAAC,wBAAK,YAAY,GAAE,IAAI,CAAC,GAAa,GAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,KAAK,IAAI,CAAC,GAAG,EAAhB,CAAgB,CAAC,CACrG,CAAC;aACH;QACH,CAAC,CAAC;QAEF,OAAO,CACL,oBAAC,mBAAQ,IACP,WAAW,EAAC,gBAAgB,EAC5B,KAAK,EAAC,iCAAiC,EACvC,YAAY,EAAE,YAAY;YAC1B,6CAA6C;YAC7C,QAAQ,EAAE,QAAQ,EAClB,WAAW,QACX,OAAO,EAAE,qCAAqC,EAC9C,MAAM,EAAE,cAAc,GACtB,CACH,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\n\nconst dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 300 } };\n\nconst DropdownControlledMultiExampleOptions = [\n  { key: 'fruitsHeader', text: 'Fruits', itemType: DropdownMenuItemType.Header },\n  { key: 'apple', text: 'Apple' },\n  { key: 'banana', text: 'Banana' },\n  { key: 'orange', text: 'Orange', disabled: true },\n  { key: 'grape', text: 'Grape' },\n  { key: 'divider_1', text: '-', itemType: DropdownMenuItemType.Divider },\n  { key: 'vegetablesHeader', text: 'Vegetables', itemType: DropdownMenuItemType.Header },\n  { key: 'broccoli', text: 'Broccoli' },\n  { key: 'carrot', text: 'Carrot' },\n  { key: 'lettuce', text: 'Lettuce' },\n];\n\nexport const DropdownControlledMultiExample: React.FunctionComponent = () => {\n  const [selectedKeys, setSelectedKeys] = React.useState<string[]>([]);\n\n  const onChange = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption): void => {\n    if (item) {\n      setSelectedKeys(\n        item.selected ? [...selectedKeys, item.key as string] : selectedKeys.filter(key => key !== item.key),\n      );\n    }\n  };\n\n  return (\n    <Dropdown\n      placeholder=\"Select options\"\n      label=\"Multi-select controlled example\"\n      selectedKeys={selectedKeys}\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={onChange}\n      multiSelect\n      options={DropdownControlledMultiExampleOptions}\n      styles={dropdownStyles}\n    />\n  );\n};\n"]}
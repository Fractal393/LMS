{"version":3,"file":"Dialog.Basic.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":";;;IAQA,IAAM,YAAY,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;IACjD,IAAM,WAAW,GAAG;QAClB,gBAAgB,EAAE,MAAM;QACxB,iBAAiB,EAAE,OAAO;QAC1B,IAAI,EAAE,+BAAc;KACrB,CAAC;IACF,IAAM,gBAAgB,GAAG,qBAAW,CAAC,4BAAkB,CAAC,CAAC;IACzD,IAAM,kBAAkB,GAAG;QACzB,IAAI,EAAE,mBAAU,CAAC,MAAM;QACvB,KAAK,EAAE,iBAAiB;QACxB,oBAAoB,EAAE,OAAO;QAC7B,OAAO,EAAE,qDAAqD;KAC/D,CAAC;IAEW,QAAA,kBAAkB,GAA4B;QACnD,IAAA,mCAA6D,EAA5D,kBAAU,EAAI,+BAA8C,CAAC;QAC9D,IAAA,oCAAgE,EAA/D,mBAAW,EAAI,gCAAgD,CAAC;QACvE,IAAM,OAAO,GAAW,mBAAK,CAAC,aAAa,CAAC,CAAC;QAC7C,IAAM,SAAS,GAAW,mBAAK,CAAC,cAAc,CAAC,CAAC;QAEhD,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAC9B,cAAM,OAAA,CAAC;YACL,WAAW,EAAE,OAAO;YACpB,cAAc,EAAE,SAAS;YACzB,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,YAAY;YACpB,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS;SACnD,CAAC,EANI,CAMJ,EACF,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC,CAClC,CAAC;QAEF,OAAO,CACL;YACE,oBAAC,eAAM,IAAC,KAAK,EAAC,cAAc,EAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,WAAW,GAAI;YAClF,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,aAAa,GAAG;YACvG,+BAAO,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,sBAEvC;YACR,+BAAO,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,gBAAgB,4BAEzC;YAER,oBAAC,eAAM,IACL,MAAM,EAAE,UAAU,EAClB,SAAS,EAAE,gBAAgB,EAC3B,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,UAAU;gBAEtB,oBAAC,qBAAY;oBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,MAAM,GAAG;oBACxD,oBAAC,sBAAa,IAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAC,YAAY,GAAG,CACjD,CACR,CACR,CACJ,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { hiddenContentStyle, mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { useId, useBoolean } from '@uifabric/react-hooks';\n\nconst dialogStyles = { main: { maxWidth: 450 } };\nconst dragOptions = {\n  moveMenuItemText: 'Move',\n  closeMenuItemText: 'Close',\n  menu: ContextualMenu,\n};\nconst screenReaderOnly = mergeStyles(hiddenContentStyle);\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Missing Subject',\n  closeButtonAriaLabel: 'Close',\n  subText: 'Do you want to send this message without a subject?',\n};\n\nexport const DialogBasicExample: React.FunctionComponent = () => {\n  const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n  const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false);\n  const labelId: string = useId('dialogLabel');\n  const subTextId: string = useId('subTextLabel');\n\n  const modalProps = React.useMemo(\n    () => ({\n      titleAriaId: labelId,\n      subtitleAriaId: subTextId,\n      isBlocking: false,\n      styles: dialogStyles,\n      dragOptions: isDraggable ? dragOptions : undefined,\n    }),\n    [isDraggable, labelId, subTextId],\n  );\n\n  return (\n    <>\n      <Toggle label=\"Is draggable\" onChange={toggleIsDraggable} checked={isDraggable} />\n      <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={toggleHideDialog} text=\"Open Dialog\" />\n      <label id={labelId} className={screenReaderOnly}>\n        My sample label\n      </label>\n      <label id={subTextId} className={screenReaderOnly}>\n        My sample description\n      </label>\n\n      <Dialog\n        hidden={hideDialog}\n        onDismiss={toggleHideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={toggleHideDialog} text=\"Send\" />\n          <DefaultButton onClick={toggleHideDialog} text=\"Don't send\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n"]}
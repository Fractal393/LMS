{"version":3,"file":"GroupedList.Custom.Example.js","sourceRoot":"../src/","sources":["components/GroupedList/examples/GroupedList.Custom.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;IACzB,IAAM,qBAAqB,GAAc;QACvC,QAAQ,EAAE,GAAG;QACb,SAAS,EAAE,EAAE;QACb,UAAU,EAAE,EAAE;QACd,WAAW,EAAE,EAAE;KAChB,CAAC;IACF,IAAM,UAAU,GAAG,wBAAc,CAAC;QAChC,MAAM,EAAE,CAAC,qBAAqB,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;QACnD,MAAM,EAAE,CAAC,qBAAqB,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;QAClD,IAAI,EAAE;YACJ,OAAO,EAAE,cAAc;YACvB,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,YAAY;YACvB,aAAa,EAAE,KAAK;YACpB,UAAU,EAAE,MAAM;YAClB,eAAe,EAAE,aAAa;YAC9B,MAAM,EAAE,MAAM;YACd,WAAW,EAAE,EAAE;SAChB;KACF,CAAC,CAAC;IAEH,IAAM,cAAc,GAAG,UAAC,KAAyB;QAC/C,IAAI,KAAK,EAAE;YACT,IAAM,cAAc,GAAG;gBACrB,KAAK,CAAC,gBAAiB,CAAC,KAAK,CAAC,KAAM,CAAC,CAAC;YACxC,CAAC,CAAC;YACF,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;gBACF,KAAK,CAAC,KAAM,CAAC,IAAI;;gBAE9C,oBAAC,WAAI;gBACH,6CAA6C;;oBAA7C,6CAA6C;oBAC7C,OAAO,EAAE,cAAc,IAEtB,KAAK,CAAC,KAAM,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAC5C;oBAEH,CACP,CAAC;SACH;QAED,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;IAEF,IAAM,YAAY,GAAG,UAAC,YAAqB,EAAE,IAAmB,EAAE,SAAkB;QAClF,OAAO,IAAI,CAAC,CAAC,CAAC,CACZ,6BAAK,IAAI,EAAC,KAAK,0BAAuB,SAAS;YAC7C,8BAAM,IAAI,EAAC,MAAM,EAAC,SAAS,EAAE,UAAU,CAAC,IAAI,IACzC,IAAI,CAAC,IAAI,CACL,CACH,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG,UAAC,KAAyB;QAC/C,OAAO,KAAK,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;YAA+B,KAAK,CAAC,KAAM,CAAC,IAAI,CAAO,CAAC,CAAC,CAAC,IAAI,CAAC;IACjH,CAAC,CAAC;IAEF,IAAM,gBAAgB,GAAG;QACvB,cAAc,gBAAA;QACd,cAAc,gBAAA;KACf,CAAC;IACF,IAAM,KAAK,GAAmB,8BAAe,CAAC,EAAE,CAAC,CAAC;IAClD,IAAM,MAAM,GAAa,2BAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAErC,QAAA,wBAAwB,GAA4B,cAAM,OAAA,CACrE,oBAAC,yBAAW,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,GAAI,CACxG,EAFsE,CAEtE,CAAC","sourcesContent":["import * as React from 'react';\nimport { GroupedList, IGroup, IGroupHeaderProps, IGroupFooterProps } from 'office-ui-fabric-react/lib/GroupedList';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { createListItems, createGroups, IExampleItem } from '@uifabric/example-data';\nimport { getTheme, mergeStyleSets, IRawStyle } from 'office-ui-fabric-react/lib/Styling';\n\nconst theme = getTheme();\nconst headerAndFooterStyles: IRawStyle = {\n  minWidth: 300,\n  minHeight: 40,\n  lineHeight: 40,\n  paddingLeft: 16,\n};\nconst classNames = mergeStyleSets({\n  header: [headerAndFooterStyles, theme.fonts.xLarge],\n  footer: [headerAndFooterStyles, theme.fonts.large],\n  name: {\n    display: 'inline-block',\n    overflow: 'hidden',\n    height: 24,\n    cursor: 'default',\n    padding: 8,\n    boxSizing: 'border-box',\n    verticalAlign: 'top',\n    background: 'none',\n    backgroundColor: 'transparent',\n    border: 'none',\n    paddingLeft: 32,\n  },\n});\n\nconst onRenderHeader = (props?: IGroupHeaderProps): JSX.Element | null => {\n  if (props) {\n    const toggleCollapse = (): void => {\n      props.onToggleCollapse!(props.group!);\n    };\n    return (\n      <div className={classNames.header}>\n        This is a custom header for {props.group!.name}\n        &nbsp; (\n        <Link\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={toggleCollapse}\n        >\n          {props.group!.isCollapsed ? 'Expand' : 'Collapse'}\n        </Link>\n        )\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst onRenderCell = (nestingDepth?: number, item?: IExampleItem, itemIndex?: number): React.ReactNode => {\n  return item ? (\n    <div role=\"row\" data-selection-index={itemIndex}>\n      <span role=\"cell\" className={classNames.name}>\n        {item.name}\n      </span>\n    </div>\n  ) : null;\n};\n\nconst onRenderFooter = (props?: IGroupFooterProps): JSX.Element | null => {\n  return props ? <div className={classNames.footer}>This is a custom footer for {props.group!.name}</div> : null;\n};\n\nconst groupedListProps = {\n  onRenderHeader,\n  onRenderFooter,\n};\nconst items: IExampleItem[] = createListItems(20);\nconst groups: IGroup[] = createGroups(4, 0, 0, 5);\n\nexport const GroupedListCustomExample: React.FunctionComponent = () => (\n  <GroupedList items={items} onRenderCell={onRenderCell} groupProps={groupedListProps} groups={groups} />\n);\n"]}
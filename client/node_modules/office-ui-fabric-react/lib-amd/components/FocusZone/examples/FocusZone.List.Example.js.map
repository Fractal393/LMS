{"version":3,"file":"FocusZone.List.Example.js","sourceRoot":"../src/","sources":["components/FocusZone/examples/FocusZone.List.Example.tsx"],"names":[],"mappings":";;;IAcA,IAAM,KAAK,GAAG,uBAAW,CAAC,EAAE,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC;QACtC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE;QACrB,IAAI,EAAE,OAAO,GAAG,KAAK;QACrB,GAAG,EAAE,0BAA0B,GAAG,CAAC,GAAG,GAAG,KAAM,CAAC;KACjD,CAAC,EAJqC,CAIrC,CAAC,CAAC;IAEJ,IAAM,OAAO,GAAc;QACzB;YACE,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,GAAG;SACd;QACD;YACE,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,WAAI,IAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAG,IAAI,CAAC,GAAG,CAAQ,EAAvC,CAAuC;SAC1D;QACD;YACE,GAAG,EAAE,WAAW;YAChB,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,kCAAS,IAAC,QAAQ,QAAC,YAAY,EAAE,WAAW,GAAG,IAAI,CAAC,IAAI,GAAI,EAA7D,CAA6D;SAChF;QACD;YACE,GAAG,EAAE,YAAY;YACjB,IAAI,EAAE,OAAO;YACb,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,kCAAS,IAAC,YAAY,EAAE,IAAI,CAAC,IAAI,GAAI,EAAtC,CAAsC;SACzD;KACF,CAAC;IAEF,IAAM,gBAAgB,GAA+B,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC;IAEtF,QAAA,oBAAoB,GAA4B;QAC3D,gGAAgG;QAChG,IAAM,SAAS,GAAG,sBAAQ,CAAC;YACzB,IAAM,GAAG,GAAG,IAAI,uBAAS,EAAE,CAAC;YAC5B,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,OAAO,CACL,oBAAC,qBAAS,IACR,SAAS,EAAE,8BAAkB,CAAC,QAAQ,EACtC,oBAAoB,EAAE,IAAI,EAC1B,oBAAoB,EAAE,qBAAqB,EAC3C,IAAI,EAAC,MAAM,IAEV,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC1B,oBAAC,wBAAU,IACT,GAAG,EAAE,IAAI,CAAC,IAAI,EACd,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,KAAK,EAChB,OAAO,EAAE,OAAO,EAChB,aAAa,EAAE,2BAAa,CAAC,IAAI,EACjC,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,gBAAgB,GACxB,CACH,EAV2B,CAU3B,CAAC,CACQ,CACb,CAAC;IACJ,CAAC,CAAC;IAEF,SAAS,qBAAqB,CAAC,EAAoC;QACjE,OAAO,EAAE,CAAC,KAAK,KAAK,6BAAiB,CAAC,oBAAQ,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, createArray, getRTLSafeKeyCode } from 'office-ui-fabric-react/lib/Utilities';\nimport { useConst } from '@uifabric/react-hooks';\nimport { TextField } from 'office-ui-fabric-react';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport {\n  DetailsRow,\n  IDetailsRowStyles,\n  IColumn,\n  Selection,\n  SelectionMode,\n} from 'office-ui-fabric-react/lib/DetailsList';\n\nconst ITEMS = createArray(10, index => ({\n  key: index.toString(),\n  name: 'Item-' + index,\n  url: 'http://placehold.it/100x' + (100 + index!),\n}));\n\nconst COLUMNS: IColumn[] = [\n  {\n    key: 'name',\n    name: 'Name',\n    fieldName: 'name',\n    minWidth: 100,\n  },\n  {\n    key: 'link',\n    name: 'Link',\n    fieldName: '',\n    minWidth: 100,\n    onRender: item => <Link href={item.url}>{item.url}</Link>,\n  },\n  {\n    key: 'textfield',\n    name: 'Link',\n    fieldName: '',\n    minWidth: 130,\n    onRender: item => <TextField readOnly defaultValue={'ReadOnly ' + item.name} />,\n  },\n  {\n    key: 'textfield2',\n    name: 'Link2',\n    fieldName: '',\n    minWidth: 130,\n    onRender: item => <TextField defaultValue={item.name} />,\n  },\n];\n\nconst detailsRowStyles: Partial<IDetailsRowStyles> = { root: { display: 'block', width: '100%' } };\n\nexport const FocusZoneListExample: React.FunctionComponent = () => {\n  //  Initialize the selection when the component is first rendered (same instance will be reused)\n  const selection = useConst(() => {\n    const sel = new Selection();\n    sel.setItems(ITEMS);\n    return sel;\n  });\n\n  return (\n    <FocusZone\n      direction={FocusZoneDirection.vertical}\n      isCircularNavigation={true}\n      shouldEnterInnerZone={_shouldEnterInnerZone}\n      role=\"grid\"\n    >\n      {ITEMS.map((item, index) => (\n        <DetailsRow\n          key={item.name}\n          item={item}\n          itemIndex={index}\n          columns={COLUMNS}\n          selectionMode={SelectionMode.none}\n          selection={selection}\n          styles={detailsRowStyles}\n        />\n      ))}\n    </FocusZone>\n  );\n};\n\nfunction _shouldEnterInnerZone(ev: React.KeyboardEvent<HTMLElement>): boolean {\n  return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n}\n"]}
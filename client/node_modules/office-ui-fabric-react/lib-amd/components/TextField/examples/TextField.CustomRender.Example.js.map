{"version":3,"file":"TextField.CustomRender.Example.js","sourceRoot":"../src/","sources":["components/TextField/examples/TextField.CustomRender.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextField, ITextFieldProps } from 'office-ui-fabric-react/lib/TextField';\nimport { DefaultButton, IconButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { Icon, IIconStyles } from 'office-ui-fabric-react/lib/Icon';\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport { IStackTokens, Stack, IStackStyles } from 'office-ui-fabric-react/lib/Stack';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { IRenderFunction, memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { getTheme, FontWeights, ITheme } from 'office-ui-fabric-react/lib/Styling';\nimport { useBoolean, useId } from '@uifabric/react-hooks';\n\nexport interface ITextFieldCustomRenderExampleState {\n  isCalloutVisible: boolean;\n}\n\nconst stackTokens: IStackTokens = {\n  childrenGap: 4,\n  maxWidth: 300,\n};\n\nconst labelCalloutStackStyles: Partial<IStackStyles> = { root: { padding: 20 } };\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { marginBottom: -3 } };\nconst iconStyles: Partial<IIconStyles> = { root: { marginBottom: -3 } };\nconst iconProps = { iconName: 'Info' };\n\nconst getDescriptionStyles = memoizeFunction((theme: ITheme) => ({\n  root: { color: theme.palette.green, fontWeight: FontWeights.bold },\n}));\n\nconst onRenderDescription = (props: ITextFieldProps): JSX.Element => {\n  const theme = getTheme();\n  return (\n    <Text variant=\"small\" styles={getDescriptionStyles(theme)}>\n      {props.description}\n    </Text>\n  );\n};\n\nconst onWrapDefaultLabelRenderer = (\n  props: ITextFieldProps,\n  defaultRender: IRenderFunction<ITextFieldProps>,\n): JSX.Element => {\n  return (\n    <>\n      <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\n        <span>{defaultRender(props)}</span>\n        <Icon iconName=\"Globe\" title=\"Globe\" ariaLabel=\"Globe\" styles={iconStyles} />\n      </Stack>\n    </>\n  );\n};\n\nconst CustomLabel = (props: ITextFieldProps): JSX.Element => {\n  const [isCalloutVisible, { toggle: toggleIsCalloutVisible }] = useBoolean(false);\n  const descriptionId: string = useId('description');\n  const iconButtonId: string = useId('iconButton');\n\n  return (\n    <>\n      <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\n        <span id={props.id}>{props.label}</span>\n        <IconButton\n          id={iconButtonId}\n          iconProps={iconProps}\n          title=\"Info\"\n          ariaLabel=\"Info\"\n          onClick={toggleIsCalloutVisible}\n          styles={iconButtonStyles}\n        />\n      </Stack>\n      {isCalloutVisible && (\n        <Callout\n          target={'#' + iconButtonId}\n          setInitialFocus\n          onDismiss={toggleIsCalloutVisible}\n          ariaDescribedBy={descriptionId}\n          role=\"alertdialog\"\n        >\n          <Stack tokens={stackTokens} horizontalAlign=\"start\" styles={labelCalloutStackStyles}>\n            <span id={descriptionId}>The custom label includes an IconButton that displays this Callout on click.</span>\n            <DefaultButton onClick={toggleIsCalloutVisible}>Close</DefaultButton>\n          </Stack>\n        </Callout>\n      )}\n    </>\n  );\n};\n\nexport const TextFieldCustomRenderExample: React.FunctionComponent = () => {\n  const labelId: string = useId('label');\n  const onRenderLabel = (props: ITextFieldProps) => <CustomLabel id={labelId} {...props} />;\n\n  return (\n    <Stack tokens={stackTokens}>\n      <TextField\n        aria-labelledby={labelId}\n        label=\"Custom label rendering\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onRenderLabel={onRenderLabel}\n        description=\"Click the (i) icon!\"\n      />\n      <TextField label=\"Wrapping default label renderer\" onRenderLabel={onWrapDefaultLabelRenderer} />\n      <TextField\n        label=\"Custom description rendering\"\n        description=\"A colorful description!\"\n        onRenderDescription={onRenderDescription}\n      />\n    </Stack>\n  );\n};\n"]}
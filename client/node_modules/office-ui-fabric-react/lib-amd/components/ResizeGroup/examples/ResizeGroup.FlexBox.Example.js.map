{"version":3,"file":"ResizeGroup.FlexBox.Example.js","sourceRoot":"../src/","sources":["components/ResizeGroup/examples/ResizeGroup.FlexBox.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,qBAAqB,GAAG,qBAAW,CAAC;QACxC,OAAO,EAAE,MAAM;QACf,cAAc,EAAE,eAAe;QAC/B,UAAU,EAAE,QAAQ;KACrB,CAAW,CAAC;IAEb,IAAM,uBAAuB,GAAG,2BAAe,CAAC,UAAC,eAAuB;QACtE,OAAO,qBAAW,CAAC;YACjB,OAAO,EAAE,cAAc;YACvB,SAAS,EAAE,QAAQ;YACnB,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,MAAM;YAClB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,MAAM;YAClB,WAAW,EAAE,MAAM;YACnB,eAAe,iBAAA;SAChB,CAAW,CAAC;IACf,CAAC,CAAC,CAAC;IAaH,IAAM,YAAY,GAAgD,UAAC,KAAyB,IAAK,OAAA,CAC/F,6BAAK,SAAS,EAAE,uBAAuB,CAAC,KAAK,CAAC,eAAe,CAAC,IAAG,KAAK,CAAC,KAAK,CAAO,CACpF,EAFgG,CAEhG,CAAC;IAEF,SAAS,mBAAmB,CAAC,KAAa,EAAE,eAAuB;QACjE,IAAM,MAAM,GAAkB,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;YAClC,MAAM,CAAC,IAAI,CAAC,oBAAC,YAAY,IAAC,KAAK,EAAE,KAAG,CAAG,EAAE,eAAe,EAAE,eAAe,EAAE,GAAG,EAAK,eAAe,SAAI,CAAG,GAAI,CAAC,CAAC;SAChH;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,IAAM,eAAe,GAAmD,UAAC,KAA4B,IAAK,OAAA,CACxG,6BAAK,SAAS,EAAE,qBAAqB;QACnC,iCAAM,mBAAmB,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAO;QAC3D,iCAAM,mBAAmB,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAO,CACvD,CACP,EALyG,CAKzG,CAAC;IAEF,SAAS,YAAY,CAAC,KAA4B;QAChD,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,KAAK,CAAC,UAAU,KAAK,CAAC,EAAE;YACnD,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,MAA6B,CAAC;QAClC,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,UAAU,EAAE;YACtC,MAAM,yCAAQ,KAAK,KAAE,SAAS,EAAE,KAAK,CAAC,SAAS,GAAG,CAAC,GAAE,CAAC;SACvD;aAAM;YACL,MAAM,yCAAQ,KAAK,KAAE,UAAU,EAAE,KAAK,CAAC,UAAU,GAAG,CAAC,GAAE,CAAC;SACzD;QAED,uBAAuB;QACvB,6CAAY,MAAM,KAAE,QAAQ,EAAE,MAAG,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAE,IAAG;IAC5E,CAAC;IAEY,QAAA,yBAAyB,GAAgC;QACpE,IAAM,IAAI,GAA0B,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QACpF,OAAO,CACL,oBAAC,yBAAW,IACV,IAAI,EAAE,IAAI;YACV,6CAA6C;YAC7C,YAAY,EAAE,UAAC,UAAiC,IAAK,OAAA,oBAAC,eAAe,uBAAK,UAAU,EAAI,EAAnC,CAAmC,EACxF,YAAY,EAAE,YAAY,GAC1B,CACH,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { ResizeGroup } from 'office-ui-fabric-react/lib/ResizeGroup';\n\nconst leftRightBoxClassName = mergeStyles({\n  display: 'flex',\n  justifyContent: 'space-between',\n  whiteSpace: 'nowrap',\n}) as string;\n\nconst getNumberedBoxClassName = memoizeFunction((backgroundColor: string) => {\n  return mergeStyles({\n    display: 'inline-block',\n    textAlign: 'center',\n    fontSize: '20px',\n    lineHeight: '50px',\n    height: '50px',\n    width: '50px',\n    marginLeft: '10px',\n    marginRight: '10px',\n    backgroundColor,\n  }) as string;\n});\n\ninterface IBoxWithLabelProps {\n  label: string;\n  backgroundColor: string;\n}\n\ninterface ILeftRightBoxSetProps {\n  leftCount: number;\n  rightCount: number;\n  cacheKey: string;\n}\n\nconst BoxWithLabel: React.FunctionComponent<IBoxWithLabelProps> = (props: IBoxWithLabelProps) => (\n  <div className={getNumberedBoxClassName(props.backgroundColor)}>{props.label}</div>\n);\n\nfunction renderBoxWithLabels(count: number, backgroundColor: string): JSX.Element[] {\n  const result: JSX.Element[] = [];\n  for (let i = 1; i <= count; i += 1) {\n    result.push(<BoxWithLabel label={`${i}`} backgroundColor={backgroundColor} key={`${backgroundColor}-${i}`} />);\n  }\n  return result;\n}\n\nconst LeftRightBoxSet: React.FunctionComponent<ILeftRightBoxSetProps> = (props: ILeftRightBoxSetProps) => (\n  <div className={leftRightBoxClassName}>\n    <div>{renderBoxWithLabels(props.leftCount, 'orange')}</div>\n    <div>{renderBoxWithLabels(props.rightCount, 'green')}</div>\n  </div>\n);\n\nfunction onReduceData(props: ILeftRightBoxSetProps): ILeftRightBoxSetProps | undefined {\n  if (props.leftCount === 0 && props.rightCount === 0) {\n    return undefined;\n  }\n\n  let result: ILeftRightBoxSetProps;\n  if (props.leftCount > props.rightCount) {\n    result = { ...props, leftCount: props.leftCount - 1 };\n  } else {\n    result = { ...props, rightCount: props.rightCount - 1 };\n  }\n\n  // Update the cache key\n  return { ...result, cacheKey: `${result.leftCount + result.rightCount}` };\n}\n\nexport const FlexBoxResizeGroupExample: React.FunctionComponent<{}> = () => {\n  const data: ILeftRightBoxSetProps = { leftCount: 5, rightCount: 5, cacheKey: '10' };\n  return (\n    <ResizeGroup\n      data={data}\n      // eslint-disable-next-line react/jsx-no-bind\n      onRenderData={(scaledData: ILeftRightBoxSetProps) => <LeftRightBoxSet {...scaledData} />}\n      onReduceData={onReduceData}\n    />\n  );\n};\n"]}
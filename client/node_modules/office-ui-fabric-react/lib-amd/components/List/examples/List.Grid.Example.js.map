{"version":3,"file":"List.Grid.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Grid.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport { IRectangle } from 'office-ui-fabric-react/lib/Utilities';\nimport { ITheme, getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { useConst, useConstCallback } from '@uifabric/react-hooks';\n\nconst theme: ITheme = getTheme();\nconst { palette, fonts } = theme;\nconst ROWS_PER_PAGE = 3;\nconst MAX_ROW_HEIGHT = 250;\nconst classNames = mergeStyleSets({\n  listGridExample: {\n    overflow: 'hidden',\n    fontSize: 0,\n    position: 'relative',\n  },\n  listGridExampleTile: {\n    textAlign: 'center',\n    outline: 'none',\n    position: 'relative',\n    float: 'left',\n    background: palette.neutralLighter,\n    selectors: {\n      'focus:after': {\n        content: '',\n        position: 'absolute',\n        left: 2,\n        right: 2,\n        top: 2,\n        bottom: 2,\n        boxSizing: 'border-box',\n        border: `1px solid ${palette.white}`,\n      },\n    },\n  },\n  listGridExampleSizer: {\n    paddingBottom: '100%',\n  },\n  listGridExamplePadder: {\n    position: 'absolute',\n    left: 2,\n    top: 2,\n    right: 2,\n    bottom: 2,\n  },\n  listGridExampleLabel: {\n    background: 'rgba(0, 0, 0, 0.3)',\n    color: '#FFFFFF',\n    position: 'absolute',\n    padding: 10,\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    fontSize: fonts.small.fontSize,\n    boxSizing: 'border-box',\n  },\n  listGridExampleImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n  },\n});\n\nexport const ListGridExample: React.FunctionComponent = () => {\n  const columnCount = React.useRef(0);\n  const rowHeight = React.useRef(0);\n\n  const getItemCountForPage = useConstCallback((itemIndex: number, surfaceRect: IRectangle) => {\n    if (itemIndex === 0) {\n      columnCount.current = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\n      rowHeight.current = Math.floor(surfaceRect.width / columnCount.current);\n    }\n    return columnCount.current * ROWS_PER_PAGE;\n  });\n\n  const onRenderCell = useConstCallback((item: IExampleItem, index: number | undefined) => {\n    return (\n      <div\n        className={classNames.listGridExampleTile}\n        data-is-focusable\n        style={{\n          width: 100 / columnCount.current + '%',\n        }}\n      >\n        <div className={classNames.listGridExampleSizer}>\n          <div className={classNames.listGridExamplePadder}>\n            <img src={item.thumbnail} className={classNames.listGridExampleImage} />\n            <span className={classNames.listGridExampleLabel}>{`item ${index}`}</span>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  const getPageHeight = useConstCallback((): number => {\n    return rowHeight.current * ROWS_PER_PAGE;\n  });\n\n  const items = useConst(() => createListItems(5000));\n  return (\n    <FocusZone>\n      <List\n        className={classNames.listGridExample}\n        items={items}\n        getItemCountForPage={getItemCountForPage}\n        getPageHeight={getPageHeight}\n        renderedWindowsAhead={4}\n        onRenderCell={onRenderCell}\n      />\n    </FocusZone>\n  );\n};\n"]}
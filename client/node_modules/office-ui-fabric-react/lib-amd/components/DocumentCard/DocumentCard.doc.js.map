{"version":3,"file":"DocumentCard.doc.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCard.doc.tsx"],"names":[],"mappings":";;;IASA,IAAM,4BAA4B,GAAG,OAAO,CAAC,wGAAwG,CAAW,CAAC;IACjK,IAAM,8BAA8B,GAAG,OAAO,CAAC,0GAA0G,CAAW,CAAC;IACrK,IAAM,+BAA+B,GAAG,OAAO,CAAC,2GAA2G,CAAW,CAAC;IACvK,IAAM,4BAA4B,GAAG,OAAO,CAAC,wGAAwG,CAAW,CAAC;IACjK,IAAM,mCAAmC,GAAG,OAAO,CAAC,+GAA+G,CAAW,CAAC;IAElK,QAAA,qBAAqB,GAAkB;QAClD,KAAK,EAAE,cAAc;QACrB,aAAa,EAAE,cAAc;QAC7B,YAAY,EACV,+GAA+G;QACjH,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,sBAAsB;gBAC7B,IAAI,EAAE,4BAA4B;gBAClC,IAAI,EAAE,CACJ;oBACE,yKAGI;oBACJ,oBAAC,qDAAwB,OAAG,CAC3B,CACJ;aACF;YACD;gBACE,KAAK,EAAE,mCAAmC;gBAC1C,IAAI,EAAE,8BAA8B;gBACpC,IAAI,EAAE,CACJ;oBACE,uNAGI;oBACJ,2LAGI;oBACJ,oBAAC,yDAA0B,OAAG,CAC7B,CACJ;aACF;YACD;gBACE,KAAK,EAAE,uDAAuD;gBAC9D,IAAI,EAAE,+BAA+B;gBACrC,IAAI,EAAE,CACJ;oBACE,6OAGI;oBACJ,oBAAC,2DAA2B,OAAG,CAC9B,CACJ;aACF;YACD;gBACE,KAAK,EAAE,iCAAiC;gBACxC,IAAI,EAAE,4BAA4B;gBAClC,IAAI,EAAE,CACJ;oBACE,4HAAiG;oBACjG,oBAAC,qDAAwB,OAAG,CAC3B,CACJ;aACF;YACD;gBACE,KAAK,EAAE,wDAAwD;gBAC/D,IAAI,EAAE,mCAAmC;gBACzC,IAAI,EAAE,CACJ;oBACE,oHAAyF;oBACzF,oBAAC,mEAA+B,OAAG,CAClC,CACJ;aACF;SACF;QACD,QAAQ,EAAE,OAAO,CAEf,6FAA6F,CAAC;QAChG,aAAa,EAAE,OAAO,CAEpB,kGAAkG,CAAC;QACrG,eAAe,EAAE,IAAI;QACrB,iBAAiB,EAAE,IAAI;KACxB,CAAC","sourcesContent":["import * as React from 'react';\nimport { DocumentCardBasicExample } from './examples/DocumentCard.Basic.Example';\n\nimport { IDocPageProps } from '../../common/DocPage.types';\nimport { DocumentCardCompactExample } from './examples/DocumentCard.Compact.Example';\nimport { DocumentCardCompleteExample } from './examples/DocumentCard.Complete.Example';\nimport { DocumentCardImageExample } from './examples/DocumentCard.Image.Example';\nimport { DocumentCardConversationExample } from './examples/DocumentCard.Conversation.Example';\n\nconst DocumentCardBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Basic.Example.tsx') as string;\nconst DocumentCardCompactExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Compact.Example.tsx') as string;\nconst DocumentCardCompleteExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Complete.Example.tsx') as string;\nconst DocumentCardImageExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Image.Example.tsx') as string;\nconst DocumentCardConversationExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Conversation.Example.tsx') as string;\n\nexport const DocumentCardPageProps: IDocPageProps = {\n  title: 'DocumentCard',\n  componentName: 'DocumentCard',\n  componentUrl:\n    'https://github.com/microsoft/fluentui/tree/master/packages/office-ui-fabric-react/src/components/DocumentCard',\n  examples: [\n    {\n      title: 'Default DocumentCard',\n      code: DocumentCardBasicExampleCode,\n      view: (\n        <>\n          <p>\n            The default configuration for a card represents a single file, with space to denote the last significant\n            event and the person involved.\n          </p>\n          <DocumentCardBasicExample />\n        </>\n      ),\n    },\n    {\n      title: 'DocumentCard with compact layout ',\n      code: DocumentCardCompactExampleCode,\n      view: (\n        <>\n          <p>\n            When showing a card on a mobile device or in a narrow layout, you may choose this compact card, which helps\n            the filename remain scannable while giving space for a preview thumbnail.\n          </p>\n          <p>\n            This example also shows some features which are usable with either compact or regular cards, such as showing\n            an icon instead of a document preview image.\n          </p>\n          <DocumentCardCompactExample />\n        </>\n      ),\n    },\n    {\n      title: 'DocumentCard with multiple items, commands, and views',\n      code: DocumentCardCompleteExampleCode,\n      view: (\n        <>\n          <p>\n            This example shows a couple of optional capabilities, including having a card represent multiple items,\n            exposing up to three relevant commands, and showing the number of views in the bottom right corner.\n          </p>\n          <DocumentCardCompleteExample />\n        </>\n      ),\n    },\n    {\n      title: 'DocumentCard with image or icon',\n      code: DocumentCardImageExampleCode,\n      view: (\n        <>\n          <p>This example shows a simplified method of displaying an image or icon on the DocumentCard.</p>\n          <DocumentCardImageExample />\n        </>\n      ),\n    },\n    {\n      title: 'Conversation cards with logo, text preview, and status',\n      code: DocumentCardConversationExampleCode,\n      view: (\n        <>\n          <p>This example shows the logo, text preview, and status used for conversation cards.</p>\n          <DocumentCardConversationExample />\n        </>\n      ),\n    },\n  ],\n  overview: require<\n    string\n  >('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardOverview.md'),\n  bestPractices: require<\n    string\n  >('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardBestPractices.md'),\n  isHeaderVisible: true,\n  isFeedbackVisible: true,\n};\n"]}
{"version":3,"file":"Tooltip.Custom.Example.js","sourceRoot":"../src/","sources":["components/Tooltip/examples/Tooltip.Custom.Example.tsx"],"names":[],"mappings":";;;IAWA,IAAM,YAAY,GAAkB;QAClC,eAAe,EAAE,cAAM,OAAA,CACrB,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;YACnC,yCAAe;YACf,yCAAe,CACZ,CACN,EALsB,CAKtB;KACF,CAAC;IACF,IAAM,UAAU,GAAgC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE,CAAC;IAEzE,QAAA,oBAAoB,GAA4B;QAC3D,2DAA2D;QAC3D,yEAAyE;QACzE,IAAM,SAAS,GAAG,mBAAK,CAAC,SAAS,CAAC,CAAC;QAEnC,OAAO,CACL,oBAAC,qBAAW,IACV,YAAY,EAAE,YAAY,EAC1B,KAAK,EAAE,sBAAY,CAAC,IAAI,EACxB,EAAE,EAAE,SAAS,EACb,eAAe,EAAE,yBAAe,CAAC,YAAY,EAC7C,MAAM,EAAE,UAAU;YAElB,oBAAC,sBAAa,wBAAmB,SAAS,EAAE,IAAI,EAAC,eAAe,GAAG,CACvD,CACf,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport {\n  TooltipHost,\n  TooltipDelay,\n  DirectionalHint,\n  ITooltipProps,\n  ITooltipHostStyles,\n} from 'office-ui-fabric-react/lib/Tooltip';\nimport { useId } from '@uifabric/react-hooks';\n\nconst tooltipProps: ITooltipProps = {\n  onRenderContent: () => (\n    <ul style={{ margin: 10, padding: 0 }}>\n      <li>1. One</li>\n      <li>2. Two</li>\n    </ul>\n  ),\n};\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\n\nexport const TooltipCustomExample: React.FunctionComponent = () => {\n  // Use useId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string and manually ensure uniqueness.)\n  const tooltipId = useId('tooltip');\n\n  return (\n    <TooltipHost\n      tooltipProps={tooltipProps}\n      delay={TooltipDelay.zero}\n      id={tooltipId}\n      directionalHint={DirectionalHint.bottomCenter}\n      styles={hostStyles}\n    >\n      <DefaultButton aria-describedby={tooltipId} text=\"Hover over me\" />\n    </TooltipHost>\n  );\n};\n"]}
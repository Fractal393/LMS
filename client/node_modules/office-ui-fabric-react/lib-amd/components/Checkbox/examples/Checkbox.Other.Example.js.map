{"version":3,"file":"Checkbox.Other.Example.js","sourceRoot":"../src/","sources":["components/Checkbox/examples/Checkbox.Other.Example.tsx"],"names":[],"mappings":";;;IAKA,4DAA4D;IAC5D,IAAM,UAAU,GAAiC;QAC/C,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAlC,CAAkC;QACjD,MAAM,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAlC,CAAkC;KACjD,CAAC;IACF,iDAAiD;IACjD,IAAM,WAAW,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IAE3B,QAAA,oBAAoB,GAA4B;QAC3D,mDAAmD;QAC7C,IAAA,yBAAgD,EAA/C,iBAAS,EAAE,oBAAoC,CAAC;QACvD,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,UAAC,EAAgC,EAAE,OAAgB;YACpF,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW;YACxB,oBAAC,mBAAQ,IAAC,KAAK,EAAC,qBAAqB,EAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,GAAI;YAEhF,oBAAC,mBAAQ,IAAC,KAAK,EAAC,sCAAsC,EAAC,OAAO,EAAC,KAAK,GAAG;YAEvE,oBAAC,mBAAQ,IAAC,KAAK,EAAC,yCAAyC,EAAC,UAAU,EAAE,UAAU,GAAI;YAEpF,oBAAC,mBAAQ,IAAC,KAAK,EAAC,qCAAqC,EAAC,aAAa,EAAE,oBAAoB,GAAI,CACvF,CACT,CAAC;IACJ,CAAC,CAAC;IAEF,SAAS,oBAAoB;QAC3B,OAAO,CACL;;YAC+B,GAAG;YAChC,oBAAC,WAAI,IAAC,IAAI,EAAC,2BAA2B,EAAC,MAAM,EAAC,QAAQ,WAE/C,CACF,CACR,CAAC;IACJ,CAAC","sourcesContent":["import * as React from 'react';\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\n\n// Optional extra props to pass through to the input element\nconst inputProps: ICheckboxProps['inputProps'] = {\n  onFocus: () => console.log('Checkbox is focused'),\n  onBlur: () => console.log('Checkbox is blurred'),\n};\n// Used to add spacing between example checkboxes\nconst stackTokens = { childrenGap: 10 };\n\nexport const CheckboxOtherExample: React.FunctionComponent = () => {\n  // Only for the first checkbox, which is controlled\n  const [isChecked, setIsChecked] = React.useState(true);\n  const onChange = React.useCallback((ev: React.FormEvent<HTMLElement>, checked: boolean): void => {\n    setIsChecked(!!checked);\n  }, []);\n\n  return (\n    <Stack tokens={stackTokens}>\n      <Checkbox label=\"Controlled checkbox\" checked={isChecked} onChange={onChange} />\n\n      <Checkbox label='Checkbox rendered with boxSide \"end\"' boxSide=\"end\" />\n\n      <Checkbox label=\"Checkbox with extra props for the input\" inputProps={inputProps} />\n\n      <Checkbox label=\"Checkbox with link inside the label\" onRenderLabel={_renderLabelWithLink} />\n    </Stack>\n  );\n};\n\nfunction _renderLabelWithLink() {\n  return (\n    <span>\n      Custom-rendered label with a{' '}\n      <Link href=\"https://www.microsoft.com\" target=\"_blank\">\n        link\n      </Link>\n    </span>\n  );\n}\n"]}
{"version":3,"file":"Panel.ConfirmDismiss.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.ConfirmDismiss.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,WAAW,GAAG,+DAA+D,CAAC;IACpF,IAAM,kBAAkB,GAAG;QACzB,IAAI,EAAE,mBAAU,CAAC,MAAM;QACvB,KAAK,EAAE,2CAA2C;KACnD,CAAC;IACF,IAAM,gBAAgB,GAAG;QACvB,UAAU,EAAE,IAAI;QAChB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;KACpC,CAAC;IAEW,QAAA,0BAA0B,GAA4B;QAC3D,IAAA,0BAAqD,EAApD,mBAAW,EAAE,sBAAuC,CAAC;QACtD,IAAA,0BAA6D,EAA5D,uBAAe,EAAE,0BAA2C,CAAC;QAEpE,IAAM,SAAS,GAAG,8BAAgB,CAAC,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC,CAAC;QAC/D,IAAM,SAAS,GAAG,8BAAgB,CAAC,UAAC,EAAyB;YAC3D,IAAI,EAAE,EAAE;gBACN,iFAAiF;gBACjF,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,kBAAkB,CAAC,IAAI,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,8BAAgB,CAAC,cAAM,OAAA,kBAAkB,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;QACrE,IAAM,kBAAkB,GAAG,8BAAgB,CAAC;YAC1C,cAAc,CAAC,KAAK,CAAC,CAAC;YACtB,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,OAAO,CACL;YACG,WAAW;YACZ,+BAAM;YACN,+BAAM;YACN,oBAAC,sBAAa,IAAC,IAAI,EAAC,YAAY,EAAC,OAAO,EAAE,SAAS,GAAI;YACvD,oBAAC,aAAK,IACJ,UAAU,EAAC,kCAAkC,EAC7C,MAAM,EAAE,WAAW,EACnB,SAAS,EAAE,SAAS,EACpB,oBAAoB,EAAC,OAAO;gBAE5B,+BAAI,WAAW,CAAK,CACd;YACR,oBAAC,eAAM,IACL,MAAM,EAAE,CAAC,eAAe,EACxB,SAAS,EAAE,UAAU,EACrB,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,EAAE,gBAAgB;gBAE5B,oBAAC,qBAAY;oBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAC,KAAK,GAAG;oBACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,IAAI,GAAG,CACnC,CACR,CACL,CACP,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { useConstCallback } from '@uifabric/react-hooks';\n\nconst explanation = 'When this panel is closed, a confirmation dialog will appear.';\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Are you sure you want to close the panel?',\n};\nconst dialogModalProps = {\n  isBlocking: true,\n  styles: { main: { maxWidth: 450 } },\n};\n\nexport const PanelConfirmDismissExample: React.FunctionComponent = () => {\n  const [isPanelOpen, setIsPanelOpen] = React.useState(false);\n  const [isDialogVisible, setIsDialogVisible] = React.useState(false);\n\n  const openPanel = useConstCallback(() => setIsPanelOpen(true));\n  const onDismiss = useConstCallback((ev?: React.SyntheticEvent) => {\n    if (ev) {\n      // Instead of closing the panel immediately, cancel that action and show a dialog\n      ev.preventDefault();\n      setIsDialogVisible(true);\n    }\n  });\n\n  const hideDialog = useConstCallback(() => setIsDialogVisible(false));\n  const hideDialogAndPanel = useConstCallback(() => {\n    setIsPanelOpen(false);\n    setIsDialogVisible(false);\n  });\n\n  return (\n    <div>\n      {explanation}\n      <br />\n      <br />\n      <DefaultButton text=\"Open panel\" onClick={openPanel} />\n      <Panel\n        headerText=\"Panel with custom close behavior\"\n        isOpen={isPanelOpen}\n        onDismiss={onDismiss}\n        closeButtonAriaLabel=\"Close\"\n      >\n        <p>{explanation}</p>\n      </Panel>\n      <Dialog\n        hidden={!isDialogVisible}\n        onDismiss={hideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={dialogModalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={hideDialogAndPanel} text=\"Yes\" />\n          <DefaultButton onClick={hideDialog} text=\"No\" />\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n"]}
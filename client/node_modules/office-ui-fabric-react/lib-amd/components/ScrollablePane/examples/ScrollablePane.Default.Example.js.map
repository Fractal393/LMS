{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";;;IAWA,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;IACzB,IAAM,UAAU,GAAG,wBAAc,CAAC;QAChC,OAAO,EAAE;YACP,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,SAAS;SACrB;QACD,IAAI,EAAE;YACJ,QAAQ,EAAE,GAAG;YACb,MAAM,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY;SAClD;QACD,MAAM,EAAE;YACN,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;YAChC,OAAO,EAAE,mBAAmB;YAC5B,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;YAC7C,YAAY,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;SACjD;QACD,WAAW,EAAE;YACX,OAAO,EAAE,WAAW;SACrB;KACF,CAAC,CAAC;IACH,IAAM,oBAAoB,GAAmC,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC;IACvF,IAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IACnH,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAAC;QAC5D,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,EAAE,oBAAK,CAAC,GAAG,CAAC;QAChB,KAAK,OAAA;KACN,CAAC,EAJ2D,CAI3D,CAAC,CAAC;IACJ,IAAM,iBAAiB,GAAG,UAAC,IAAgC,IAAK,OAAA,CAC9D,6BACE,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,KAAK,EAAE;YACL,eAAe,EAAE,IAAI,CAAC,KAAK;SAC5B;QAED,oBAAC,eAAM,IAAC,cAAc,EAAE,2BAAkB,CAAC,IAAI;YAC7C,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;gBAAqB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAO,CACpE;QACT,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAO,CACrD,CACP,EAZ+D,CAY/D,CAAC;IACF,IAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACrC,QAAA,4BAA4B,GAA4B,cAAM,OAAA,CACzE,6BAAK,SAAS,EAAE,UAAU,CAAC,OAAO;QAChC,oBAAC,+BAAc,IAAC,MAAM,EAAE,oBAAoB,IAAM,YAAY,CAAkB,CAC5E,CACP,EAJ0E,CAI1E,CAAC","sourcesContent":["import * as React from 'react';\nimport { getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { lorem } from '@uifabric/example-data';\nimport { ScrollablePane, IScrollablePaneStyles } from 'office-ui-fabric-react/lib/ScrollablePane';\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\n\nexport interface IScrollablePaneExampleItem {\n  color: string;\n  text: string;\n  index: number;\n}\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  wrapper: {\n    height: '40vh',\n    position: 'relative',\n    maxHeight: 'inherit',\n  },\n  pane: {\n    maxWidth: 400,\n    border: '1px solid ' + theme.palette.neutralLight,\n  },\n  sticky: {\n    color: theme.palette.neutralDark,\n    padding: '5px 20px 5px 10px',\n    fontSize: '13px',\n    borderTop: '1px solid ' + theme.palette.black,\n    borderBottom: '1px solid ' + theme.palette.black,\n  },\n  textContent: {\n    padding: '15px 10px',\n  },\n});\nconst scrollablePaneStyles: Partial<IScrollablePaneStyles> = { root: classNames.pane };\nconst colors = ['#eaeaea', '#dadada', '#d0d0d0', '#c8c8c8', '#a6a6a6', '#c7e0f4', '#71afe5', '#eff6fc', '#deecf9'];\nconst items = Array.from({ length: 5 }).map((item, index) => ({\n  color: colors.splice(Math.floor(Math.random() * colors.length), 1)[0],\n  text: lorem(200),\n  index,\n}));\nconst createContentArea = (item: IScrollablePaneExampleItem) => (\n  <div\n    key={item.index}\n    style={{\n      backgroundColor: item.color,\n    }}\n  >\n    <Sticky stickyPosition={StickyPositionType.Both}>\n      <div className={classNames.sticky}>Sticky Component #{item.index + 1}</div>\n    </Sticky>\n    <div className={classNames.textContent}>{item.text}</div>\n  </div>\n);\nconst contentAreas = items.map(createContentArea);\nexport const ScrollablePaneDefaultExample: React.FunctionComponent = () => (\n  <div className={classNames.wrapper}>\n    <ScrollablePane styles={scrollablePaneStyles}>{...contentAreas}</ScrollablePane>\n  </div>\n);\n"]}